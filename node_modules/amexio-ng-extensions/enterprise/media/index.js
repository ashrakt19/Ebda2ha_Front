import { Component, EventEmitter, HostListener, Input, NgModule, Output, forwardRef } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpModule } from '@angular/http';
import { FormsModule, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';

/**
 * Created by dattaram on 23/8/17.
 */
var ContentComponent = (function () {
    function ContentComponent() {
        this.enableWatch = false;
        this.enableMyList = false;
        this.onWatchClick = new EventEmitter();
        this.onAddListClick = new EventEmitter();
        this.onLikeClick = new EventEmitter();
        this.onUnlikeLikeClick = new EventEmitter();
        this.onCloseClick = new EventEmitter();
        this.closeEnable = false;
        this.smallScreen = false;
        console.log($(window).width());
    }
    /**
     * @return {?}
     */
    ContentComponent.prototype.ngOnInit = function () {
        if (window.innerWidth < 768) {
            this.smallScreen = true;
            this.size = 'small';
        }
        else {
            this.smallScreen = false;
            this.size = 'default';
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    ContentComponent.prototype.ngOnChanges = function (changes) {
        if (changes.videoLink && !changes.videoLink.isFirstChange()) {
            this.videoLink = changes.videoLink.currentValue;
            console.log(this.videoLink);
        }
    };
    /**
     * @return {?}
     */
    ContentComponent.prototype.playVideo = function () {
        this.onWatchClick.emit(this.videoLink);
    };
    /**
     * @return {?}
     */
    ContentComponent.prototype.addToList = function () {
        this.overviewData = {
            'title': this.title,
            'description': this.description,
            'Video Link': this.videoLink,
            'rate': this.rate
        };
        this.onAddListClick.emit(this.overviewData);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ContentComponent.prototype.onResize = function (event) {
        if (event.target.innerWidth < 995) {
            this.size = 'small';
            this.smallScreen = true;
        }
        else {
            this.size = 'default';
            this.smallScreen = false;
        }
    };
    /**
     * @return {?}
     */
    ContentComponent.prototype.getClassName = function () {
        if (this.smallScreen) {
            return 'buttonSmall';
        }
        else {
            return 'button';
        }
    };
    /**
     * @return {?}
     */
    ContentComponent.prototype.unlikeClick = function () {
        this.overviewData = {
            'title': this.title,
            'rate': this.rate
        };
        this.onUnlikeLikeClick.emit(this.overviewData);
    };
    /**
     * @return {?}
     */
    ContentComponent.prototype.likeClick = function () {
        this.overviewData = {
            'title': this.title,
            'rate': this.rate
        };
        this.onLikeClick.emit(this.overviewData);
    };
    /**
     * @return {?}
     */
    ContentComponent.prototype.closeDetailPage = function () {
        this.onCloseClick.emit(this.title);
    };
    return ContentComponent;
}());
ContentComponent.decorators = [
    { type: Component, args: [{
                selector: 'amexio-ee-content',
                template: "\n      <div class=\"maincontent\"  [ngStyle]=\"{'background-image':'url('+bgImgUrl+')'}\" (window:resize)=\"onResize($event)\">\n       <span *ngIf=\"closeEnable\" class=\"close-button\">\n        <i class=\"fa fa-times fa-lg\" (click)=\"closeDetailPage()\" aria-hidden=\"true\"></i>\n      </span>\n          <div class=\"col-lg-6 col-sm-12 content-area\" style=\"color: white;padding-left: 30px;\">\n              <span class=\"title\">{{title}}</span><br>\n              <span class=\"subtitle\"><span class=\"match\" *ngIf=\"matchPercentage\">{{matchPercentage}} Match</span> {{releaseYear}} <span class=\"age\" *ngIf=\"ageLimit\">{{ageLimit}}</span> {{seasonNo}}</span><br>\n              {{description}}<br>\n\n              <ng-container *ngIf=\"contents\">\n              <span>\n                <li *ngFor=\"let data of contents\"><strong style=\"color: #999;\">{{data.key}}: </strong> <strong>  {{data.value}}</strong></li><br>\n          </span>\n              </ng-container>\n              <ul style=\"padding-left: 0\">\n                  <li *ngIf=\"enableWatch\"><amexio-ee-btn [cClass]=\"'buttoncustom'\" [label]=\"'Play'\" [type]=\"'danger'\" [icon]=\"'fa fa-play'\" [tooltipMessage]=\"'play'\" [size]=\"size\" (onClick)=\"playVideo()\"></amexio-ee-btn></li>\n                  <li *ngIf=\"enableMyList\" ><amexio-ee-btn [cClass]=\"'secondarybutton'\" [label]=\"'MY LIST'\" [icon]=\"'fa fa-plus'\" [type]=\"'secondary'\" [tooltipMessage]=\"'My List'\" [size]=\"size\" (onClick)=\"addToList()\"></amexio-ee-btn></li>\n                  <li><a   [ngClass]=\"getClassName()\" (click)=\"likeClick()\"><i class=\"fa fa-thumbs-o-up fa-lg\" aria-hidden=\"true\"></i></a>\n                  </li>\n                  <li><a   [ngClass]=\"getClassName()\" (click)=\"unlikeClick()\"><i class=\"fa fa-thumbs-o-down fa-lg \" aria-hidden=\"true\"></i></a></li>\n\n              </ul>\n              <ng-container *ngIf=\"rate && max\">\n                  <amexio-ee-rating-input [(ngModel)]=\"rate\"\n                                       [max]=\"max\" name=\"rate\"\n                                       [readonly]=\"isReadonly\">\n                  </amexio-ee-rating-input>\n              </ng-container>\n          </div>\n      </div>\n  ",
                styles: [
                    "\n          ul li {\n              display:inline;\n          }\n\n          .maincontent {\n              position: relative;\n              width: 100%; /* for IE 6 */\n              height: 65vh;\n              width: 100%;\n              background-size: 100% 100%;\n              background-repeat: no-repeat;\n          }\n          .maincontent div {\n              position: absolute;\n              top: 10px;\n              left: 0;\n              width: 100%;\n          }\n\n          .title{\n              width: 100%;\n              font-size: 180%;\n              font-weight: 700;\n              line-height: 130%;\n              color: #fff;\n              text-shadow: 2px 4px 3px rgba(0,0,0,0.3);\n          }\n          @media screen and (min-width: 1400px){\n              .maincontent div {\n                  height: 32vw;\n                  padding-bottom: 20px;\n              }\n          }\n          @media (max-width: 799px)\n          {\n              .maincontent div {\n                  font-size: 11px;\n              }\n\n              .maincontent div {\n                  top: 10px;\n                  width: 33vw;\n                  min-width: 330px;\n                  color: #999;\n                  line-height: 1.3;\n              }\n              .maincontent div table {\n                  height: 50px;\n              }\n          }\n          @media(max-width: 480px) {\n\n              img{\n                  width: 170px;\n                  height: 35px;\n              }\n              .title{\n                  width: 100%;\n                  font-size: 180%;\n                  font-weight: 700;\n                  line-height: 130%;\n                  color: #fff;\n                  text-shadow: 2px 4px 3px rgba(0,0,0,0.3);\n              }\n              h3 {\n                  font-size: 9pt;\n              }\n              span{\n                  font-size: 6pt;\n              }\n              li b{\n                  font-size: 6pt;\n              }\n              li {\n                  font-size: 6pt;\n              }\n              .maincontent {\n                  position: relative;\n                  width: 100%; /* for IE 6 */\n                  height: 35vh;\n                  width: 100%;\n                  background-size: 100% 100%;\n                  background-repeat: no-repeat;\n              }\n          }\n          header{\n              width: 100%;\n              padding: 0px 48px;\n              background-image: linear-gradient(rgba(0, 0, 0, 0.0), #141414);\n              background-size: cover;\n              background-position: center;\n              height: 100vh;\n          }\n          header .billboard{\n              margin-top: 40px;\n              width: 40%;\n              padding: 2px;\n              font-size: 110%;\n              line-height: 160%;\n          }\n          header .billboard .tab-area a{\n              width: 120px;\n              float: left;\n              font-size: 90%;\n              color: #ffffff;\n              text-align: center;\n              text-transform: uppercase;\n              text-decoration: none;\n              padding: 8px;\n              margin-right: .75em;\n              margin-bottom: 30px;\n              transition: border 0.5s;\n          }\n          header .billboard .tab-area a:hover{\n              border-bottom: solid 2px #eeeeee;\n          }\n          header .billboard .tab-area .active{\n              border-bottom: solid 2px #e50914;\n          }\n          /* Text Related CSS */\n          header .billboard .content-area{\n              color: #999;\n              font-size: 100%;\n          }\n          header .billboard .content-area .subtitle{\n              font-size: 120%;\n              line-height: 200%;\n          }\n          header .billboard .content-area .credits{\n              font-size: 80%;\n          }\n          header .billboard .content-area .credits strong{\n              color: #fff;\n          }\n          /* Button Related CSS */\n          header .billboard .button{\n              display: inline-block;\n              margin-right: .75em;\n              margin-top: 20px;\n              padding: 5px 20px;\n              font-size: 70%;\n              font-weight: 500;\n              text-decoration: none;\n              text-transform: uppercase;\n              color: #fff;\n          }\n          .button i{\n              display: inline-block;\n              margin-top: 20px;\n              width: 40px;\n              height: 40px;\n              padding: 10px 0 0 11px;\n              border: solid 2px rgba(255,255,255,.4);\n              border-radius: 100px;\n              font-size: 18px;\n              font-weight: 500;\n              text-decoration: none;\n              text-transform: uppercase;\n              color: #fff;\n              transition: transform 0.5s;\n          }\n          .button i:hover{\n              border: solid 2px #fff;\n              transform: scale(1.1);\n          }\n\n          .buttonSmall i{\n              display: inline-block;\n              width: 25px;\n              height: 25px;\n              padding: 7px 0 0 5px;\n              border: solid 2px rgba(255,255,255,.4);\n              border-radius: 100px;\n              font-size: 12px;\n              font-weight: 500;\n              text-decoration: none;\n              text-transform: uppercase;\n              color: #fff;\n              transition: transform 0.5s;\n          }\n          .buttonSmall i:hover{\n              border: solid 2px #fff;\n              transform: scale(1.1);\n          }\n\n          .close-button{\n              cursor: pointer;\n              padding-left: 98%;color:gray;background: radial-gradient(ellipse at top right,rgba(0,0,0,.4) 0,rgba(0,0,0,0)70%,rgba(0,0,0,0) 100%);\n          }\n\n    "
                ]
            },] },
];
/**
 * @nocollapse
 */
ContentComponent.ctorParameters = function () { return []; };
ContentComponent.propDecorators = {
    'bgImgUrl': [{ type: Input },],
    'title': [{ type: Input },],
    'description': [{ type: Input },],
    'contents': [{ type: Input },],
    'videoLink': [{ type: Input },],
    'rate': [{ type: Input },],
    'max': [{ type: Input },],
    'isReadonly': [{ type: Input },],
    'enableWatch': [{ type: Input },],
    'enableMyList': [{ type: Input },],
    'ageLimit': [{ type: Input },],
    'releaseYear': [{ type: Input },],
    'seasonNo': [{ type: Input },],
    'matchPercentage': [{ type: Input },],
    'closeEnable': [{ type: Input },],
    'onWatchClick': [{ type: Output },],
    'onAddListClick': [{ type: Output },],
    'onLikeClick': [{ type: Output },],
    'onUnlikeLikeClick': [{ type: Output },],
    'onCloseClick': [{ type: Output },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author -  Dattaram Gawas
 *
 */
var ButtonMediaComponent = (function () {
    function ButtonMediaComponent() {
        this.onClick = new EventEmitter();
        this.elementId = 'button-' + Math.floor(Math.random() * 90000) + 10000;
    }
    /**
     * @return {?}
     */
    ButtonMediaComponent.prototype.ngOnInit = function () {
        if (this.cClass) {
            this.btnStyleClass = this.cClass + '  btn ';
        }
        else {
            this.btnStyleClass = 'btn ';
        }
        this.btnSizeStyleClass = '';
        if (this.type.toLocaleLowerCase() === 'warning') {
            this.btnStyleClass = this.btnStyleClass + 'btn-warning';
        }
        else if (this.type.toLocaleLowerCase() === 'primary') {
            this.btnStyleClass = this.btnStyleClass + 'btn-primary';
        }
        else if (this.type.toLocaleLowerCase() === 'success') {
            this.btnStyleClass = this.btnStyleClass + 'btn-success';
        }
        else if (this.type.toLocaleLowerCase() === 'danger') {
            this.btnStyleClass = this.btnStyleClass + 'btn-danger';
        }
        else if (this.type.toLocaleLowerCase() === 'link') {
            this.btnStyleClass = this.btnStyleClass + 'btn-link';
        }
        else {
            this.btnStyleClass = this.btnStyleClass + 'btn-secondary';
        }
        this.iconStyleClass = this.icon;
        if (this.tooltipMessage == null) {
            this.hasToolTip = false;
        }
        if (this.size != null) {
            if (this.size === 'large') {
                this.btnStyleClass = this.btnStyleClass.concat(' btn-lg');
            }
            else if (this.size === 'small') {
                this.btnStyleClass = this.btnStyleClass.concat(' btn-sm');
            }
        }
        if (this.block) {
            this.btnStyleClass = this.btnStyleClass.concat(' btn-block');
        }
        if (this.popoverPlacement == null) {
            this.popoverPlacement = 'bottom';
        }
    };
    /**
     * @param {?} change
     * @return {?}
     */
    ButtonMediaComponent.prototype.ngOnChanges = function (change) {
        /*console.log(change.isLoading);
          if(change.isLoading){
            this.disabled = true;
          }*/ // TODO : Fix
    };
    /**
     * @return {?}
     */
    ButtonMediaComponent.prototype.ngAfterViewInit = function () {
        // $('[data-toggle="popover"]').popover();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ButtonMediaComponent.prototype.btnClick = function (event) {
        this.onClick.emit(event);
        if (this.onClickRoute != null) {
            // this.router.navigate([this.onClickRoute]);
        }
    };
    return ButtonMediaComponent;
}());
ButtonMediaComponent.decorators = [
    { type: Component, args: [{
                selector: 'amexio-ee-btn',
                template: "      \n          <button type=\"button\" (click)=\"btnClick($event)\"\n                  [class]=\"btnStyleClass\"\n                  [attr.fieldName] = \"fieldName\"\n                  [attr.disabled] = \"disabled ? true: null\"\n                  data-toggle=\"tooltip\" [attr.data-placement]=\"popoverPlacement\" [attr.title]=\"tooltipMessage\">\n              <ng-container *ngIf=\"isLoading\">\n                <i class=\"fa fa-refresh fa-spin \" aria-hidden=\"true\"></i>&nbsp;\n              </ng-container>\n              \n              <ng-container *ngIf=\"icon!=null\">\n                <i [class]=\"iconStyleClass\" aria-hidden=\"true\"></i>                \n              </ng-container>\n              {{label}}\n          </button>\n  ",
                styles: ["\n  .glyphicon-refresh-animate {\n    -animation: spin .7s infinite linear;\n    -webkit-animation: spin2 .7s infinite linear;\n}\n\n@-webkit-keyframes spin2 {\n    from { -webkit-transform: rotate(0deg);}\n    to { -webkit-transform: rotate(360deg);}\n}\n\n@keyframes spin {\n    from { transform: scale(1) rotate(0deg);}\n    to { transform: scale(1) rotate(360deg);}\n}"
                ]
            },] },
];
/**
 * @nocollapse
 */
ButtonMediaComponent.ctorParameters = function () { return []; };
ButtonMediaComponent.propDecorators = {
    'label': [{ type: Input },],
    'icon': [{ type: Input },],
    'type': [{ type: Input },],
    'onClickRoute': [{ type: Input },],
    'tooltipMessage': [{ type: Input },],
    'disabled': [{ type: Input },],
    'isLoading': [{ type: Input },],
    'size': [{ type: Input },],
    'block': [{ type: Input },],
    'fieldName': [{ type: Input },],
    'popoverPlacement': [{ type: Input },],
    'cClass': [{ type: Input },],
    'onClick': [{ type: Output },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author -  Pratik Kelwalkar
 *
 */
var RatingMediaComponent = (function () {
    function RatingMediaComponent() {
        // -------------------------------------------------------------------------
        // Inputs
        // -------------------------------------------------------------------------
        this.iconClass = "amexio-star-icon";
        this.fullIcon = "★";
        this.emptyIcon = "☆";
        this.titles = [];
        // -------------------------------------------------------------------------
        // Outputs
        // -------------------------------------------------------------------------
        this.onHover = new EventEmitter();
        this.onLeave = new EventEmitter();
        this.hovered = 0;
        this.hoveredPercent = undefined;
        this._max = 5;
    }
    Object.defineProperty(RatingMediaComponent.prototype, "max", {
        /**
         * @return {?}
         */
        get: function () {
            return this._max;
        },
        /**
         * @param {?} max
         * @return {?}
         */
        set: function (max) {
            this._max = max;
            this.buildRanges();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} value
     * @return {?}
     */
    RatingMediaComponent.prototype.writeValue = function (value) {
        /*if (value % 1 !== value) {
         this.model = Math.round(value);
         return;
         }*/
        this.model = value;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    RatingMediaComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    RatingMediaComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    /**
     * @param {?} c
     * @return {?}
     */
    RatingMediaComponent.prototype.validate = function (c) {
        if (this.required && !c.value) {
            return {
                required: true
            };
        }
        return null;
    };
    /**
     * @return {?}
     */
    RatingMediaComponent.prototype.ngOnInit = function () {
        this.buildRanges();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    RatingMediaComponent.prototype.onKeydown = function (event) {
        if ([37, 38, 39, 40].indexOf(event.which) === -1 || this.hovered)
            return;
        event.preventDefault();
        event.stopPropagation();
        var /** @type {?} */ increment = this.float ? 0.5 : 1;
        this.rate(this.model + (event.which === 38 || event.which === 39 ? increment : increment * -1));
    };
    /**
     * @param {?} item
     * @return {?}
     */
    RatingMediaComponent.prototype.calculateWidth = function (item) {
        if (this.hovered > 0) {
            if (this.hoveredPercent !== undefined && this.hovered === item)
                return this.hoveredPercent;
            return this.hovered >= item ? 100 : 0;
        }
        return this.model >= item ? 100 : 100 - Math.round((item - this.model) * 10) * 10;
    };
    /**
     * @param {?} hovered
     * @return {?}
     */
    RatingMediaComponent.prototype.setHovered = function (hovered) {
        if (!this.readonly && !this.disabled) {
            this.hovered = hovered;
            this.onHover.emit(hovered);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    RatingMediaComponent.prototype.changeHovered = function (event) {
        if (!this.float)
            return;
        var /** @type {?} */ target = (event.target);
        var /** @type {?} */ relativeX = event.pageX - target.offsetLeft;
        var /** @type {?} */ percent = Math.round((relativeX * 100 / target.offsetWidth) / 10) * 10;
        this.hoveredPercent = percent > 50 ? 100 : 50;
    };
    /**
     * @return {?}
     */
    RatingMediaComponent.prototype.resetHovered = function () {
        this.hovered = 0;
        this.hoveredPercent = undefined;
        this.onLeave.emit(this.hovered);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    RatingMediaComponent.prototype.rate = function (value) {
        if (!this.readonly && !this.disabled && value >= 0 && value <= this.ratingRange.length) {
            var /** @type {?} */ newValue = this.hoveredPercent ? (value - 1) + this.hoveredPercent / 100 : value;
            this.onChange(newValue);
            this.model = newValue;
        }
    };
    /**
     * @return {?}
     */
    RatingMediaComponent.prototype.buildRanges = function () {
        this.ratingRange = this.range(1, this.max);
    };
    /**
     * @param {?} start
     * @param {?} end
     * @return {?}
     */
    RatingMediaComponent.prototype.range = function (start, end) {
        var /** @type {?} */ foo = [];
        for (var /** @type {?} */ i = start; i <= end; i++) {
            foo.push(i);
        }
        return foo;
    };
    return RatingMediaComponent;
}());
RatingMediaComponent.decorators = [
    { type: Component, args: [{
                selector: 'amexio-ee-rating-input',
                template: "\n    <span (mouseleave)=\"resetHovered()\"\n          class=\"amexio-rating\"\n          [class.disabled]=\"disabled\"\n          [class.readonly]=\"readonly\"\n          tabindex=\"0\"\n          role=\"slider\"\n          aria-valuemin=\"0\"\n          [attr.aria-valuemax]=\"ratingRange.length\"\n          [attr.aria-valuenow]=\"model\">\n    <span *ngFor=\"let item of ratingRange; let index = index\">\n        <i (mouseenter)=\"setHovered(item)\"\n           (mousemove)=\"changeHovered($event)\"\n           (click)=\"rate(item)\"\n           [attr.data-icon]=\"fullIcon\"\n           class=\"{{ iconClass }} half{{ calculateWidth(item) }}\"\n           [title]=\"titles[index] || item\">{{ emptyIcon }}</i>\n    </span>\n</span>\n  ",
                providers: [
                    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(function () { return RatingMediaComponent; }), multi: true },
                    { provide: NG_VALIDATORS, useExisting: forwardRef(function () { return RatingMediaComponent; }), multi: true },
                ],
                styles: [
                    "/**\n A Style Sheet for all form inputs common used classes\n */\n\n      /** Form Validations & Icon Positioning **/\n      .has-feedback-custom {\n          position: relative;\n      }\n      .has-feedback-custom .form-control {\n          padding-right: 47.5px;\n      }\n\n      .form-control-feedback-custom {\n          position: absolute;\n          top: 0;\n          right: 0;\n          z-index: 2;\n          display: block;\n          width: 38px;\n          height: 38px;\n          line-height: 38px;\n          text-align: center;\n          pointer-events: none;\n      }\n\n      .has-feedback-custom label ~ .form-control-feedback-custom {\n          top: 32px;\n      }\n      .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n          top: 0;\n      }\n      .amexio-rating {\n          cursor: pointer;\n          outline: none;\n      }\n      .amexio-rating.readonly {\n          cursor: default;\n      }\n      .amexio-rating.disabled {\n          cursor: not-allowed;\n      }\n      .amexio-rating i{\n          font-style: normal;\n      }\n      .amexio-star-icon {\n          color: #666666;\n          font-size: 2em;\n          position: relative;\n          border-color: 1px solid black;\n      }\n      .amexio-star-icon:before {\n          color: #FDE16D;\n          content: attr(data-icon) \" \";\n          position: absolute;\n          left: 0;\n          overflow: hidden;\n          width: 0;\n      }\n      .amexio-rating.disabled .amexio-star-icon:before {\n          color: #ECECEC;\n          text-shadow: none;\n      }\n      .amexio-star-icon.half10:before {\n          width: 10%;\n      }\n      .amexio-star-icon.half20:before {\n          width: 20%;\n      }\n      .amexio-star-icon.half30:before {\n          width: 30%;\n      }\n      .amexio-star-icon.half40:before {\n          width: 40%;\n      }\n      .amexio-star-icon.half50:before {\n          width: 50%;\n      }\n      .amexio-star-icon.half60:before {\n          width: 60%;\n      }\n      .amexio-star-icon.half70:before {\n          width: 70%;\n      }\n      .amexio-star-icon.half80:before {\n          width: 80%;\n      }\n      .amexio-star-icon.half90:before {\n          width: 90%;\n      }\n      .amexio-star-icon.half100:before {\n          width: 100%;\n      }\n      @-moz-document url-prefix() { /* Firefox Hack */\n          .amexio-star-icon {\n              font-size: 50px;\n              line-height: 34px;\n          }\n      }\n    "
                ]
            },] },
];
/**
 * @nocollapse
 */
RatingMediaComponent.ctorParameters = function () { return []; };
RatingMediaComponent.propDecorators = {
    'iconClass': [{ type: Input },],
    'fullIcon': [{ type: Input },],
    'emptyIcon': [{ type: Input },],
    'readonly': [{ type: Input },],
    'disabled': [{ type: Input },],
    'required': [{ type: Input },],
    'float': [{ type: Input },],
    'titles': [{ type: Input },],
    'max': [{ type: Input },],
    'onHover': [{ type: Output },],
    'onLeave': [{ type: Output },],
    'onKeydown': [{ type: HostListener, args: ["keydown", ["$event"],] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Pratik Kelwalkar
 *
 */
var AmexioYoutubePlayerComponent = (function () {
    function AmexioYoutubePlayerComponent() {
        this.onCloseVideoPlayer = new EventEmitter();
    }
    /**
     * @return {?}
     */
    AmexioYoutubePlayerComponent.prototype.ngOnInit = function () {
        if (this.height == null || this.height === 'undefined') {
            this.height = '98%';
        }
    };
    /**
     * @return {?}
     */
    AmexioYoutubePlayerComponent.prototype.routeBackToApp = function () {
        this.onCloseVideoPlayer.emit(this.url);
    };
    return AmexioYoutubePlayerComponent;
}());
AmexioYoutubePlayerComponent.decorators = [
    { type: Component, args: [{
                selector: 'amexio-ee-youtube-player',
                template: "\n        <div >\n      <span  class=\"close-button\">\n        <i class=\"fa fa-times fa-lg\" (click)=\"routeBackToApp()\" aria-hidden=\"true\"></i>\n      </span>\n            <div class=\"text-center\">\n                <iframe  [height]=\"height\" width=\"98%\"\n                         style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0;padding-top: 30px;padding-left: 30px\"\n                         [src]=\"url\" frameborder=\"0\"\n                         allowfullscreen>\n                </iframe>\n            </div>\n        </div>\n    ",
                styles: ["\n        .close-button{\n            cursor: pointer;\n            padding-left: 98%;color:gray;background: radial-gradient(ellipse at top right,rgba(0,0,0,.4) 0,rgba(0,0,0,0)70%,rgba(0,0,0,0) 100%);\n        }\n        .close-button i:hover{\n            color: red;\n            cursor: pointer;\n        }\n    "]
            },] },
];
/**
 * @nocollapse
 */
AmexioYoutubePlayerComponent.ctorParameters = function () { return []; };
AmexioYoutubePlayerComponent.propDecorators = {
    'url': [{ type: Input },],
    'height': [{ type: Input },],
    'onCloseVideoPlayer': [{ type: Output },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Pratik Kelwalkar
 *
 */
var MultiMediaCarousel = (function () {
    function MultiMediaCarousel() {
        this.hasDetail = true;
        this.onVideoLoad = new EventEmitter();
        this.right = false;
        this.left = false;
        this.elementId = 'multi-media-ee-carousel-' + Math.floor(Math.random() * 90000) + 10000;
    }
    /**
     * @return {?}
     */
    MultiMediaCarousel.prototype.ngOnInit = function () {
        if (this.carouselStyle == null) {
            this.carouselStyle = 'horizontal';
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    MultiMediaCarousel.prototype.ngOnChanges = function (changes) {
        if (changes['data'] != null) {
            this.data = changes['data'].currentValue;
        }
    };
    /**
     * @return {?}
     */
    MultiMediaCarousel.prototype.leftClick = function () {
        var /** @type {?} */ ts = document.getElementById(this.elementId);
        $('#' + this.elementId).animate({ scrollLeft: '-=350' }, 600);
        if (ts.scrollLeft == 0) {
            document.getElementById(this.elementId + 'leftarrow').style.visibility = 'hidden';
        }
        document.getElementById(this.elementId + 'rightarrow').style.visibility = 'visible';
    };
    /**
     * @return {?}
     */
    MultiMediaCarousel.prototype.rightClick = function () {
        var /** @type {?} */ ts = document.getElementById(this.elementId);
        $('#' + this.elementId).animate({ scrollLeft: '+=350' }, 600);
        if ((ts.scrollWidth - ts.offsetWidth - ts.scrollLeft) <= 0) {
            document.getElementById(this.elementId + 'rightarrow').style.visibility = 'hidden';
        }
        document.getElementById(this.elementId + 'leftarrow').style.visibility = 'visible';
    };
    /**
     * @return {?}
     */
    MultiMediaCarousel.prototype.closeDetailPage = function () {
        this.data.forEach(function (item) {
            item.selected = null;
        });
        $('#' + this.elementId + 'carousel-detail-content').collapse('hide');
    };
    /**
     * @param {?} item
     * @return {?}
     */
    MultiMediaCarousel.prototype.openDetailsSection = function (item) {
        var _this = this;
        this.videoUrl = item.video;
        this.currentDetailsImagePath = item.details_img;
        this.currentDetailsTitle = item.title;
        this.currentDetailsDesc = item.desc;
        this.currentContent = item.content;
        this.seasonNo = item.seasonNo;
        this.matchPercentage = item.matchPercentage;
        this.ageLimit = item.ageLimit;
        this.releaseYear = item.releaseYear;
        this.data.forEach(function (item) {
            item.selected = null;
        });
        item.selected = "selected";
        $('#' + this.elementId + 'carousel-detail-content').collapse('show');
        setTimeout(function () {
            $('html, body').animate({
                scrollTop: $('#' + _this.elementId + 'carousel-detail-content').offset().top
            }, 500);
        }, 500);
    };
    /**
     * @param {?} item
     * @return {?}
     */
    MultiMediaCarousel.prototype.loadVideo = function (item) {
        this.onVideoLoad.emit(item.video);
    };
    /**
     * @param {?} video
     * @return {?}
     */
    MultiMediaCarousel.prototype.playVideo = function (video) {
        this.onVideoLoad.emit(video);
    };
    return MultiMediaCarousel;
}());
MultiMediaCarousel.decorators = [
    { type: Component, args: [{
                selector: 'amexio-media-ee-carousel',
                template: "<div class=\"section-header\" style=\"z-index: 1;\">{{title}}</div> <div class=\"contain row\"> <div class=\"left-arrow\" [attr.id]=\"elementId+'leftarrow'\" style=\"cursor: pointer\"> <div [ngClass]=\"{'controls' : carouselStyle=='horizontal','controls-v' : carouselStyle=='vertical'}\" (click)=\"leftClick();\"><i class=\"fa fa-chevron-left fa-2x\" aria-hidden=\"true\"></i></div> </div> <div class=\"row1\" [attr.id]=\"elementId\"> <div class=\"row__inner\"> <ng-container *ngIf=\"data\"> <div class=\"tile\" *ngFor=\"let item of data;let i = index\"> <div class=\"tile__media\" (click)=\"loadVideo(item)\"> <img class=\"tile__img\" [attr.src]=\"item.img\" /> </div> <div class=\"{{item.selected}}\"> <i [ngStyle]=\"{'visibility':item.selected ? 'visible':'hidden'}\" class=\"fa fa-caret-down\" aria-hidden=\"false\"></i> </div> <div [ngClass]=\"{'tile__details' : carouselStyle=='horizontal','tile__details_v' : carouselStyle=='vertical'}\"> <div class=\"textonly\"> <div class=\"playpanel\"> <div style=\"cursor: pointer\" (click)=\"loadVideo(item)\" class=\"playbutton\"><i class=\"fa fa-play\" aria-hidden=\"true\"></i></div> </div> <span class=\"title\" *ngIf=\"item.title\">{{item.title}}</span><br> <span class=\"match\">{{item.matchPercentage}} Match</span> {{item.releaseYear}} <span class=\"age mini\">{{item.ageLimit}}</span> {{item.seasonNo}}<br> <div class=\"subtitle\">{{item.desc}}</div> </div> <div class=\"actionpanel\"   *ngIf=\"item.content\"> <div style=\"cursor: pointer;\" (click)=\"openDetailsSection(item)\"><i class=\"fa fa-chevron-down fa-2x\" aria-hidden=\"true\"></i></div> </div> </div> </div> </ng-container> </div> </div> <div class=\"right-arrow\" [attr.id]=\"elementId+'rightarrow'\" style=\"cursor: pointer\"> <div [ngClass]=\"{'controls' : carouselStyle=='horizontal','controls-v' : carouselStyle=='vertical'}\" (click)=\"rightClick();\"><i class=\"fa fa-chevron-right fa-2x\" aria-hidden=\"true\"></i></div></div> </div> <div [attr.id]=\"elementId+'carousel-detail-content'\" class=\"collapse\" *ngIf=\"hasDetail\"> <amexio-ee-content [bgImgUrl]=\"currentDetailsImagePath\" [title]=\"currentDetailsTitle\" [description]=\"currentDetailsDesc\" [contents]=\"currentContent\" [videoLink]=\"videoUrl\" (onWatchClick)=\"playVideo(videoUrl)\" (onCloseClick)=\"closeDetailPage()\" [rate]=\"rate\" [enableWatch]=\"true\" [enableMyList]=\"true\" [closeEnable]=\"true\" [seasonNo]=\"seasonNo\" [releaseYear]=\"releaseYear\" [ageLimit]=\"ageLimit\" [matchPercentage]=\"matchPercentage\" ></amexio-ee-content> </div> ",
                styles: [" * { box-sizing: border-box; } h1, p { text-align: center; } p { width: 100%; max-width: 500px; margin: auto; } a:link, a:hover, a:active, a:visited { -webkit-transition: color 150ms; transition: color 150ms; color: #95a5a6; text-decoration: none; } a:hover { color: #7f8c8d; text-decoration: underline; } .contain { width: 100%; } .contain-vertical{ width: 100%; height: 450px; } .row1 { overflow: hidden; width: 94%; } .row__inner { -webkit-transition: 450ms -webkit-transform; transition: 450ms -webkit-transform; transition: 450ms transform; transition: 450ms transform, 450ms -webkit-transform; font-size: 0; white-space: nowrap; margin: 70.3125px 0; padding-bottom: 10px; } .tile { position: relative; display: inline-block; width: 250px; /*height: 140.625px;*/ margin-right: 10px; font-size: 20px; cursor: pointer; -webkit-transition: 450ms all; transition: 450ms all; -webkit-transform-origin: center left; transform-origin: center left; } .tile__img { width: 250px; /* height: 140.625px;*/ -o-object-fit: cover; object-fit: cover; } .tile__details { position: absolute; bottom: 0; left: 0; right: 0; top: 0; font-size: 10px; opacity: 0; background: -webkit-linear-gradient(bottom, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0) 100%); background: linear-gradient(to top, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0) 100%); -webkit-transition: 450ms opacity; transition: 450ms opacity; } .tile__details:after, .tile__details:before { content: ''; position: absolute; top: 50%; left: 50%; display: #000; } .tile__details:after { margin-top: -25px; margin-left: -25px; width: 50px; height: 50px; /*border: 3px solid #ecf0f1;*/ line-height: 50px; text-align: center; border-radius: 100%; /*background: rgba(0,0,0,0.5);*/ z-index: 1; } .tile__details:before { /* content: '▶'; left: 0; width: 100%; font-size: 30px; margin-left: 7px; margin-top: -24px; text-align: center; z-index: 2; color: red;*/ } .tile__details_v { position: absolute; bottom: 0; left: 0; right: 0; top: 50%; font-size: 10px; opacity: 0; background: -webkit-linear-gradient(bottom, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0) 100%); background: linear-gradient(to top, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0) 100%); -webkit-transition: 450ms opacity; transition: 450ms opacity; } .tile__details_v:after, .tile__details_v:before { content: ''; position: absolute; top: 50%; left: 50%; display: #000; } .tile__details_v:after { margin-top: -25px; margin-left: -20px; width: 50px; height: 50px; /*border: 3px solid #ecf0f1;*/ line-height: 50px; text-align: center; border-radius: 100%; /*background: rgba(0,0,0,0.5);*/ z-index: 1; } .tile__details_v:before { /* content: '▶'; left: 0; width: 100%; font-size: 30px; margin-left: 7px; margin-top: -24px; text-align: center; z-index: 2; color: red;*/ } .tile:hover .tile__details_v { opacity: 1; } .tile:hover .tile__details { opacity: 1; } .tile__title { position: absolute; bottom: 0; padding: 10px; color: white; } .row__inner:hover { -webkit-transform: translate3d(-62.5px, 0, 0); transform: translate3d(-62.5px, 0, 0); } .row__inner:hover .tile { opacity: 0.3; } .row__inner:hover .tile:hover { -webkit-transform: scale(1.5); transform: scale(1.5); opacity: 1; } .tile:hover ~ .tile { -webkit-transform: translate3d(125px, 0, 0); transform: translate3d(125px, 0, 0); } .left-arrow{ float: left; width: 4%; } .right-arrow{ width: 2%; } .controls{ padding-top: 125px; display: flex; align-items: center; justify-content: center; color: dimgrey; font-size: 1em; } .controls-v{ padding-top: 250px; display: flex; align-items: center; justify-content: center; color: dimgrey; font-size: 1em; } .textonly{ padding: 0px 7px 2px 7px; width: 100%; text-align: left; color: white; background-color: transparent; } .title{ font-size: 10pt; font-weight: 600; } .subtitle{ font-size: 6pt; font-weight: 500; white-space: pre-wrap; } .match{ color: lightgreen; } .age{ display: inline-block; border: solid 2px #666; padding: 0 10px 0 10px; font-size: 100%; color: white; } .mini{ border: solid 1px #666; padding: 0 5px 0 5px; } .actionpanel{ padding-top: 4px; padding-left: 109px; color:  #e50914; background-color: transparent; } .section-header{ font-weight: 700; padding: 0em 0em 0em 1em; font-size: 150%; color: white; position: absolute; bottom: 100; } .playpanel{ padding: 40px 0 0 100px; background-size: cover; background-position: center; } .playpanel .playbutton{ display: inline-block; border: solid 1px #ffffff; padding: 8px  0px 0px 10px; height:30px; width: 30px; border-radius: 40px; background-color: rgba(0,0,0,.5); color: #fff; } .playpanel .playbutton:hover{ color: #e50914; } .selected{ align-items: center; display: flex;justify-content: center; color: white; padding: 0px; height: 5px; border-top: 3px solid white; } "]
            },] },
];
/**
 * @nocollapse
 */
MultiMediaCarousel.ctorParameters = function () { return []; };
MultiMediaCarousel.propDecorators = {
    'data': [{ type: Input },],
    'carouselStyle': [{ type: Input },],
    'hasDetail': [{ type: Input },],
    'title': [{ type: Input },],
    'onVideoLoad': [{ type: Output },],
};

var AmexioMediaModule = (function () {
    function AmexioMediaModule() {
    }
    /**
     * @return {?}
     */
    AmexioMediaModule.forRoot = function () {
        return {
            ngModule: AmexioMediaModule,
            providers: []
        };
    };
    return AmexioMediaModule;
}());
AmexioMediaModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    HttpModule,
                    FormsModule,
                ],
                declarations: [
                    ContentComponent,
                    ButtonMediaComponent,
                    RatingMediaComponent,
                    AmexioYoutubePlayerComponent,
                    MultiMediaCarousel
                ],
                exports: [
                    ContentComponent,
                    ButtonMediaComponent,
                    RatingMediaComponent,
                    AmexioYoutubePlayerComponent,
                    MultiMediaCarousel
                ]
            },] },
];
/**
 * @nocollapse
 */
AmexioMediaModule.ctorParameters = function () { return []; };

export { AmexioMediaModule, ContentComponent, ButtonMediaComponent, RatingMediaComponent, MultiMediaCarousel, AmexioYoutubePlayerComponent };
