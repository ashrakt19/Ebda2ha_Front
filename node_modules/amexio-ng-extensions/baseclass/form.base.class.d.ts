/**
 * Base class Used to Inject into all Form Fields Components.
 */
import * as ɵngcc0 from '@angular/core';
export declare class FormInputBase {
    fieldLabel: string;
    fieldName: string;
    minLength: number;
    minErrorMsg: string;
    maxLength: number;
    maxErrorMsg: string;
    allowBlank: string;
    errorMsg: string;
    placeholder: string;
    disabled: boolean;
    iconFeedBack: boolean;
    fontStyle: string;
    fontFamily: string;
    fontSize: string;
    fieldIcon: string;
    hasLabel: boolean;
    pattern: string;
    popoverPlacement: string;
    enablePopOver: boolean;
    elementId: string;
    spanId: string;
    iconName: string;
    helpInfoMsg: string;
    isValid: boolean;
    divCss: string;
    iconClassName: string;
    fieldglyphIcon: string;
    popoverField: string;
    regEx: RegExp;
    constructor();
    validate(): void;
    isValidInput(): any;
    setValidClassNames(): void;
    setInvalidatedClassNames(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FormInputBase, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FormInputBase, never, never, { "hasLabel": "hasLabel"; "fieldLabel": "fieldLabel"; "fieldName": "fieldName"; "minLength": "minLength"; "minErrorMsg": "minErrorMsg"; "maxLength": "maxLength"; "maxErrorMsg": "maxErrorMsg"; "allowBlank": "allowBlank"; "errorMsg": "errorMsg"; "placeholder": "placeholder"; "disabled": "disabled"; "iconFeedBack": "iconFeedBack"; "fontStyle": "fontStyle"; "fontFamily": "fontFamily"; "fontSize": "fontSize"; "fieldIcon": "fieldIcon"; "pattern": "pattern"; "popoverPlacement": "popoverPlacement"; "enablePopOver": "enablePopOver"; }, {}, never>;
}

//# sourceMappingURL=form.base.class.d.ts.map