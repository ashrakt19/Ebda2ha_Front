import { OnInit } from '@angular/core';
import { FormInputBase } from "../baseclass/form.base.class";
import { CommonHttpService } from "../common.http.service";
import { ControlValueAccessor } from "@angular/forms";
import * as ɵngcc0 from '@angular/core';
export declare const CUSTOM_DROPDOWN_CONTROL_VALUE_ACCESSOR: any;
export declare const BASE_IMPL_DROPDOWN_INPUT: any;
export declare class DropDownComponent extends FormInputBase implements OnInit, ControlValueAccessor {
    private amxHttp;
    dataReader: string;
    httpMethod: string;
    httpUrl: string;
    displayField: string;
    valueField: string;
    data: any;
    multiSelect: boolean;
    searchBox: boolean;
    width: string;
    onSingleSelect: any;
    onMultiSelect: any;
    multiSelectValues: any[];
    filteredOptions: any[];
    responseData: any;
    nonFilteredRowData: any[];
    constructor(amxHttp: CommonHttpService);
    ngOnInit(): void;
    setData(httpResponse: any): void;
    /**
     * use it to fire external model changes and reflect in dropdown
     * @param event
     */
    onChange(event: any): void;
    /***
     *  use it to detect user selection changes and bind that to Model
     * @type {string}
     */
    onUserSelectionChange(value: any, display: any, rowData: any): void;
    /**
     * Show Multi-Selected Value's Display Field
     * @param multiSelectedValues
     */
    getMultiDisplayField(multiSelectedValues: any): any;
    /**
     * Show Single Selected Value's Display Field
     * @param selectedValue
     * @returns {string}
     */
    getDisplayField(selectedValue: any): string;
    onDropDownSearchKeyUp(event: any): void;
    private innerValue;
    private onTouchedCallback;
    private onChangeCallback;
    value: any;
    onBlur(): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DropDownComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DropDownComponent, "amexio-dropdown", never, { "dataReader": "dataReader"; "httpMethod": "httpMethod"; "httpUrl": "httpUrl"; "displayField": "displayField"; "valueField": "valueField"; "data": "data"; "multiSelect": "multiSelect"; "searchBox": "searchBox"; "width": "width"; }, { "onSingleSelect": "onSingleSelect"; "onMultiSelect": "onMultiSelect"; }, never, never>;
}

//# sourceMappingURL=dropdown.d.ts.map