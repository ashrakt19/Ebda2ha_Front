(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),require('@angular/http'),require('@angular/forms'),exports, require('@angular/core'), require('@angular/common'), require('@angular/http'), require('@angular/forms'), require('rxjs/Observable')) :
	typeof define === 'function' && define.amd ? define(['@angular/core','@angular/common','@angular/http','@angular/forms','exports', '@angular/core', '@angular/common', '@angular/http', '@angular/forms', 'rxjs/Observable'], factory) :
	(factory(global.ng.core,global.ng.common,global.ng.http,global.ng.forms,(global.charts = {}),global._angular_core,global._angular_common,global._angular_http,global._angular_forms,global.rxjs_Observable));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,exports,_angular_core,_angular_common,_angular_http,_angular_forms,rxjs_Observable) { 
function PieChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
function AreaChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
var _c0 = ".lmask[_ngcontent-%COMP%] {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed[_ngcontent-%COMP%] {\n    position: fixed;\n  }\n  .lmask[_ngcontent-%COMP%]:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask[_ngcontent-%COMP%]:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }";
function ColumnChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
function DonutChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
function HistogramChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 1);
} }
function LineChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
function BarChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
function TimeLineChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 1);
} }
function ComboChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
function BubbleChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
function ScatterChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
function CandlestickChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
function CandlestickWaterfallChartComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
'use strict';

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var ChartLegendComponent = (function () {
    function ChartLegendComponent() {
        this.isLegendBold = false;
    }
    /**
     * @return {?}
     */
    ChartLegendComponent.prototype.ngOnInit = function () {
    };
ChartLegendComponent.ɵfac = function ChartLegendComponent_Factory(t) { return new (t || ChartLegendComponent)(); };
ChartLegendComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ChartLegendComponent, selectors: [["amexio-chart-legend"]], inputs: { isLegendBold: "isLegendBold", legendPosition: "legendPosition", legendAlignment: "legendAlignment", legendColor: "legendColor", legendFontName: "legendFontName", legendFontSize: "legendFontSize", maxLinesOfLegend: "maxLinesOfLegend" }, decls: 0, vars: 0, template: function ChartLegendComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ChartLegendComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-legend',
                template: " "
            }]
    }], function () { return []; }, { isLegendBold: [{
            type: _angular_core.Input
        }], legendPosition: [{
            type: _angular_core.Input
        }], legendAlignment: [{
            type: _angular_core.Input
        }], legendColor: [{
            type: _angular_core.Input
        }], legendFontName: [{
            type: _angular_core.Input
        }], legendFontSize: [{
            type: _angular_core.Input
        }], maxLinesOfLegend: [{
            type: _angular_core.Input
        }] }); })();
    return ChartLegendComponent;
}());
/**
 * @nocollapse
 */
ChartLegendComponent.ctorParameters = function () { return []; };
ChartLegendComponent.propDecorators = {
    'legendPosition': [{ type: _angular_core.Input },],
    'legendAlignment': [{ type: _angular_core.Input },],
    'legendColor': [{ type: _angular_core.Input },],
    'legendFontName': [{ type: _angular_core.Input },],
    'legendFontSize': [{ type: _angular_core.Input },],
    'isLegendBold': [{ type: _angular_core.Input },],
    'maxLinesOfLegend': [{ type: _angular_core.Input },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var ChartTitleComponent = (function () {
    function ChartTitleComponent() {
    }
    /**
     * @return {?}
     */
    ChartTitleComponent.prototype.ngOnInit = function () {
    };
ChartTitleComponent.ɵfac = function ChartTitleComponent_Factory(t) { return new (t || ChartTitleComponent)(); };
ChartTitleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ChartTitleComponent, selectors: [["amexio-chart-title"]], inputs: { title: "title", titlePosition: "titlePosition", titleColor: "titleColor", titleFontName: "titleFontName", titleFontSize: "titleFontSize", isTitleBold: "isTitleBold", isTitleItalic: "isTitleItalic" }, decls: 0, vars: 0, template: function ChartTitleComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ChartTitleComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-title',
                template: " "
            }]
    }], function () { return []; }, { title: [{
            type: _angular_core.Input
        }], titlePosition: [{
            type: _angular_core.Input
        }], titleColor: [{
            type: _angular_core.Input
        }], titleFontName: [{
            type: _angular_core.Input
        }], titleFontSize: [{
            type: _angular_core.Input
        }], isTitleBold: [{
            type: _angular_core.Input
        }], isTitleItalic: [{
            type: _angular_core.Input
        }] }); })();
    return ChartTitleComponent;
}());
/**
 * @nocollapse
 */
ChartTitleComponent.ctorParameters = function () { return []; };
ChartTitleComponent.propDecorators = {
    'title': [{ type: _angular_core.Input },],
    'titlePosition': [{ type: _angular_core.Input },],
    'titleColor': [{ type: _angular_core.Input },],
    'titleFontName': [{ type: _angular_core.Input },],
    'titleFontSize': [{ type: _angular_core.Input },],
    'isTitleBold': [{ type: _angular_core.Input },],
    'isTitleItalic': [{ type: _angular_core.Input },],
};

/**
 * Created by pratik on 17/8/17.
 */
var ChartLoaderService = (function () {
    function ChartLoaderService() {
        this.chartPackage = {
            AreaChart: 'corechart',
            Bar: 'bar',
            BarChart: 'corechart',
            ColumnChart: 'corechart',
            PieChart: 'corechart',
            Gantt: 'gantt',
            Gauge: 'gauge',
            GeoChart: 'geochart',
            Histogram: 'corechart',
            Line: 'line',
            LineChart: 'corechart',
            Map: 'map',
            Timeline: 'timeline',
            BubbleChart: 'corechart',
            CandlestickChart: 'corechart',
            ComboChart: 'corechart',
            TreeMap: 'treemap'
        };
        this.googleScriptLoadingNotifier = new _angular_core.EventEmitter();
        this.isScriptLoading = false;
    }
    /**
     * @param {?} chartName
     * @return {?}
     */
    ChartLoaderService.prototype.loadCharts = function (chartName) {
        var _this = this;
        return new rxjs_Observable.Observable(function (observer) {
            _this.loadScript().subscribe(function (val) { return console.log(); }, function (error) { return console.error(error); }, function () {
                _this.loadRequiredChart(observer, chartName);
            });
        });
    };
    /**
     * @return {?}
     */
    ChartLoaderService.prototype.loadScript = function () {
        var _this = this;
        return new rxjs_Observable.Observable(function (observer) {
            if (!_this.isScriptLoading) {
                //check if previously its loaded
                if (typeof google !== 'undefined' && google.charts) {
                    //check if chart package has been loaded using chartPackagename ?
                    _this.loadBaseChart(observer);
                }
                else {
                    _this.isScriptLoading = true;
                    var /** @type {?} */ script = document.createElement('script');
                    script.type = 'text/javascript';
                    script.src = 'https://www.gstatic.com/charts/loader.js';
                    script.async = true;
                    script.defer = true;
                    script.onload = function () {
                        _this.isScriptLoading = false;
                        _this.googleScriptLoadingNotifier.emit(true);
                        _this.loadBaseChart(observer);
                    };
                    script.onerror = function () {
                        observer.error('Could Not Load google Script');
                    };
                    document.getElementsByTagName('head')[0].appendChild(script);
                }
            }
            else {
                _this.googleScriptLoadingNotifier.subscribe(function (loaded) {
                    if (loaded) {
                        _this.loadBaseChart(observer);
                    }
                });
            }
        });
    };
    /**
     * Load Base Chart
     * @param {?} observer
     * @return {?}
     */
    ChartLoaderService.prototype.loadBaseChart = function (observer) {
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(function () {
            observer.complete();
        });
    };
    /**
     * Load the required charts
     * @param {?} observer
     * @param {?} chartName
     * @return {?}
     */
    ChartLoaderService.prototype.loadRequiredChart = function (observer, chartName) {
        if (google.visualization.hasOwnProperty(chartName)) {
            observer.complete();
        }
        else {
            google.charts.load('current', { 'packages': [this.chartPackage[chartName]] });
            google.charts.setOnLoadCallback(function () {
                observer.complete();
            });
        }
    };
ChartLoaderService.ɵfac = function ChartLoaderService_Factory(t) { return new (t || ChartLoaderService)(); };
ChartLoaderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ChartLoaderService, factory: function (t) { return ChartLoaderService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ChartLoaderService, [{
        type: _angular_core.Injectable
    }], function () { return []; }, null); })();
    return ChartLoaderService;
}());
/**
 * @nocollapse
 */
ChartLoaderService.ctorParameters = function () { return []; };

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var ChartAreaComponent = (function () {
    function ChartAreaComponent() {
    }
    /**
     * @return {?}
     */
    ChartAreaComponent.prototype.ngOnInit = function () {
    };
ChartAreaComponent.ɵfac = function ChartAreaComponent_Factory(t) { return new (t || ChartAreaComponent)(); };
ChartAreaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ChartAreaComponent, selectors: [["amexio-chart-area-properties"]], inputs: { chartBackgroundColor: "chartBackgroundColor", leftPosition: "leftPosition", topPosition: "topPosition", chartWidthInPer: "chartWidthInPer", chartHeightInper: "chartHeightInper" }, decls: 0, vars: 0, template: function ChartAreaComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ChartAreaComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-area-properties',
                template: ""
            }]
    }], function () { return []; }, { chartBackgroundColor: [{
            type: _angular_core.Input
        }], leftPosition: [{
            type: _angular_core.Input
        }], topPosition: [{
            type: _angular_core.Input
        }], chartWidthInPer: [{
            type: _angular_core.Input
        }], chartHeightInper: [{
            type: _angular_core.Input
        }] }); })();
    return ChartAreaComponent;
}());
/**
 * @nocollapse
 */
ChartAreaComponent.ctorParameters = function () { return []; };
ChartAreaComponent.propDecorators = {
    'chartBackgroundColor': [{ type: _angular_core.Input },],
    'leftPosition': [{ type: _angular_core.Input },],
    'topPosition': [{ type: _angular_core.Input },],
    'chartWidthInPer': [{ type: _angular_core.Input },],
    'chartHeightInper': [{ type: _angular_core.Input },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var PieChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function PieChartComponent(loader) {
        this.loader = loader;
        this.is3D = false;
        this.id = 'amexio-chart-pie' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    PieChartComponent.prototype.drawChart = function () {
        this.pieData = google.visualization.arrayToDataTable(this.data);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            is3D: this.is3D,
            pieHole: this.pieHole,
            pieStartAngle: this.pieStartAngle,
            backgroundColor: this.backgroundColor,
            legend: this.chartLengendComponent ? {
                position: this.chartLengendComponent.legendPosition ? this.chartLengendComponent.legendPosition : null,
                maxLines: this.chartLengendComponent.maxLinesOfLegend ? this.chartLengendComponent.maxLinesOfLegend : null,
                textStyle: {
                    color: this.chartLengendComponent.legendColor ? this.chartLengendComponent.legendColor : null,
                    fontSize: this.chartLengendComponent.legendFontSize ? this.chartLengendComponent.legendFontSize : null,
                    fontName: this.chartLengendComponent.legendFontName ? this.chartLengendComponent.legendFontName : null,
                    bold: this.chartLengendComponent.isLegendBold ? this.chartLengendComponent.isLegendBold : null,
                    alignment: this.chartLengendComponent.legendAlignment ? this.chartLengendComponent.legendAlignment : null
                }
            } : 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
        };
        this.chart = new google.visualization.PieChart(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.pieData, this.options);
        google.visualization.events.addListener(this.chart, 'click', this.onClick);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    PieChartComponent.prototype.onClick = function (e) {
    };
    /**
     * @return {?}
     */
    PieChartComponent.prototype.ngAfterContentInit = function () {
        this.chartLegendArray = this.chartLegendComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        this.chartAreaArray = this.chartAreaComp.toArray();
        //take first component
        if (this.chartLegendArray.length == 1) {
            this.chartLengendComponent = this.chartLegendArray.pop();
        }
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
    };
    /**
     * @return {?}
     */
    PieChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('PieChart').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PieChartComponent.prototype.onResize = function (event) {
        this.drawChart();
    };
PieChartComponent.ɵfac = function PieChartComponent_Factory(t) { return new (t || PieChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
PieChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PieChartComponent, selectors: [["amexio-chart-pie"]], contentQueries: function PieChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartLegendComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartLegendComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
    } }, inputs: { is3D: "is3D", width: "width", height: "height", pieHole: "pieHole", data: "data", pieStartAngle: "pieStartAngle", backgroundColor: "backgroundColor" }, decls: 2, vars: 6, consts: [[3, "resize"], ["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function PieChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resize", function PieChartComponent_Template_div_resize_0_listener($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
        ɵngcc0.ɵɵtemplate(1, PieChartComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PieChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-pie', template: "\n    \n        <div [attr.id]=\"id\"\n             [style.width]=\"width\"\n             [style.height]=\"height\"\n             (window:resize)=\"onResize($event)\">\n          <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n          </div>\n        </div>\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { is3D: [{
            type: _angular_core.Input
        }], width: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], pieHole: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], pieStartAngle: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], chartLegendComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartLegendComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }] }); })();
    return PieChartComponent;
}());
/**
 * @nocollapse
 */
PieChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
PieChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'is3D': [{ type: _angular_core.Input },],
    'pieHole': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'pieStartAngle': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'chartLegendComp': [{ type: _angular_core.ContentChildren, args: [ChartLegendComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var AreaChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function AreaChartComponent(loader) {
        this.loader = loader;
        this.id = 'amexio-chart-area' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    AreaChartComponent.prototype.drawChart = function () {
        this.areaData = google.visualization.arrayToDataTable(this.data);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            backgroundColor: this.backgroundColor,
            legend: this.chartLengendComponent ? {
                position: this.chartLengendComponent.legendPosition ? this.chartLengendComponent.legendPosition : null,
                maxLines: this.chartLengendComponent.maxLinesOfLegend ? this.chartLengendComponent.maxLinesOfLegend : null,
                textStyle: {
                    color: this.chartLengendComponent.legendColor ? this.chartLengendComponent.legendColor : null,
                    fontSize: this.chartLengendComponent.legendFontSize ? this.chartLengendComponent.legendFontSize : null,
                    fontName: this.chartLengendComponent.legendFontName ? this.chartLengendComponent.legendFontName : null,
                    bold: this.chartLengendComponent.isLegendBold ? this.chartLengendComponent.isLegendBold : null,
                    alignment: this.chartLengendComponent.legendAlignment ? this.chartLengendComponent.legendAlignment : null
                }
            } : 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
        };
        this.chart = new google.visualization.AreaChart(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.areaData, this.options);
        google.visualization.events.addListener(this.chart, 'click', this.click);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    AreaChartComponent.prototype.click = function (e) {
    };
    /**
     * @return {?}
     */
    AreaChartComponent.prototype.ngAfterContentInit = function () {
        this.chartLegendArray = this.chartLegendComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        this.chartAreaArray = this.chartAreaComp.toArray();
        //take first component
        if (this.chartLegendArray.length == 1) {
            this.chartLengendComponent = this.chartLegendArray.pop();
        }
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
    };
    /**
     * @return {?}
     */
    AreaChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('AreaChart').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    AreaChartComponent.prototype.onResize = function (event) {
        this.drawChart();
    };
AreaChartComponent.ɵfac = function AreaChartComponent_Factory(t) { return new (t || AreaChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
AreaChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AreaChartComponent, selectors: [["amexio-chart-area"]], contentQueries: function AreaChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartLegendComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartLegendComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
    } }, inputs: { width: "width", height: "height", data: "data", backgroundColor: "backgroundColor" }, decls: 2, vars: 6, consts: [[3, "resize"], ["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function AreaChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resize", function AreaChartComponent_Template_div_resize_0_listener($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
        ɵngcc0.ɵɵtemplate(1, AreaChartComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AreaChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-area',
                template: "\n    <div [attr.id]=\"id\"\n         [style.width]=\"width\"\n         [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n    <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n    </div>\n    </div>\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { width: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], chartLegendComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartLegendComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }] }); })();
    return AreaChartComponent;
}());
/**
 * @nocollapse
 */
AreaChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
AreaChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'chartLegendComp': [{ type: _angular_core.ContentChildren, args: [ChartLegendComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var ColumnChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function ColumnChartComponent(loader) {
        this.loader = loader;
        //showing stack chart
        this.isStacked = false;
        this.id = 'amexio-chart-column' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    ColumnChartComponent.prototype.drawChart = function () {
        this.columnData = this.createTable(this.data);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            isStacked: this.isStacked,
            backgroundColor: this.backgroundColor,
            legend: this.chartLengendComponent ? {
                position: this.chartLengendComponent.legendPosition ? this.chartLengendComponent.legendPosition : null,
                maxLines: this.chartLengendComponent.maxLinesOfLegend ? this.chartLengendComponent.maxLinesOfLegend : null,
                textStyle: {
                    color: this.chartLengendComponent.legendColor ? this.chartLengendComponent.legendColor : null,
                    fontSize: this.chartLengendComponent.legendFontSize ? this.chartLengendComponent.legendFontSize : null,
                    fontName: this.chartLengendComponent.legendFontName ? this.chartLengendComponent.legendFontName : null,
                    bold: this.chartLengendComponent.isLegendBold ? this.chartLengendComponent.isLegendBold : null,
                    alignment: this.chartLengendComponent.legendAlignment ? this.chartLengendComponent.legendAlignment : null
                }
            } : 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
        };
        this.chart = new google.visualization.ColumnChart(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.columnData, this.options);
        google.visualization.events.addListener(this.chart, 'click', this.onClick);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    ColumnChartComponent.prototype.onClick = function (e) {
    };
    /**
     * @return {?}
     */
    ColumnChartComponent.prototype.ngAfterContentInit = function () {
        this.chartLegendArray = this.chartLegendComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        this.chartAreaArray = this.chartAreaComp.toArray();
        //take first component
        if (this.chartLegendArray.length == 1) {
            this.chartLengendComponent = this.chartLegendArray.pop();
        }
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
    };
    /**
     * This method create data table structure of array and return in required chart data
     *
     *
     * @param {?} array
     * @return {?}
     */
    ColumnChartComponent.prototype.createTable = function (array) {
        //create Duplicate Array for data arrangement
        var /** @type {?} */ dupArray = array.slice();
        var /** @type {?} */ data = new google.visualization.DataTable();
        var /** @type {?} */ labelObject = dupArray[0];
        //remove first object of array
        dupArray.shift();
        labelObject.forEach(function (dataTypeObject) {
            data.addColumn(dataTypeObject.dataType, dataTypeObject.label);
        });
        var /** @type {?} */ finalArray = [];
        dupArray.forEach(function (rowObject) {
            finalArray.push(rowObject);
        });
        data.addRows(finalArray);
        return data;
    };
    /**
     * @return {?}
     */
    ColumnChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('ColumnChart').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ColumnChartComponent.prototype.onResize = function (event) {
        this.drawChart();
    };
ColumnChartComponent.ɵfac = function ColumnChartComponent_Factory(t) { return new (t || ColumnChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
ColumnChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ColumnChartComponent, selectors: [["amexio-chart-column"]], contentQueries: function ColumnChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartLegendComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartLegendComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
    } }, inputs: { isStacked: "isStacked", width: "width", height: "height", data: "data", backgroundColor: "backgroundColor" }, decls: 2, vars: 6, consts: [[3, "resize"], ["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function ColumnChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resize", function ColumnChartComponent_Template_div_resize_0_listener($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
        ɵngcc0.ɵɵtemplate(1, ColumnChartComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ColumnChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-column',
                template: "\n      <div [attr.id]=\"id\"\n           [style.width]=\"width\"\n           [style.height]=\"height\"\n           (window:resize)=\"onResize($event)\">\n        <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n        </div>\n      </div>\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { isStacked: [{
            type: _angular_core.Input
        }], width: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], chartLegendComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartLegendComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }] }); })();
    return ColumnChartComponent;
}());
/**
 * @nocollapse
 */
ColumnChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
ColumnChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'isStacked': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'chartLegendComp': [{ type: _angular_core.ContentChildren, args: [ChartLegendComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var DonutChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function DonutChartComponent(loader) {
        this.loader = loader;
        this.id = 'amexio-chart-donut' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    DonutChartComponent.prototype.drawChart = function () {
        this.donutData = google.visualization.arrayToDataTable(this.data);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            pieHole: 0.4,
            backgroundColor: this.backgroundColor,
            legend: this.chartLengendComponent ? {
                position: this.chartLengendComponent.legendPosition ? this.chartLengendComponent.legendPosition : null,
                maxLines: this.chartLengendComponent.maxLinesOfLegend ? this.chartLengendComponent.maxLinesOfLegend : null,
                textStyle: {
                    color: this.chartLengendComponent.legendColor ? this.chartLengendComponent.legendColor : null,
                    fontSize: this.chartLengendComponent.legendFontSize ? this.chartLengendComponent.legendFontSize : null,
                    fontName: this.chartLengendComponent.legendFontName ? this.chartLengendComponent.legendFontName : null,
                    bold: this.chartLengendComponent.isLegendBold ? this.chartLengendComponent.isLegendBold : null,
                    alignment: this.chartLengendComponent.legendAlignment ? this.chartLengendComponent.legendAlignment : null
                }
            } : 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
        };
        this.chart = new google.visualization.PieChart(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.donutData, this.options);
        google.visualization.events.addListener(this.chart, 'click', this.onClick);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    DonutChartComponent.prototype.onClick = function (e) {
    };
    /**
     * @return {?}
     */
    DonutChartComponent.prototype.ngAfterContentInit = function () {
        this.chartLegendArray = this.chartLegendComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        this.chartAreaArray = this.chartAreaComp.toArray();
        //take first component
        if (this.chartLegendArray.length == 1) {
            this.chartLengendComponent = this.chartLegendArray.pop();
        }
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
    };
    /**
     * @return {?}
     */
    DonutChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('PieChart').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    DonutChartComponent.prototype.onResize = function (event) {
        this.drawChart();
    };
DonutChartComponent.ɵfac = function DonutChartComponent_Factory(t) { return new (t || DonutChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
DonutChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DonutChartComponent, selectors: [["amexio-chart-donut"]], contentQueries: function DonutChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartLegendComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartLegendComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
    } }, inputs: { width: "width", height: "height", data: "data", backgroundColor: "backgroundColor" }, decls: 2, vars: 6, consts: [[3, "resize"], ["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function DonutChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resize", function DonutChartComponent_Template_div_resize_0_listener($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
        ɵngcc0.ɵɵtemplate(1, DonutChartComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DonutChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-donut', template: "\n        <div [attr.id]=\"id\"\n             [style.width]=\"width\"\n             [style.height]=\"height\"\n             (window:resize)=\"onResize($event)\" >\n          <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n          </div>\n        </div>\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { width: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], chartLegendComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartLegendComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }] }); })();
    return DonutChartComponent;
}());
/**
 * @nocollapse
 */
DonutChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
DonutChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'chartLegendComp': [{ type: _angular_core.ContentChildren, args: [ChartLegendComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var HistogramChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function HistogramChartComponent(loader) {
        this.loader = loader;
        this.id = 'amexio-chart-line' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    HistogramChartComponent.prototype.drawChart = function () {
        this.histogramData = google.visualization.arrayToDataTable(this.data);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            backgroundColor: this.backgroundColor,
            legend: this.chartLengendComponent ? {
                position: this.chartLengendComponent.legendPosition ? this.chartLengendComponent.legendPosition : null,
                maxLines: this.chartLengendComponent.maxLinesOfLegend ? this.chartLengendComponent.maxLinesOfLegend : null,
                textStyle: {
                    color: this.chartLengendComponent.legendColor ? this.chartLengendComponent.legendColor : null,
                    fontSize: this.chartLengendComponent.legendFontSize ? this.chartLengendComponent.legendFontSize : null,
                    fontName: this.chartLengendComponent.legendFontName ? this.chartLengendComponent.legendFontName : null,
                    bold: this.chartLengendComponent.isLegendBold ? this.chartLengendComponent.isLegendBold : null,
                    alignment: this.chartLengendComponent.legendAlignment ? this.chartLengendComponent.legendAlignment : null
                }
            } : 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
        };
        this.chart = new google.visualization.Histogram(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.histogramData, this.options);
        google.visualization.events.addListener(this.chart, 'click', this.onClick);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    HistogramChartComponent.prototype.onClick = function (e) {
    };
    /**
     * @return {?}
     */
    HistogramChartComponent.prototype.ngAfterContentInit = function () {
        this.chartLegendArray = this.chartLegendComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        this.chartAreaArray = this.chartAreaComp.toArray();
        //take first component
        if (this.chartLegendArray.length == 1) {
            this.chartLengendComponent = this.chartLegendArray.pop();
        }
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
    };
    /**
     * @return {?}
     */
    HistogramChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('Histogram').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
HistogramChartComponent.ɵfac = function HistogramChartComponent_Factory(t) { return new (t || HistogramChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
HistogramChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HistogramChartComponent, selectors: [["amexio-chart-histogram"]], contentQueries: function HistogramChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartLegendComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartLegendComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
    } }, inputs: { width: "width", height: "height", data: "data", backgroundColor: "backgroundColor" }, decls: 2, vars: 6, consts: [["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function HistogramChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵtemplate(1, HistogramChartComponent_div_1_Template, 1, 0, "div", 0);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HistogramChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-histogram',
                template: "\n      <div [attr.id]=\"id\"\n           [style.width]=\"width\"\n           [style.height]=\"height\"\n      >\n        <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n        </div>\n      </div>\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { width: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], chartLegendComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartLegendComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }] }); })();
    return HistogramChartComponent;
}());
/**
 * @nocollapse
 */
HistogramChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
HistogramChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'chartLegendComp': [{ type: _angular_core.ContentChildren, args: [ChartLegendComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var LineChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function LineChartComponent(loader) {
        this.loader = loader;
        this.id = 'amexio-chart-line' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    LineChartComponent.prototype.drawChart = function () {
        this.lineData = this.createTable(this.data);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            backgroundColor: this.backgroundColor,
            legend: this.chartLengendComponent ? {
                position: this.chartLengendComponent.legendPosition ? this.chartLengendComponent.legendPosition : null,
                maxLines: this.chartLengendComponent.maxLinesOfLegend ? this.chartLengendComponent.maxLinesOfLegend : null,
                textStyle: {
                    color: this.chartLengendComponent.legendColor ? this.chartLengendComponent.legendColor : null,
                    fontSize: this.chartLengendComponent.legendFontSize ? this.chartLengendComponent.legendFontSize : null,
                    fontName: this.chartLengendComponent.legendFontName ? this.chartLengendComponent.legendFontName : null,
                    bold: this.chartLengendComponent.isLegendBold ? this.chartLengendComponent.isLegendBold : null,
                    alignment: this.chartLengendComponent.legendAlignment ? this.chartLengendComponent.legendAlignment : null
                }
            } : 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
        };
        this.chart = new google.visualization.LineChart(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.lineData, this.options);
        google.visualization.events.addListener(this.chart, 'click', this.onClick);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    LineChartComponent.prototype.onClick = function (e) {
    };
    /**
     * @return {?}
     */
    LineChartComponent.prototype.ngAfterContentInit = function () {
        this.chartLegendArray = this.chartLegendComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        this.chartAreaArray = this.chartAreaComp.toArray();
        //take first component
        if (this.chartLegendArray.length == 1) {
            this.chartLengendComponent = this.chartLegendArray.pop();
        }
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
    };
    /**
     * This method create data table structure of array and return in required chart data
     *
     *
     * @param {?} array
     * @return {?}
     */
    LineChartComponent.prototype.createTable = function (array) {
        //create Duplicate Array for data arrangement
        var /** @type {?} */ dupArray = array.slice();
        var /** @type {?} */ data = new google.visualization.DataTable();
        var /** @type {?} */ labelObject = dupArray[0];
        //remove first object of array
        dupArray.shift();
        labelObject.forEach(function (dataTypeObject) {
            data.addColumn(dataTypeObject.dataType, dataTypeObject.label);
        });
        var /** @type {?} */ finalArray = [];
        dupArray.forEach(function (rowObject) {
            finalArray.push(rowObject);
        });
        data.addRows(finalArray);
        return data;
    };
    /**
     * @return {?}
     */
    LineChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('LineChart').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LineChartComponent.prototype.onResize = function (event) {
        this.drawChart();
    };
LineChartComponent.ɵfac = function LineChartComponent_Factory(t) { return new (t || LineChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
LineChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LineChartComponent, selectors: [["amexio-chart-line"]], contentQueries: function LineChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartLegendComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartLegendComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
    } }, inputs: { width: "width", height: "height", data: "data", backgroundColor: "backgroundColor" }, decls: 2, vars: 6, consts: [[3, "resize"], ["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function LineChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resize", function LineChartComponent_Template_div_resize_0_listener($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
        ɵngcc0.ɵɵtemplate(1, LineChartComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LineChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-line', template: "\n        <div [attr.id]=\"id\"\n             [style.width]=\"width\"\n             [style.height]=\"height\"\n             (window:resize)=\"onResize($event)\" >\n          <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n          </div>\n        </div>\n\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { width: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], chartLegendComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartLegendComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }] }); })();
    return LineChartComponent;
}());
/**
 * @nocollapse
 */
LineChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
LineChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'chartLegendComp': [{ type: _angular_core.ContentChildren, args: [ChartLegendComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var BarChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function BarChartComponent(loader) {
        this.loader = loader;
        //showing stack chart
        this.isStacked = false;
        this.id = 'amexio-chart-bar' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    BarChartComponent.prototype.drawChart = function () {
        //bind the data
        this.barData = google.visualization.arrayToDataTable(this.data);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            isStacked: this.isStacked,
            backgroundColor: this.backgroundColor,
            legend: this.chartLengendComponent ? {
                position: this.chartLengendComponent.legendPosition ? this.chartLengendComponent.legendPosition : null,
                maxLines: this.chartLengendComponent.maxLinesOfLegend ? this.chartLengendComponent.maxLinesOfLegend : null,
                textStyle: {
                    color: this.chartLengendComponent.legendColor ? this.chartLengendComponent.legendColor : null,
                    fontSize: this.chartLengendComponent.legendFontSize ? this.chartLengendComponent.legendFontSize : null,
                    fontName: this.chartLengendComponent.legendFontName ? this.chartLengendComponent.legendFontName : null,
                    bold: this.chartLengendComponent.isLegendBold ? this.chartLengendComponent.isLegendBold : null,
                    alignment: this.chartLengendComponent.legendAlignment ? this.chartLengendComponent.legendAlignment : null
                }
            } : 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
            hAxis: {
                title: this.xAxisTitle, minValue: 0
            },
            vAxis: {
                title: this.yAxisTitle
            }
        };
        this.chart = new google.visualization.BarChart(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.barData, this.options);
    };
    /**
     * @return {?}
     */
    BarChartComponent.prototype.ngAfterContentInit = function () {
        this.chartLegendArray = this.chartLegendComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        this.chartAreaArray = this.chartAreaComp.toArray();
        //take first component
        if (this.chartLegendArray.length == 1) {
            this.chartLengendComponent = this.chartLegendArray.pop();
        }
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
    };
    /**
     * @return {?}
     */
    BarChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('BarChart').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    BarChartComponent.prototype.onResize = function (event) {
        this.drawChart();
    };
BarChartComponent.ɵfac = function BarChartComponent_Factory(t) { return new (t || BarChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
BarChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BarChartComponent, selectors: [["amexio-chart-bar"]], contentQueries: function BarChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartLegendComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartLegendComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
    } }, inputs: { isStacked: "isStacked", width: "width", data: "data", height: "height", xAxisTitle: "xAxisTitle", yAxisTitle: "yAxisTitle", backgroundColor: "backgroundColor" }, decls: 2, vars: 6, consts: [[3, "resize"], ["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function BarChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resize", function BarChartComponent_Template_div_resize_0_listener($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
        ɵngcc0.ɵɵtemplate(1, BarChartComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BarChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-bar',
                template: "\n        <div [attr.id]=\"id\"\n             [style.width]=\"width\"\n             [style.height]=\"height\"  (window:resize)=\"onResize($event)\">\n          <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n          </div>\n        </div>\n    ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { isStacked: [{
            type: _angular_core.Input
        }], width: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], xAxisTitle: [{
            type: _angular_core.Input
        }], yAxisTitle: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], chartLegendComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartLegendComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }] }); })();
    return BarChartComponent;
}());
/**
 * @nocollapse
 */
BarChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
BarChartComponent.propDecorators = {
    'data': [{ type: _angular_core.Input },],
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'isStacked': [{ type: _angular_core.Input },],
    'xAxisTitle': [{ type: _angular_core.Input },],
    'yAxisTitle': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'chartLegendComp': [{ type: _angular_core.ContentChildren, args: [ChartLegendComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var TimeLineChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function TimeLineChartComponent(loader) {
        this.loader = loader;
        this.id = 'amexio-chart-timeline' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    TimeLineChartComponent.prototype.drawChart = function () {
        this.chart = new google.visualization.Timeline(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.createTable(this.data));
        google.visualization.events.addListener(this.chart, 'click', this.onClick);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    TimeLineChartComponent.prototype.onClick = function (e) {
    };
    /**
     * @return {?}
     */
    TimeLineChartComponent.prototype.ngAfterContentInit = function () {
        this.chartLegendArray = this.chartLegendComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        this.chartAreaArray = this.chartAreaComp.toArray();
        //take first component
        if (this.chartLegendArray.length == 1) {
            this.chartLengendComponent = this.chartLegendArray.pop();
        }
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
    };
    /**
     * This method create data table structure of array and return in required chart data
     *
     *
     * @param {?} array
     * @return {?}
     */
    TimeLineChartComponent.prototype.createTable = function (array) {
        //create Duplicate Array for data arrangement
        var /** @type {?} */ dupArray = array.slice();
        var /** @type {?} */ data = new google.visualization.DataTable();
        var /** @type {?} */ labelObject = dupArray[0];
        //remove first object of array
        dupArray.shift();
        labelObject.forEach(function (dataTypeObject) {
            data.addColumn(dataTypeObject.dataType, dataTypeObject.label);
        });
        var /** @type {?} */ finalArray = [];
        dupArray.forEach(function (rowObject) {
            finalArray.push(rowObject);
        });
        data.addRows(finalArray);
        return data;
    };
    /**
     * @return {?}
     */
    TimeLineChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('Timeline').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
TimeLineChartComponent.ɵfac = function TimeLineChartComponent_Factory(t) { return new (t || TimeLineChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
TimeLineChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TimeLineChartComponent, selectors: [["amexio-chart-timeline"]], contentQueries: function TimeLineChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartLegendComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartLegendComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
    } }, inputs: { width: "width", data: "data" }, decls: 2, vars: 4, consts: [["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function TimeLineChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵtemplate(1, TimeLineChartComponent_div_1_Template, 1, 0, "div", 0);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TimeLineChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-timeline',
                template: "\n    <div [attr.id]=\"id\"\n         [style.width]=\"width\"\n    >\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { width: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], chartLegendComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartLegendComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }] }); })();
    return TimeLineChartComponent;
}());
/**
 * @nocollapse
 */
TimeLineChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
TimeLineChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'chartLegendComp': [{ type: _angular_core.ContentChildren, args: [ChartLegendComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var HorizontalAxisComponent = (function () {
    function HorizontalAxisComponent() {
    }
    /**
     * @return {?}
     */
    HorizontalAxisComponent.prototype.ngOnInit = function () {
    };
HorizontalAxisComponent.ɵfac = function HorizontalAxisComponent_Factory(t) { return new (t || HorizontalAxisComponent)(); };
HorizontalAxisComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HorizontalAxisComponent, selectors: [["amexio-chart-horizontal-axis"]], inputs: { title: "title", titleTextColor: "titleTextColor" }, decls: 0, vars: 0, template: function HorizontalAxisComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HorizontalAxisComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-horizontal-axis',
                template: " "
            }]
    }], function () { return []; }, { title: [{
            type: _angular_core.Input
        }], titleTextColor: [{
            type: _angular_core.Input
        }] }); })();
    return HorizontalAxisComponent;
}());
/**
 * @nocollapse
 */
HorizontalAxisComponent.ctorParameters = function () { return []; };
HorizontalAxisComponent.propDecorators = {
    'title': [{ type: _angular_core.Input },],
    'titleTextColor': [{ type: _angular_core.Input },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var VerticalAxisComponent = (function () {
    function VerticalAxisComponent() {
    }
    /**
     * @return {?}
     */
    VerticalAxisComponent.prototype.ngOnInit = function () {
    };
VerticalAxisComponent.ɵfac = function VerticalAxisComponent_Factory(t) { return new (t || VerticalAxisComponent)(); };
VerticalAxisComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VerticalAxisComponent, selectors: [["amexio-chart-vertical-axis"]], inputs: { title: "title", titleTextColor: "titleTextColor" }, decls: 0, vars: 0, template: function VerticalAxisComponent_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VerticalAxisComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-vertical-axis',
                template: " "
            }]
    }], function () { return []; }, { title: [{
            type: _angular_core.Input
        }], titleTextColor: [{
            type: _angular_core.Input
        }] }); })();
    return VerticalAxisComponent;
}());
/**
 * @nocollapse
 */
VerticalAxisComponent.ctorParameters = function () { return []; };
VerticalAxisComponent.propDecorators = {
    'title': [{ type: _angular_core.Input },],
    'titleTextColor': [{ type: _angular_core.Input },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var ComboChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function ComboChartComponent(loader) {
        this.loader = loader;
        this.id = 'amexio-chart-combo' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    ComboChartComponent.prototype.drawChart = function () {
        this.comboData = google.visualization.arrayToDataTable(this.data);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            backgroundColor: this.backgroundColor,
            legend: this.chartLengendComponent ? {
                position: this.chartLengendComponent.legendPosition ? this.chartLengendComponent.legendPosition : null,
                maxLines: this.chartLengendComponent.maxLinesOfLegend ? this.chartLengendComponent.maxLinesOfLegend : null,
                textStyle: {
                    color: this.chartLengendComponent.legendColor ? this.chartLengendComponent.legendColor : null,
                    fontSize: this.chartLengendComponent.legendFontSize ? this.chartLengendComponent.legendFontSize : null,
                    fontName: this.chartLengendComponent.legendFontName ? this.chartLengendComponent.legendFontName : null,
                    bold: this.chartLengendComponent.isLegendBold ? this.chartLengendComponent.isLegendBold : null,
                    alignment: this.chartLengendComponent.legendAlignment ? this.chartLengendComponent.legendAlignment : null
                }
            } : 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
            vAxis: this.verticalComponent ? { title: this.verticalComponent.title ? this.verticalComponent.title : null, titleTextStyle: { color: this.verticalComponent.titleTextColor ? this.verticalComponent.titleTextColor : null } } : null,
            hAxis: this.horizontalComponent ? { title: this.horizontalComponent.title ? this.horizontalComponent.title : null, titleTextStyle: { color: this.horizontalComponent.titleTextColor ? this.horizontalComponent.titleTextColor : null } } : null,
            seriesType: 'bars',
            series: { 4: { type: 'line' } }
        };
        this.chart = new google.visualization.ComboChart(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.comboData, this.options);
        google.visualization.events.addListener(this.chart, 'click', this.click);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    ComboChartComponent.prototype.click = function (e) {
    };
    /**
     * @return {?}
     */
    ComboChartComponent.prototype.ngAfterContentInit = function () {
        this.chartLegendArray = this.chartLegendComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        this.chartAreaArray = this.chartAreaComp.toArray();
        this.horizontalArray = this.horizontalComp.toArray();
        this.verticalArray = this.verticalComp.toArray();
        //take first component
        if (this.chartLegendArray.length == 1) {
            this.chartLengendComponent = this.chartLegendArray.pop();
        }
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
        if (this.horizontalArray.length == 1) {
            this.horizontalComponent = this.horizontalArray.pop();
        }
        if (this.verticalArray.length == 1) {
            this.verticalComponent = this.verticalArray.pop();
        }
    };
    /**
     * @return {?}
     */
    ComboChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('ComboChart').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ComboChartComponent.prototype.onResize = function (event) {
        this.drawChart();
    };
ComboChartComponent.ɵfac = function ComboChartComponent_Factory(t) { return new (t || ComboChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
ComboChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ComboChartComponent, selectors: [["amexio-chart-combo"]], contentQueries: function ComboChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartLegendComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, HorizontalAxisComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, VerticalAxisComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartLegendComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.horizontalComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.verticalComp = _t);
    } }, inputs: { width: "width", height: "height", data: "data", backgroundColor: "backgroundColor" }, decls: 2, vars: 6, consts: [[3, "resize"], ["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function ComboChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resize", function ComboChartComponent_Template_div_resize_0_listener($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
        ɵngcc0.ɵɵtemplate(1, ComboChartComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ComboChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-combo',
                template: "\n      <div [attr.id]=\"id\"\n           [style.width]=\"width\"\n           [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n        <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n        </div>\n      </div>\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { width: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], chartLegendComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartLegendComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }], horizontalComp: [{
            type: _angular_core.ContentChildren,
            args: [HorizontalAxisComponent]
        }], verticalComp: [{
            type: _angular_core.ContentChildren,
            args: [VerticalAxisComponent]
        }] }); })();
    return ComboChartComponent;
}());
/**
 * @nocollapse
 */
ComboChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
ComboChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'chartLegendComp': [{ type: _angular_core.ContentChildren, args: [ChartLegendComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
    'horizontalComp': [{ type: _angular_core.ContentChildren, args: [HorizontalAxisComponent,] },],
    'verticalComp': [{ type: _angular_core.ContentChildren, args: [VerticalAxisComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var BubbleChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function BubbleChartComponent(loader) {
        this.loader = loader;
        this.colorAxis = [];
        this.id = 'amexio-chart-bubble' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    BubbleChartComponent.prototype.drawChart = function () {
        this.bubbleData = google.visualization.arrayToDataTable(this.data);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            backgroundColor: this.backgroundColor,
            legend: this.chartLengendComponent ? {
                position: this.chartLengendComponent.legendPosition ? this.chartLengendComponent.legendPosition : null,
                maxLines: this.chartLengendComponent.maxLinesOfLegend ? this.chartLengendComponent.maxLinesOfLegend : null,
                textStyle: {
                    color: this.chartLengendComponent.legendColor ? this.chartLengendComponent.legendColor : null,
                    fontSize: this.chartLengendComponent.legendFontSize ? this.chartLengendComponent.legendFontSize : null,
                    fontName: this.chartLengendComponent.legendFontName ? this.chartLengendComponent.legendFontName : null,
                    bold: this.chartLengendComponent.isLegendBold ? this.chartLengendComponent.isLegendBold : null,
                    alignment: this.chartLengendComponent.legendAlignment ? this.chartLengendComponent.legendAlignment : null
                }
            } : 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
            vAxis: this.verticalComponent ? { title: this.verticalComponent.title ? this.verticalComponent.title : null, titleTextStyle: { color: this.verticalComponent.titleTextColor ? this.verticalComponent.titleTextColor : null } } : null,
            hAxis: this.horizontalComponent ? { title: this.horizontalComponent.title ? this.horizontalComponent.title : null, titleTextStyle: { color: this.horizontalComponent.titleTextColor ? this.horizontalComponent.titleTextColor : null } } : null,
            bubble: { textStyle: { fontSize: 11 } },
            colorAxis: { colors: this.colorAxis }
        };
        this.chart = new google.visualization.BubbleChart(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.bubbleData, this.options);
        google.visualization.events.addListener(this.chart, 'click', this.click);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    BubbleChartComponent.prototype.click = function (e) {
    };
    /**
     * @return {?}
     */
    BubbleChartComponent.prototype.ngAfterContentInit = function () {
        this.chartLegendArray = this.chartLegendComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        this.chartAreaArray = this.chartAreaComp.toArray();
        this.horizontalArray = this.horizontalComp.toArray();
        this.verticalArray = this.verticalComp.toArray();
        //take first component
        if (this.chartLegendArray.length == 1) {
            this.chartLengendComponent = this.chartLegendArray.pop();
        }
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
        if (this.horizontalArray.length == 1) {
            this.horizontalComponent = this.horizontalArray.pop();
        }
        if (this.verticalArray.length == 1) {
            this.verticalComponent = this.verticalArray.pop();
        }
    };
    /**
     * @return {?}
     */
    BubbleChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('BubbleChart').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    BubbleChartComponent.prototype.onResize = function (event) {
        this.drawChart();
    };
BubbleChartComponent.ɵfac = function BubbleChartComponent_Factory(t) { return new (t || BubbleChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
BubbleChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BubbleChartComponent, selectors: [["amexio-chart-bubble"]], contentQueries: function BubbleChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartLegendComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, HorizontalAxisComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, VerticalAxisComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartLegendComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.horizontalComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.verticalComp = _t);
    } }, inputs: { colorAxis: "colorAxis", width: "width", height: "height", data: "data", backgroundColor: "backgroundColor" }, decls: 2, vars: 6, consts: [[3, "resize"], ["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function BubbleChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resize", function BubbleChartComponent_Template_div_resize_0_listener($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
        ɵngcc0.ɵɵtemplate(1, BubbleChartComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BubbleChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-bubble',
                template: "\n      <div [attr.id]=\"id\"\n           [style.width]=\"width\"\n           [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n        <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n        </div>\n      </div>\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { colorAxis: [{
            type: _angular_core.Input
        }], width: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], chartLegendComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartLegendComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }], horizontalComp: [{
            type: _angular_core.ContentChildren,
            args: [HorizontalAxisComponent]
        }], verticalComp: [{
            type: _angular_core.ContentChildren,
            args: [VerticalAxisComponent]
        }] }); })();
    return BubbleChartComponent;
}());
/**
 * @nocollapse
 */
BubbleChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
BubbleChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'colorAxis': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'chartLegendComp': [{ type: _angular_core.ContentChildren, args: [ChartLegendComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
    'horizontalComp': [{ type: _angular_core.ContentChildren, args: [HorizontalAxisComponent,] },],
    'verticalComp': [{ type: _angular_core.ContentChildren, args: [VerticalAxisComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var ScatterChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function ScatterChartComponent(loader) {
        this.loader = loader;
        this.id = 'amexio-chart-scatter' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    ScatterChartComponent.prototype.drawChart = function () {
        this.scatterData = google.visualization.arrayToDataTable(this.data);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            backgroundColor: this.backgroundColor,
            legend: this.chartLengendComponent ? {
                position: this.chartLengendComponent.legendPosition ? this.chartLengendComponent.legendPosition : null,
                maxLines: this.chartLengendComponent.maxLinesOfLegend ? this.chartLengendComponent.maxLinesOfLegend : null,
                textStyle: {
                    color: this.chartLengendComponent.legendColor ? this.chartLengendComponent.legendColor : null,
                    fontSize: this.chartLengendComponent.legendFontSize ? this.chartLengendComponent.legendFontSize : null,
                    fontName: this.chartLengendComponent.legendFontName ? this.chartLengendComponent.legendFontName : null,
                    bold: this.chartLengendComponent.isLegendBold ? this.chartLengendComponent.isLegendBold : null,
                    alignment: this.chartLengendComponent.legendAlignment ? this.chartLengendComponent.legendAlignment : null
                }
            } : 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
            vAxis: this.verticalComponent ? { title: this.verticalComponent.title ? this.verticalComponent.title : null, titleTextStyle: { color: this.verticalComponent.titleTextColor ? this.verticalComponent.titleTextColor : null } } : null,
            hAxis: this.horizontalComponent ? { title: this.horizontalComponent.title ? this.horizontalComponent.title : null, titleTextStyle: { color: this.horizontalComponent.titleTextColor ? this.horizontalComponent.titleTextColor : null } } : null
        };
        this.chart = new google.visualization.ScatterChart(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.scatterData, this.options);
        google.visualization.events.addListener(this.chart, 'click', this.click);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    ScatterChartComponent.prototype.click = function (e) {
    };
    /**
     * @return {?}
     */
    ScatterChartComponent.prototype.ngAfterContentInit = function () {
        this.chartLegendArray = this.chartLegendComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        this.chartAreaArray = this.chartAreaComp.toArray();
        this.horizontalArray = this.horizontalComp.toArray();
        this.verticalArray = this.verticalComp.toArray();
        //take first component
        if (this.chartLegendArray.length == 1) {
            this.chartLengendComponent = this.chartLegendArray.pop();
        }
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
        if (this.horizontalArray.length == 1) {
            this.horizontalComponent = this.horizontalArray.pop();
        }
        if (this.verticalArray.length == 1) {
            this.verticalComponent = this.verticalArray.pop();
        }
    };
    /**
     * @return {?}
     */
    ScatterChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('ScatterChart').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ScatterChartComponent.prototype.onResize = function (event) {
        this.drawChart();
    };
ScatterChartComponent.ɵfac = function ScatterChartComponent_Factory(t) { return new (t || ScatterChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
ScatterChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ScatterChartComponent, selectors: [["amexio-chart-scatter"]], contentQueries: function ScatterChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartLegendComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, HorizontalAxisComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, VerticalAxisComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartLegendComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.horizontalComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.verticalComp = _t);
    } }, inputs: { width: "width", height: "height", data: "data", backgroundColor: "backgroundColor" }, decls: 2, vars: 6, consts: [[3, "resize"], ["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function ScatterChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resize", function ScatterChartComponent_Template_div_resize_0_listener($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
        ɵngcc0.ɵɵtemplate(1, ScatterChartComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScatterChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-scatter',
                template: "\n      <div [attr.id]=\"id\"\n           [style.width]=\"width\"\n           [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n        <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n        </div>\n      </div>\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { width: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], chartLegendComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartLegendComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }], horizontalComp: [{
            type: _angular_core.ContentChildren,
            args: [HorizontalAxisComponent]
        }], verticalComp: [{
            type: _angular_core.ContentChildren,
            args: [VerticalAxisComponent]
        }] }); })();
    return ScatterChartComponent;
}());
/**
 * @nocollapse
 */
ScatterChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
ScatterChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'chartLegendComp': [{ type: _angular_core.ContentChildren, args: [ChartLegendComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
    'horizontalComp': [{ type: _angular_core.ContentChildren, args: [HorizontalAxisComponent,] },],
    'verticalComp': [{ type: _angular_core.ContentChildren, args: [VerticalAxisComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var CandlestickChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function CandlestickChartComponent(loader) {
        this.loader = loader;
        this.id = 'amexio-chart-candlestick' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    CandlestickChartComponent.prototype.drawChart = function () {
        this.candlestickData = google.visualization.arrayToDataTable(this.data, true);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            backgroundColor: this.backgroundColor,
            legend: 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
            vAxis: this.verticalComponent ? { title: this.verticalComponent.title ? this.verticalComponent.title : null, titleTextStyle: { color: this.verticalComponent.titleTextColor ? this.verticalComponent.titleTextColor : null } } : null,
            hAxis: this.horizontalComponent ? { title: this.horizontalComponent.title ? this.horizontalComponent.title : null, titleTextStyle: { color: this.horizontalComponent.titleTextColor ? this.horizontalComponent.titleTextColor : null } } : null
        };
        this.chart = new google.visualization.CandlestickChart(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.candlestickData, this.options);
        google.visualization.events.addListener(this.chart, 'click', this.click);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    CandlestickChartComponent.prototype.click = function (e) {
    };
    /**
     * @return {?}
     */
    CandlestickChartComponent.prototype.ngAfterContentInit = function () {
        this.chartAreaArray = this.chartAreaComp.toArray();
        this.horizontalArray = this.horizontalComp.toArray();
        this.verticalArray = this.verticalComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        //take first component
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
        if (this.horizontalArray.length == 1) {
            this.horizontalComponent = this.horizontalArray.pop();
        }
        if (this.verticalArray.length == 1) {
            this.verticalComponent = this.verticalArray.pop();
        }
    };
    /**
     * @return {?}
     */
    CandlestickChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('CandlestickChart').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CandlestickChartComponent.prototype.onResize = function (event) {
        this.drawChart();
    };
CandlestickChartComponent.ɵfac = function CandlestickChartComponent_Factory(t) { return new (t || CandlestickChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
CandlestickChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CandlestickChartComponent, selectors: [["amexio-chart-candlestick"]], contentQueries: function CandlestickChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, HorizontalAxisComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, VerticalAxisComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.horizontalComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.verticalComp = _t);
    } }, inputs: { width: "width", height: "height", data: "data", backgroundColor: "backgroundColor" }, decls: 2, vars: 6, consts: [[3, "resize"], ["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function CandlestickChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resize", function CandlestickChartComponent_Template_div_resize_0_listener($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
        ɵngcc0.ɵɵtemplate(1, CandlestickChartComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CandlestickChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-candlestick',
                template: "\n      <div [attr.id]=\"id\"\n           [style.width]=\"width\"\n           [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n        <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n        </div>\n      </div>\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { width: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], horizontalComp: [{
            type: _angular_core.ContentChildren,
            args: [HorizontalAxisComponent]
        }], verticalComp: [{
            type: _angular_core.ContentChildren,
            args: [VerticalAxisComponent]
        }] }); })();
    return CandlestickChartComponent;
}());
/**
 * @nocollapse
 */
CandlestickChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
CandlestickChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'horizontalComp': [{ type: _angular_core.ContentChildren, args: [HorizontalAxisComponent,] },],
    'verticalComp': [{ type: _angular_core.ContentChildren, args: [VerticalAxisComponent,] },],
};

/*
 * Copyright 2016-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Author - Sagar Jadhav
 *
 */
var CandlestickWaterfallChartComponent = (function () {
    /**
     * @param {?} loader
     */
    function CandlestickWaterfallChartComponent(loader) {
        this.loader = loader;
        this.id = 'amexio-chart-candlestick-water' + Math.floor(Math.random() * 90000) + 10000;
        this.width = '100%';
    }
    /**
     * @return {?}
     */
    CandlestickWaterfallChartComponent.prototype.drawChart = function () {
        this.candlestickData = google.visualization.arrayToDataTable(this.data, true);
        this.options = {
            title: this.chartTitleComponent ? this.chartTitleComponent.title : null,
            titleTextStyle: this.chartTitleComponent ? {
                color: this.chartTitleComponent.titleColor ? this.chartTitleComponent.titleColor : null,
                fontName: this.chartTitleComponent.titleFontName ? this.chartTitleComponent.titleFontName : null,
                fontSize: this.chartTitleComponent.titleFontSize ? this.chartTitleComponent.titleFontSize : null,
                bold: this.chartTitleComponent.isTitleBold ? this.chartTitleComponent.isTitleBold : null,
                italic: this.chartTitleComponent.isTitleItalic ? this.chartTitleComponent.isTitleItalic : null
            } : null,
            backgroundColor: this.backgroundColor,
            legend: 'none',
            chartArea: this.chartAreaComponent ? {
                backgroundColor: this.chartAreaComponent.chartBackgroundColor ? this.chartAreaComponent.chartBackgroundColor : null,
                left: this.chartAreaComponent.leftPosition ? this.chartAreaComponent.leftPosition : null,
                top: this.chartAreaComponent.topPosition ? this.chartAreaComponent.topPosition : null,
                height: this.chartAreaComponent.chartHeightInper ? this.chartAreaComponent.chartHeightInper : null,
                width: this.chartAreaComponent.chartWidthInPer ? this.chartAreaComponent.chartWidthInPer : null
            } : null,
            vAxis: this.verticalComponent ? { title: this.verticalComponent.title ? this.verticalComponent.title : null, titleTextStyle: { color: this.verticalComponent.titleTextColor ? this.verticalComponent.titleTextColor : null } } : null,
            hAxis: this.horizontalComponent ? { title: this.horizontalComponent.title ? this.horizontalComponent.title : null, titleTextStyle: { color: this.horizontalComponent.titleTextColor ? this.horizontalComponent.titleTextColor : null } } : null,
            bar: { groupWidth: this.barWidthGroup ? this.barWidthGroup : null },
            candlestick: {
                fallingColor: this.fallingColorOfBar ? { strokeWidth: 0, fill: this.fallingColorOfBar ? this.fallingColorOfBar : null } : null,
                risingColor: this.risingColorOfBar ? { strokeWidth: 0, fill: this.risingColorOfBar ? this.risingColorOfBar : null } : null // green
            }
        };
        this.chart = new google.visualization.CandlestickChart(document.getElementById(this.id));
        this.hasLoaded = true;
        this.chart.draw(this.candlestickData, this.options);
        google.visualization.events.addListener(this.chart, 'click', this.click);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    CandlestickWaterfallChartComponent.prototype.click = function (e) {
    };
    /**
     * @return {?}
     */
    CandlestickWaterfallChartComponent.prototype.ngAfterContentInit = function () {
        this.chartAreaArray = this.chartAreaComp.toArray();
        this.horizontalArray = this.horizontalComp.toArray();
        this.verticalArray = this.verticalComp.toArray();
        this.chartTitleArray = this.chartTitleComp.toArray();
        //take first component
        if (this.chartTitleArray.length == 1) {
            this.chartTitleComponent = this.chartTitleArray.pop();
        }
        if (this.chartAreaArray.length == 1) {
            this.chartAreaComponent = this.chartAreaArray.pop();
        }
        if (this.horizontalArray.length == 1) {
            this.horizontalComponent = this.horizontalArray.pop();
        }
        if (this.verticalArray.length == 1) {
            this.verticalComponent = this.verticalArray.pop();
        }
    };
    /**
     * @return {?}
     */
    CandlestickWaterfallChartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasLoaded = false;
        this.loader.loadCharts('CandlestickChart').subscribe(function (value) { return console.log(); }, function (errror) { return console.error(errror); }, function () {
            _this.drawChart();
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CandlestickWaterfallChartComponent.prototype.onResize = function (event) {
        this.drawChart();
    };
CandlestickWaterfallChartComponent.ɵfac = function CandlestickWaterfallChartComponent_Factory(t) { return new (t || CandlestickWaterfallChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartLoaderService)); };
CandlestickWaterfallChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CandlestickWaterfallChartComponent, selectors: [["amexio-chart-candlestick-waterfall"]], contentQueries: function CandlestickWaterfallChartComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartAreaComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ChartTitleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, HorizontalAxisComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, VerticalAxisComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartAreaComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartTitleComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.horizontalComp = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.verticalComp = _t);
    } }, inputs: { width: "width", height: "height", data: "data", backgroundColor: "backgroundColor", barWidthGroup: "barWidthGroup", fallingColorOfBar: "fallingColorOfBar", risingColorOfBar: "risingColorOfBar" }, decls: 2, vars: 6, consts: [[3, "resize"], ["class", "lmask", 4, "ngIf"], [1, "lmask"]], template: function CandlestickWaterfallChartComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("resize", function CandlestickWaterfallChartComponent_Template_div_resize_0_listener($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);
        ɵngcc0.ɵɵtemplate(1, CandlestickWaterfallChartComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.width)("height", ctx.height);
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasLoaded);
    } }, directives: [ɵngcc1.NgIf], styles: [_c0] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CandlestickWaterfallChartComponent, [{
        type: _angular_core.Component,
        args: [{
                selector: 'amexio-chart-candlestick-waterfall',
                template: "\n      <div [attr.id]=\"id\"\n           [style.width]=\"width\"\n           [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n        <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n        </div>\n      </div>\n  ",
                styles: [".lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  "]
            }]
    }], function () { return [{ type: ChartLoaderService }]; }, { width: [{
            type: _angular_core.Input
        }], height: [{
            type: _angular_core.Input
        }], data: [{
            type: _angular_core.Input
        }], backgroundColor: [{
            type: _angular_core.Input
        }], barWidthGroup: [{
            type: _angular_core.Input
        }], fallingColorOfBar: [{
            type: _angular_core.Input
        }], risingColorOfBar: [{
            type: _angular_core.Input
        }], chartAreaComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartAreaComponent]
        }], chartTitleComp: [{
            type: _angular_core.ContentChildren,
            args: [ChartTitleComponent]
        }], horizontalComp: [{
            type: _angular_core.ContentChildren,
            args: [HorizontalAxisComponent]
        }], verticalComp: [{
            type: _angular_core.ContentChildren,
            args: [VerticalAxisComponent]
        }] }); })();
    return CandlestickWaterfallChartComponent;
}());
/**
 * @nocollapse
 */
CandlestickWaterfallChartComponent.ctorParameters = function () { return [
    { type: ChartLoaderService, },
]; };
CandlestickWaterfallChartComponent.propDecorators = {
    'width': [{ type: _angular_core.Input },],
    'height': [{ type: _angular_core.Input },],
    'data': [{ type: _angular_core.Input },],
    'backgroundColor': [{ type: _angular_core.Input },],
    'barWidthGroup': [{ type: _angular_core.Input },],
    'fallingColorOfBar': [{ type: _angular_core.Input },],
    'risingColorOfBar': [{ type: _angular_core.Input },],
    'chartAreaComp': [{ type: _angular_core.ContentChildren, args: [ChartAreaComponent,] },],
    'chartTitleComp': [{ type: _angular_core.ContentChildren, args: [ChartTitleComponent,] },],
    'horizontalComp': [{ type: _angular_core.ContentChildren, args: [HorizontalAxisComponent,] },],
    'verticalComp': [{ type: _angular_core.ContentChildren, args: [VerticalAxisComponent,] },],
};

var AmexioChartModule = (function () {
    function AmexioChartModule() {
    }
    /**
     * @return {?}
     */
    AmexioChartModule.forRoot = function () {
        return {
            ngModule: AmexioChartModule,
            providers: [ChartLoaderService]
        };
    };
AmexioChartModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AmexioChartModule });
AmexioChartModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AmexioChartModule_Factory(t) { return new (t || AmexioChartModule)(); }, providers: [ChartLoaderService], imports: [[
            _angular_common.CommonModule,
            _angular_http.HttpModule,
            _angular_forms.FormsModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AmexioChartModule, { declarations: [AreaChartComponent, BarChartComponent, ChartAreaComponent, ChartLegendComponent, ChartTitleComponent, ColumnChartComponent, DonutChartComponent, HistogramChartComponent, LineChartComponent, PieChartComponent, TimeLineChartComponent, ComboChartComponent, VerticalAxisComponent, HorizontalAxisComponent, BubbleChartComponent, ScatterChartComponent, CandlestickChartComponent, CandlestickWaterfallChartComponent], imports: [ɵngcc1.CommonModule, ɵngcc2.HttpModule, ɵngcc3.FormsModule], exports: [AreaChartComponent, BarChartComponent, ChartAreaComponent, ChartLegendComponent, ChartTitleComponent, ColumnChartComponent, DonutChartComponent, HistogramChartComponent, LineChartComponent, PieChartComponent, TimeLineChartComponent, ComboChartComponent, VerticalAxisComponent, HorizontalAxisComponent, BubbleChartComponent, ScatterChartComponent, CandlestickChartComponent, CandlestickWaterfallChartComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AmexioChartModule, [{
        type: _angular_core.NgModule,
        args: [{
                imports: [
                    _angular_common.CommonModule,
                    _angular_http.HttpModule,
                    _angular_forms.FormsModule
                ],
                declarations: [
                    AreaChartComponent, BarChartComponent, ChartAreaComponent,
                    ChartLegendComponent, ChartTitleComponent, ColumnChartComponent,
                    DonutChartComponent, HistogramChartComponent, LineChartComponent,
                    PieChartComponent, TimeLineChartComponent, ComboChartComponent,
                    VerticalAxisComponent,
                    HorizontalAxisComponent,
                    BubbleChartComponent,
                    ScatterChartComponent, CandlestickChartComponent, CandlestickWaterfallChartComponent
                ],
                exports: [
                    AreaChartComponent, BarChartComponent, ChartAreaComponent,
                    ChartLegendComponent, ChartTitleComponent, ColumnChartComponent,
                    DonutChartComponent, HistogramChartComponent, LineChartComponent, PieChartComponent,
                    TimeLineChartComponent, ComboChartComponent, VerticalAxisComponent,
                    HorizontalAxisComponent,
                    BubbleChartComponent,
                    ScatterChartComponent, CandlestickChartComponent, CandlestickWaterfallChartComponent
                ],
                providers: [ChartLoaderService]
            }]
    }], function () { return []; }, null); })();
    return AmexioChartModule;
}());
/**
 * @nocollapse
 */
AmexioChartModule.ctorParameters = function () { return []; };

exports.AmexioChartModule = AmexioChartModule;
exports.ChartLegendComponent = ChartLegendComponent;
exports.ChartTitleComponent = ChartTitleComponent;
exports.PieChartComponent = PieChartComponent;
exports.AreaChartComponent = AreaChartComponent;
exports.ChartAreaComponent = ChartAreaComponent;
exports.ColumnChartComponent = ColumnChartComponent;
exports.DonutChartComponent = DonutChartComponent;
exports.HistogramChartComponent = HistogramChartComponent;
exports.LineChartComponent = LineChartComponent;
exports.BarChartComponent = BarChartComponent;
exports.TimeLineChartComponent = TimeLineChartComponent;
exports.ComboChartComponent = ComboChartComponent;
exports.VerticalAxisComponent = VerticalAxisComponent;
exports.HorizontalAxisComponent = HorizontalAxisComponent;
exports.BubbleChartComponent = BubbleChartComponent;
exports.ScatterChartComponent = ScatterChartComponent;
exports.CandlestickChartComponent = CandlestickChartComponent;
exports.CandlestickWaterfallChartComponent = CandlestickWaterfallChartComponent;
exports.ChartLoaderService = ChartLoaderService;

Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,