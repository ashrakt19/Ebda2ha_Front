import { AfterContentInit, QueryList } from '@angular/core';
import { ChartLegendComponent } from "../chartlegend/chart.legend.component";
import { ChartTitleComponent } from "../charttitle/chart.title.component";
import { ChartAreaComponent } from "../chartarea/chart.area.component";
import { ChartLoaderService } from "../chart.loader.service";
import * as ɵngcc0 from '@angular/core';
export declare class ColumnChartComponent implements AfterContentInit {
    private loader;
    private options;
    private columnData;
    private chart;
    id: any;
    width: string;
    height: string;
    data: any;
    isStacked: boolean;
    backgroundColor: string;
    hasLoaded: boolean;
    chartLegendComp: QueryList<ChartLegendComponent>;
    chartTitleComp: QueryList<ChartTitleComponent>;
    chartAreaComp: QueryList<ChartAreaComponent>;
    chartAreaArray: ChartAreaComponent[];
    chartAreaComponent: ChartAreaComponent;
    chartLegendArray: ChartLegendComponent[];
    chartLengendComponent: ChartLegendComponent;
    chartTitleArray: ChartTitleComponent[];
    chartTitleComponent: ChartTitleComponent;
    constructor(loader: ChartLoaderService);
    drawChart(): void;
    onClick(e: any): void;
    ngAfterContentInit(): void;
    /**
     * This method create data table structure of array and return in required chart data
     *
     * */
    createTable(array: any[]): any;
    ngOnInit(): void;
    onResize(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColumnChartComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColumnChartComponent, "amexio-chart-column", never, { "isStacked": "isStacked"; "width": "width"; "height": "height"; "data": "data"; "backgroundColor": "backgroundColor"; }, {}, ["chartLegendComp", "chartTitleComp", "chartAreaComp"], never>;
}

//# sourceMappingURL=column.chart.component.d.ts.map