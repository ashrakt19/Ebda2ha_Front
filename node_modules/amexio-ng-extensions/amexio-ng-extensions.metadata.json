{"__symbolic":"module","version":3,"metadata":{"AmexioWidgetModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule"},{"__symbolic":"reference","module":"@angular/http","name":"HttpModule"}],"declarations":[{"__symbolic":"reference","name":"ButtonComponent"},{"__symbolic":"reference","name":"TextInputComponent"},{"__symbolic":"reference","name":"ButtonDropdownComponent"},{"__symbolic":"reference","name":"ButtonSplitDropdownComponent"},{"__symbolic":"reference","name":"DropdownItemComponent"},{"__symbolic":"reference","name":"ButtonGroupActionComponent"},{"__symbolic":"reference","name":"ButtonGroupComponent"},{"__symbolic":"reference","name":"CheckBoxGroup"},{"__symbolic":"reference","name":"DateTimeComponent"},{"__symbolic":"reference","name":"DropDownComponent"},{"__symbolic":"reference","name":"EmailInputComponent"},{"__symbolic":"reference","name":"NumberInputComponent"},{"__symbolic":"reference","name":"PasswordInputComponent"},{"__symbolic":"reference","name":"ProgressComponent"},{"__symbolic":"reference","name":"RadioGroupComponent"},{"__symbolic":"reference","name":"RatingInputComponent"},{"__symbolic":"reference","name":"TextAreaComponent"},{"__symbolic":"reference","name":"TypeAheadComponent"},{"__symbolic":"reference","name":"TabPaneComponent"},{"__symbolic":"reference","name":"TabComponent"},{"__symbolic":"reference","name":"VerticalLeftTabPaneComponent"},{"__symbolic":"reference","name":"VerticalRightTabPaneComponent"},{"__symbolic":"reference","name":"DataTableComponent"},{"__symbolic":"reference","name":"ColumnComponent"},{"__symbolic":"reference","name":"FilterComponent"},{"__symbolic":"reference","name":"CarouselComponent"},{"__symbolic":"reference","name":"ItemSelectorComponent"},{"__symbolic":"reference","name":"NavbarComponent"},{"__symbolic":"reference","name":"NavbarSubMenuComponent"},{"__symbolic":"reference","name":"SideNavBarComponent"},{"__symbolic":"reference","name":"FilterTreeViewComponent"},{"__symbolic":"reference","name":"TreeViewComponent"},{"__symbolic":"reference","name":"TreeDataTableComponent"},{"__symbolic":"reference","name":"PaneActionComponent"},{"__symbolic":"reference","name":"PaneBodyComponent"},{"__symbolic":"reference","name":"PaneHeaderComponent"},{"__symbolic":"reference","name":"WindowPaneComponent"},{"__symbolic":"reference","name":"DialogComponent"},{"__symbolic":"reference","name":"CardComponent"},{"__symbolic":"reference","name":"ListBoxComponent"},{"__symbolic":"reference","name":"NotifyComponent"},{"__symbolic":"reference","name":"FieldSetComponent"},{"__symbolic":"reference","name":"FieldSetBodyComponent"},{"__symbolic":"reference","name":"ImageComponent"},{"__symbolic":"reference","name":"StepBlockComponent"},{"__symbolic":"reference","name":"StepsComponent"}],"exports":[{"__symbolic":"reference","name":"ButtonComponent"},{"__symbolic":"reference","name":"TextInputComponent"},{"__symbolic":"reference","name":"ButtonDropdownComponent"},{"__symbolic":"reference","name":"ButtonSplitDropdownComponent"},{"__symbolic":"reference","name":"DropdownItemComponent"},{"__symbolic":"reference","name":"ButtonGroupActionComponent"},{"__symbolic":"reference","name":"ButtonGroupComponent"},{"__symbolic":"reference","name":"CheckBoxGroup"},{"__symbolic":"reference","name":"DateTimeComponent"},{"__symbolic":"reference","name":"DropDownComponent"},{"__symbolic":"reference","name":"EmailInputComponent"},{"__symbolic":"reference","name":"NumberInputComponent"},{"__symbolic":"reference","name":"PasswordInputComponent"},{"__symbolic":"reference","name":"ProgressComponent"},{"__symbolic":"reference","name":"RadioGroupComponent"},{"__symbolic":"reference","name":"RatingInputComponent"},{"__symbolic":"reference","name":"TextAreaComponent"},{"__symbolic":"reference","name":"TypeAheadComponent"},{"__symbolic":"reference","name":"TabPaneComponent"},{"__symbolic":"reference","name":"TabComponent"},{"__symbolic":"reference","name":"VerticalLeftTabPaneComponent"},{"__symbolic":"reference","name":"VerticalRightTabPaneComponent"},{"__symbolic":"reference","name":"DataTableComponent"},{"__symbolic":"reference","name":"ColumnComponent"},{"__symbolic":"reference","name":"FilterComponent"},{"__symbolic":"reference","name":"CarouselComponent"},{"__symbolic":"reference","name":"ItemSelectorComponent"},{"__symbolic":"reference","name":"NavbarComponent"},{"__symbolic":"reference","name":"NavbarSubMenuComponent"},{"__symbolic":"reference","name":"SideNavBarComponent"},{"__symbolic":"reference","name":"FilterTreeViewComponent"},{"__symbolic":"reference","name":"TreeViewComponent"},{"__symbolic":"reference","name":"TreeDataTableComponent"},{"__symbolic":"reference","name":"PaneActionComponent"},{"__symbolic":"reference","name":"PaneBodyComponent"},{"__symbolic":"reference","name":"PaneHeaderComponent"},{"__symbolic":"reference","name":"WindowPaneComponent"},{"__symbolic":"reference","name":"DialogComponent"},{"__symbolic":"reference","name":"CardComponent"},{"__symbolic":"reference","name":"ListBoxComponent"},{"__symbolic":"reference","name":"NotifyComponent"},{"__symbolic":"reference","name":"FieldSetComponent"},{"__symbolic":"reference","name":"FieldSetBodyComponent"},{"__symbolic":"reference","name":"ImageComponent"},{"__symbolic":"reference","name":"StepBlockComponent"},{"__symbolic":"reference","name":"StepsComponent"}]}]}],"members":{}},"ButtonComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-btn","template":"\n      <div>\n          <button type=\"button\" (click)=\"btnClick($event)\"\n                  [class]=\"btnStyleClass\"\n                  [attr.fieldName] = \"fieldName\"\n                  [attr.disabled] = \"disabled ? true: null\"\n                  data-toggle=\"tooltip\" [attr.data-placement]=\"popoverPlacement\" [attr.title]=\"tooltipMessage\">\n              <ng-container *ngIf=\"isLoading\">\n                <i class=\"fa fa-refresh fa-spin \" aria-hidden=\"true\"></i>&nbsp;\n              </ng-container>\n              \n              <ng-container *ngIf=\"icon!=null\">\n                <i [class]=\"iconStyleClass\" aria-hidden=\"true\"></i>                \n              </ng-container>\n              {{label}}\n          </button>\n      </div>\n  ","styles":["\n  .glyphicon-refresh-animate {\n    -animation: spin .7s infinite linear;\n    -webkit-animation: spin2 .7s infinite linear;\n}\n\n@-webkit-keyframes spin2 {\n    from { -webkit-transform: rotate(0deg);}\n    to { -webkit-transform: rotate(360deg);}\n}\n\n@keyframes spin {\n    from { transform: scale(1) rotate(0deg);}\n    to { transform: scale(1) rotate(360deg);}\n}"]}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"icon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onClickRoute":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"tooltipMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"isLoading":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"size":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"block":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fieldName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"popoverPlacement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"btnClick":[{"__symbolic":"method"}]}},"CommonHttpService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"}]}],"fetchData":[{"__symbolic":"method"}],"setDisabled":[{"__symbolic":"method"}],"validateAll":[{"__symbolic":"method"}]}},"CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"TextInputComponent"},"multi":true},"BASE_IMPL_TEXT_INPUT":{"provide":{"__symbolic":"reference","name":"FormInputBase"},"useExisting":{"__symbolic":"reference","name":"TextInputComponent"}},"TextInputComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormInputBase"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-text-input","template":"\n    <div [attr.class]=\"divCss\">\n      \n      <ng-container *ngIf=\"hasLabel\">\n        <label [attr.for]=\"elementId\"\n               [style.font-style]=\"fontStyle\"\n               [style.font-family]=\"fontFamily\"\n               [style.font-size]=\"fontSize\"\n               class=\"control-label\">\n          {{fieldLabel}}\n        </label>\n      </ng-container>\n\n      <input type=\"text\"\n             (blur)=\"onBlur()\"\n             [(ngModel)]=\"value\"\n             [attr.fieldName] = \"fieldName\"\n             [attr.id]=\"elementId\"\n             [attr.placeholder]=\"placeholder\"\n             [attr.maxLength]=\"maxLength\"\n             [attr.minLength]=\"minLength\"\n             [attr.disabled] = \"disabled ? true: null\"\n             [required]=\"allowBlank ? true: null\"\n             [attr.data-error]=\"errorMsg\"\n             [attr.aria-describedby]=\"spanId\"\n             autocomplete=\"off\"\n             class=\"form-control\"\n             [attr.data-toggle]=\"popoverField\" title=\"Info\" [attr.data-placement]=\"popoverPlacement\"  data-trigger=\"focus\"  data-html=\"true\"  [attr.data-content]=\"helpInfoMsg\">\n\n      <ng-container *ngIf=\"iconFeedBack\">\n        <span class=\"form-control-feedback-custom\">\n          <i [attr.class]=\"iconClassName\"></i>\n        </span>\n      </ng-container>\n\n      <ng-container *ngIf=\"!iconFeedBack\">\n        <i [class]=\"fieldglyphIcon\"></i>\n      </ng-container>\n      \n    </div>\n","providers":[{"__symbolic":"reference","name":"CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR"},{"__symbolic":"reference","name":"BASE_IMPL_TEXT_INPUT"}],"styles":["\n        /**\n     A Style Sheet for all form inputs common used classes\n     */\n\n        /** Form Validations & Icon Positioning **/\n        .has-feedback-custom {\n            position: relative;\n        }\n        .has-feedback-custom .form-control {\n            padding-right: 47.5px;\n        }\n\n        .form-control-feedback-custom {\n            position: absolute;\n            top: 0;\n            right: 0;\n            z-index: 2;\n            display: block;\n            width: 38px;\n            height: 38px;\n            line-height: 38px;\n            text-align: center;\n            pointer-events: none;\n        }\n\n        .has-feedback-custom label ~ .form-control-feedback-custom {\n            top: 32px;\n        }\n        .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n            top: 0;\n        }"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"isValidInput":[{"__symbolic":"method"}]}},"FormInputBase":{"__symbolic":"class","members":{"fieldLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fieldName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"minLength":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"minErrorMsg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"maxLength":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"maxErrorMsg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"allowBlank":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"errorMsg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"iconFeedBack":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fontStyle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fontFamily":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fontSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fieldIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"hasLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"pattern":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"popoverPlacement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"enablePopOver":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"validate":[{"__symbolic":"method"}],"isValidInput":[{"__symbolic":"method"}],"setValidClassNames":[{"__symbolic":"method"}],"setInvalidatedClassNames":[{"__symbolic":"method"}]}},"CHECK_COLUMN_SIZE":"col-lg-","CheckBoxGroup":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-checkbox","template":"\n\n        <ng-container *ngIf=\"enableBoxStyle\">\n            <div [attr.class]=\"divCss\">\n                <label  *ngIf=\"fieldLabel\" [attr.for]=\"elementId\">{{fieldLabel}}</label>\n                <div class=\"\" [ngClass]=\"{'row':column || column!='','list-group':!column ||column==''}\">\n                    <li class=\"list-group-item col-sm-12\" *ngIf=\"searchBox\"><span class=\"col-sm-12\"><input [(ngModel)]=\"textValue\" type=\"text\" class=\"form-control\" placeholder=\"Please select\" (keyup)=\"filterData($event)\"></span></li>\n                    <li class=\"list-group-item\" [ngClass]=\"calculatedColSize\" *ngFor=\"let row of viewData\">\n                        <label class=\"form-check-label\">\n                            <input  type=\"checkbox\" [checked]=\"row[valueField]\"  (click)=\"setSelectedCheckBox(row, $event)\"> {{row[displayField]}}\n                        </label>\n                    </li>\n                </div>\n            </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"!enableBoxStyle\">\n            <div [attr.class]=\"divCss\">\n                <label  *ngIf=\"fieldLabel\" [attr.for]=\"elementId\">{{fieldLabel}}</label>\n                <div class=\"\" [ngClass]=\"{'row':column || column!='','list-group':!column ||column==''}\">\n                    <span class=\"col-sm-12\" *ngIf=\"searchBox\"><span class=\"col-sm-12\"><input [(ngModel)]=\"textValue\" type=\"text\" class=\"form-control\" placeholder=\"Please select\" (keyup)=\"filterData($event)\"></span></span>\n                    <span class=\"\" [ngClass]=\"calculatedColSize\" *ngFor=\"let row of viewData\">\n              <label class=\"form-check-label\">\n                <input  type=\"checkbox\" [checked]=\"row[valueField]\"  (click)=\"setSelectedCheckBox(row, $event)\"> {{row[displayField]}}\n              </label>\n            </span>\n                </div>\n            </div>\n        </ng-container>\n\n    ","providers":[{"__symbolic":"reference","name":"CommonHttpService"}],"styles":["\n        /**\n A Style Sheet for all form inputs common used classes\n */\n\n        /** Form Validations & Icon Positioning **/\n        .has-feedback-custom {\n            position: relative;\n        }\n        .has-feedback-custom .form-control {\n            padding-right: 47.5px;\n        }\n\n        .form-control-feedback-custom {\n            position: absolute;\n            top: 0;\n            right: 0;\n            z-index: 2;\n            display: block;\n            width: 38px;\n            height: 38px;\n            line-height: 38px;\n            text-align: center;\n            pointer-events: none;\n        }\n\n        .has-feedback-custom label ~ .form-control-feedback-custom {\n            top: 32px;\n        }\n        .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n            top: 0;\n        }\n    "]}]}],"members":{"enableBoxStyle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fieldLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fieldName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"displayField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"valueField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"searchBox":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"checkBoxGroupDownBindData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"column":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CommonHttpService"}]}],"ngOnInit":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"getResponseData":[{"__symbolic":"method"}],"filterData":[{"__symbolic":"method"}],"setSelectedCheckBox":[{"__symbolic":"method"}],"emitSelectedRows":[{"__symbolic":"method"}]}},"DateTimeComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-date-time-picker","template":"\n    <div class=\"form-inline ng2-datetime\">\n      <label [attr.for]=\"idDatePicker\">{{fieldLabel}}</label>\n      <div [ngClass]=\"{ 'form-group': true, 'input-group': !datepickerOptions.hideIcon, 'date': true }\">\n        <input id=\"{{idDatePicker}}\" type=\"text\" class=\"form-control\"\n               [attr.readonly]=\"readonly\"\n               [attr.required]=\"required\"\n               [attr.placeholder]=\"datepickerOptions.placeholder || 'Choose date'\"\n               [attr.tabindex]=\"tabindex\"\n               [(ngModel)]=\"dateModel\"\n               (blur)=\"onTouched()\"\n               (keyup)=\"checkEmptyValue($event)\"/>\n        <div [hidden]=\"datepickerOptions.hideIcon || datepickerOptions === false || false\"\n             (click)=\"showDatepicker()\"\n             class=\"input-group-addon\">\n          <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n      <div [ngClass]=\"{ 'form-group': true, 'input-group': !timepickerOptions.hideIcon, 'bootstrap-timepicker timepicker': true }\">\n        <input id=\"{{idTimePicker}}\" type=\"text\" class=\"form-control input-small\"\n               [attr.readonly]=\"readonly\"\n               [attr.required]=\"required\"\n               [attr.placeholder]=\"timepickerOptions.placeholder || 'Set time'\"\n               [attr.tabindex]=\"tabindex\"\n               [(ngModel)]=\"timeModel\"\n               (focus)=\"showTimepicker()\"\n               (blur)=\"onTouched()\"\n               (keyup)=\"checkEmptyValue($event)\">\n        <span [hidden]=\"timepickerOptions.hideIcon || false\" class=\"input-group-addon\">\n                    <i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n                </span>\n      </div>\n      <button *ngIf=\"hasClearButton\" type=\"button\" (click)=\"clearModels()\">Clear</button>\n    </div>\n  ","styles":[".ng2-datetime *[hidden] { display: none; }"]}]}],"members":{"dateChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"timepickerOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["timepicker"]}]}],"datepickerOptions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["datepicker"]}]}],"hasClearButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["hasClearButton"]}]}],"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"required":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"tabindex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fieldLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["dateChange",["$event"]]}]}],"onTouched":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["blur"]}]}],"tabindexAttr":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding"},"arguments":["attr.tabindex"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"NgControl"}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"checkEmptyValue":[{"__symbolic":"method"}],"clearModels":[{"__symbolic":"method"}],"showTimepicker":[{"__symbolic":"method"}],"showDatepicker":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"updateModel":[{"__symbolic":"method"}],"updateDatepicker":[{"__symbolic":"method"}],"pad":[{"__symbolic":"method"}]}},"CUSTOM_DROPDOWN_CONTROL_VALUE_ACCESSOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"DropDownComponent"},"multi":true},"BASE_IMPL_DROPDOWN_INPUT":{"provide":{"__symbolic":"reference","name":"FormInputBase"},"useExisting":{"__symbolic":"reference","name":"DropDownComponent"}},"DropDownComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormInputBase"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-dropdown","template":"\n        <!-- Faux input to handle Bindings -->\n        <label *ngIf=\"fieldLabel\">{{fieldLabel}}</label>\n        <input type=\"hidden\"\n               (blur)=\"onBlur()\"\n               [ngModel]=\"value\"\n               (ngModelChange)=\"onChange($event)\"\n        />\n\n        <div class=\"dropdown\">\n\n            <button class=\"btn btn-secondary \"  [style.width]=\"width\" type=\"button\" [attr.id]=\"elementId\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                <ng-container *ngIf=\"multiSelect\">\n                    <span style=\"float: left;\"> {{value != null || '' ? getMultiDisplayField(value) : placeholder}}</span>\n                    <span class=\"dropdown-toggle\" style=\"float: right;\"></span>\n                </ng-container>\n\n                <ng-container *ngIf=\"!multiSelect\">\n                    <span style=\"float: left;\">{{value != null || '' ? getDisplayField(value) : placeholder}}</span>\n                    <span class=\"dropdown-toggle\" style=\"float: right;\"></span>\n                </ng-container>\n\n            </button>\n            <div class=\"dropdown-menu scrollable-options\"  [style.width]=\"width\" [attr.aria-labelledby]=\"elementId\">\n                <input *ngIf=\"searchBox\" type=\"text\" class=\"dropdown-item form-control\" (keyup)=\"onDropDownSearchKeyUp($event)\"\n                       placeholder=\"Search\"/>\n                <button class=\"dropdown-item\" *ngFor=\"let row of filteredOptions\"\n                        (click)=\"onUserSelectionChange(row[valueField],row[displayField],row)\">\n                    {{row[displayField]}} <i class=\"fa fa-check pull-right\" aria-hidden=\"true\" *ngIf=\"row?.checked\"></i>\n                </button>\n\n                <ng-template *ngIf=\"filteredOptions.length < 1\">\n                    <a class=\"dropdown-item disabled\">No Options</a>\n                </ng-template>\n\n            </div>\n        </div>\n\n    ","providers":[{"__symbolic":"reference","name":"CUSTOM_DROPDOWN_CONTROL_VALUE_ACCESSOR"},{"__symbolic":"reference","name":"BASE_IMPL_DROPDOWN_INPUT"}]}]}],"members":{"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"displayField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"valueField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"multiSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"searchBox":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onSingleSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onMultiSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CommonHttpService"}]}],"ngOnInit":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"onUserSelectionChange":[{"__symbolic":"method"}],"getMultiDisplayField":[{"__symbolic":"method"}],"getDisplayField":[{"__symbolic":"method"}],"onDropDownSearchKeyUp":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}]}},"CUSTOM_EMAIL_INPUT_CONTROL_VALUE_ACCESSOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"EmailInputComponent"},"multi":true},"BASE_IMPL_EMAIL_INPUT":{"provide":{"__symbolic":"reference","name":"FormInputBase"},"useExisting":{"__symbolic":"reference","name":"EmailInputComponent"}},"EmailInputComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormInputBase"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-email-input","template":"\n      <div [attr.class]=\"divCss\">\n\n        <ng-container *ngIf=\"hasLabel\">\n          <label [attr.for]=\"elementId\"\n                 [style.font-style]=\"fontStyle\"\n                 [style.font-family]=\"fontFamily\"\n                 [style.font-size]=\"fontSize\"\n                 class=\"control-label\">\n            {{fieldLabel}}\n          </label>\n        </ng-container>\n\n        <input type=\"email\"\n               pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$\"\n               (blur)=\"onBlur()\"\n               [(ngModel)]=\"value\"\n               [attr.fieldName] = \"fieldName\"\n               [attr.id]=\"elementId\"\n               [attr.placeholder]=\"placeholder\"\n               [attr.maxLength]=\"maxLength\"\n               [attr.minLength]=\"minLength\"\n               [attr.disabled] = \"disabled ? true: null\"\n               [required]=\"allowBlank ? true: null\"\n               [attr.data-error]=\"errorMsg\"\n               [attr.aria-describedby]=\"spanId\"\n               autocomplete=\"off\"\n               class=\"form-control\"\n               [attr.data-toggle]=\"popoverField\" title=\"Info\" [attr.data-placement]=\"popoverPlacement\"  data-trigger=\"focus\"  data-html=\"true\"  [attr.data-content]=\"helpInfoMsg\">\n\n        <ng-container *ngIf=\"iconFeedBack\">\n        <span class=\"form-control-feedback-custom\">\n          <i [attr.class]=\"iconClassName\"></i>\n        </span>\n        </ng-container>\n\n        <ng-container *ngIf=\"!iconFeedBack\">\n          <i [class]=\"fieldglyphIcon\"></i>\n        </ng-container>\n\n      </div>\n\n\n    ","providers":[{"__symbolic":"reference","name":"CUSTOM_EMAIL_INPUT_CONTROL_VALUE_ACCESSOR"},{"__symbolic":"reference","name":"BASE_IMPL_EMAIL_INPUT"}],"styles":["\n        /**\n     A Style Sheet for all form inputs common used classes\n     */\n\n        /** Form Validations & Icon Positioning **/\n        .has-feedback-custom {\n            position: relative;\n        }\n        .has-feedback-custom .form-control {\n            padding-right: 47.5px;\n        }\n\n        .form-control-feedback-custom {\n            position: absolute;\n            top: 0;\n            right: 0;\n            z-index: 2;\n            display: block;\n            width: 38px;\n            height: 38px;\n            line-height: 38px;\n            text-align: center;\n            pointer-events: none;\n        }\n\n        .has-feedback-custom label ~ .form-control-feedback-custom {\n            top: 32px;\n        }\n        .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n            top: 0;\n        }\n    "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"validate":[{"__symbolic":"method"}],"isValidInput":[{"__symbolic":"method"}]}},"CUSTOM_NUMBER_INPUT_CONTROL_VALUE_ACCESSOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"NumberInputComponent"},"multi":true},"BASE_IMPL_NUMBER_INPUT":{"provide":{"__symbolic":"reference","name":"FormInputBase"},"useExisting":{"__symbolic":"reference","name":"NumberInputComponent"}},"NumberInputComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormInputBase"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-number-input","template":"\n        <div [attr.class]=\"divCss\">\n\n            <ng-container *ngIf=\"hasLabel\">\n                <label [attr.for]=\"elementId\"\n                       [style.font-style]=\"fontStyle\"\n                       [style.font-family]=\"fontFamily\"\n                       [style.font-size]=\"fontSize\"\n                       class=\"control-label\">\n                    {{fieldLabel}}\n                </label>\n            </ng-container>\n\n            <input type=\"number\"\n                   (blur)=\"onBlur()\"\n                   autocomplete=\"off\"\n                   class=\"form-control\"\n                   [(ngModel)]=\"value\"\n                   [attr.fieldName] = \"fieldName\"\n                   [attr.id]=\"elementId\"\n                   [attr.placeholder]=\"placeholder\"\n                   [attr.max]=\"maxValue\"\n                   [attr.min]=\"minValue\"\n                   [attr.disabled] = \"disabled ? true: null\"\n                   [required]=\"allowBlank ? true: null\"\n                   [attr.data-error]=\"errorMsg\"\n                   [attr.aria-describedby]=\"spanId\"\n                   data-toggle=\"popover\" title=\"Info\" [attr.data-placement]=\"popoverPlacement\"  data-trigger=\"focus\"  data-html=\"true\"  [attr.data-content]=\"helpInfoMsg\"\n            >\n\n\n            <ng-container *ngIf=\"iconFeedBack\">\n                <span [attr.class]=\"iconClassName\" aria-hidden=\"true\"></span>\n                <span [attr.id]=\"spanId\" class=\"sr-only\">({{iconName}})</span>\n            </ng-container>\n\n            <ng-container *ngIf=\"!iconFeedBack\">\n                <i [class]=\"fieldglyphIcon\"></i>\n            </ng-container>\n\n            <div class=\"help-block with-errors\"></div>\n\n        </div>\n\n\n    ","providers":[{"__symbolic":"reference","name":"CUSTOM_NUMBER_INPUT_CONTROL_VALUE_ACCESSOR"},{"__symbolic":"reference","name":"BASE_IMPL_NUMBER_INPUT"}],"styles":["/**\n A Style Sheet for all form inputs common used classes\n */\n\n    /** Form Validations & Icon Positioning **/\n    .has-feedback-custom {\n        position: relative;\n    }\n    .has-feedback-custom .form-control {\n        padding-right: 47.5px;\n    }\n\n    .form-control-feedback-custom {\n        position: absolute;\n        top: 0;\n        right: 0;\n        z-index: 2;\n        display: block;\n        width: 38px;\n        height: 38px;\n        line-height: 38px;\n        text-align: center;\n        pointer-events: none;\n    }\n\n    .has-feedback-custom label ~ .form-control-feedback-custom {\n        top: 32px;\n    }\n    .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n        top: 0;\n    }"]}]}],"members":{"minValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"maxValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"validate":[{"__symbolic":"method"}],"isValidInput":[{"__symbolic":"method"}],"setValidClassNames":[{"__symbolic":"method"}],"setInvalidatedClassNames":[{"__symbolic":"method"}]}},"CUSTOM_PASSWORD_INPUT_CONTROL_VALUE_ACCESSOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"PasswordInputComponent"},"multi":true},"BASE_IMPL_PASSWORD_INPUT":{"provide":{"__symbolic":"reference","name":"FormInputBase"},"useExisting":{"__symbolic":"reference","name":"PasswordInputComponent"}},"PasswordInputComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormInputBase"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-password-input","template":"\n\n        <div [attr.class]=\"divCss\">\n\n            <ng-container *ngIf=\"hasLabel\">\n                <label [attr.for]=\"elementId\"\n                       [style.font-style]=\"fontStyle\"\n                       [style.font-family]=\"fontFamily\"\n                       [style.font-size]=\"fontSize\"\n                       class=\"control-label\">\n                    {{fieldLabel}}\n                </label>\n            </ng-container>\n\n            <input type=\"password\"\n                   (blur)=\"onBlur()\"\n                   autocomplete=\"off\"\n                   class=\"form-control\"\n                   [(ngModel)]=\"value\"\n                   [attr.fieldName] = \"fieldName\"\n                   [attr.id]=\"elementId\"\n                   [attr.placeholder]=\"placeholder\"\n                   [attr.max]=\"maxLength\"\n                   [attr.min]=\"minLength\"\n                   [attr.disabled] = \"disabled ? true: null\"\n                   [required]=\"allowBlank ? true: null\"\n                   [attr.data-error]=\"errorMsg\"\n                   [attr.aria-describedby]=\"spanId\"\n                   [attr.data-toggle]=\"popoverField\" title=\"Info\" [attr.data-placement]=\"popoverPlacement\"  data-trigger=\"focus\"  data-html=\"true\"  [attr.data-content]=\"helpInfoMsg\"\n            >\n\n            <ng-container *ngIf=\"iconFeedBack\">\n                <span [attr.class]=\"iconClassName\" aria-hidden=\"true\"></span>\n                <span [attr.id]=\"spanId\" class=\"sr-only\">({{iconName}})</span>\n            </ng-container>\n\n            <ng-container *ngIf=\"!iconFeedBack\">\n                <i [class]=\"fieldglyphIcon\"></i>\n            </ng-container>\n\n            <div class=\"help-block with-errors\"></div>\n\n        </div>\n\n    ","providers":[{"__symbolic":"reference","name":"CUSTOM_PASSWORD_INPUT_CONTROL_VALUE_ACCESSOR"},{"__symbolic":"reference","name":"BASE_IMPL_PASSWORD_INPUT"}],"styles":["/**\n A Style Sheet for all form inputs common used classes\n */\n\n    /** Form Validations & Icon Positioning **/\n    .has-feedback-custom {\n        position: relative;\n    }\n    .has-feedback-custom .form-control {\n        padding-right: 47.5px;\n    }\n\n    .form-control-feedback-custom {\n        position: absolute;\n        top: 0;\n        right: 0;\n        z-index: 2;\n        display: block;\n        width: 38px;\n        height: 38px;\n        line-height: 38px;\n        text-align: center;\n        pointer-events: none;\n    }\n\n    .has-feedback-custom label ~ .form-control-feedback-custom {\n        top: 32px;\n    }\n    .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n        top: 0;\n    }"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"validate":[{"__symbolic":"method"}],"isValidInput":[{"__symbolic":"method"}],"setValidClassNames":[{"__symbolic":"method"}],"setInvalidatedClassNames":[{"__symbolic":"method"}]}},"ProgressComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-progress-bar","template":"\n\n      <div class=\"progress\" *ngIf=\"showProgress\">\n          <div class=\"progress-bar progress-bar-striped {{progressType !=null ? 'bg-'+progressType : ''}} active\" role=\"progressbar\" [attr.aria-valuenow]=\"currentValue\" [attr.aria-valuemin]=\"minValue\" [attr.aria-valuemax]=\"maxValue\" [style.width.%]=\"infinteMode ? 100 : this.currentValue\">\n              <span>{{infinteMode ? displayText : currentValue+'%'}}<span class=\"dotdotdot\"></span></span>\n          </div>\n      </div>\n\n  ","styles":["\n        .progress {\n            margin: 15px;\n        }\n\n        .progress .progress-bar.active {\n            font-weight: 700;\n            animation: progress-bar-stripes .5s linear infinite;\n        }\n\n        .dotdotdot:after {\n            font-weight: 300;\n            content: '...';\n            display: inline-block;\n            width: 20px;\n            text-align: left;\n            animation: dotdotdot 1.5s linear infinite;\n        }\n\n        @keyframes dotdotdot {\n            0%   { content: '...'; }\n            25% { content: ''; }\n            50% { content: '.'; }\n            75% { content: '..'; }\n        }\n    "]}]}],"members":{"showProgress":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"infinteMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"minValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"maxValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"currentValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"progressType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"COLUMN_SIZE":"col-lg-","RadioGroupComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-radio-group","template":"\n      \n      <ng-container  *ngIf=\"enableBoxStyle\">\n        <div class=\"form-group\">\n          <br>\n          <label  [attr.for]=\"elementId\">{{fieldLabel}}</label>\n\n          <div class=\"\" [ngClass]=\"{'row':column || column!='','list-group':!column ||column==''}\">\n            <li class=\"list-group-item col-sm-12\" *ngIf=\"searchBox\"><span class=\"col-sm-12\">\n              <input [(ngModel)]=\"textValue\" type=\"text\" class=\"form-control\" placeholder=\"Please select\" (keyup)=\"filterData($event)\">\n            </span></li>\n            <li class=\"list-group-item\" [ngClass]=\"calculatedColSize\"  *ngFor=\"let row of viewData;let i = index\">\n              <label class=\"custom-control custom-radio\">\n                <input class=\"custom-control-input\" [attr.id]=\"elementId+'CNT'+i\" type=\"radio\" [required]=\"allowBlank ? true: null\"  [attr.name] = \"fieldName\" (click)=\"setSelectedCheckBox(row, $event)\">\n                <span class=\"custom-control-indicator\"></span>\n                <span class=\"custom-control-description\">{{row[displayField]}}</span>\n              </label>\n            </li>\n          </div>\n\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"!enableBoxStyle\">\n        <div class=\"form-group\">\n          <br>\n          <label  [attr.for]=\"elementId\">{{fieldLabel}}</label>\n\n          <div class=\"\" [ngClass]=\"{'row':column || column!='','list-group':!column ||column==''}\">\n            <span class=\"col-sm-12\" *ngIf=\"searchBox\"><span class=\"col-sm-12\">\n              <input [(ngModel)]=\"textValue\" type=\"text\" class=\"form-control\" placeholder=\"Please select\" (keyup)=\"filterData($event)\">\n            </span></span>\n            <span class=\"\" [ngClass]=\"calculatedColSize\"  *ngFor=\"let row of viewData;let i = index\">\n              <label class=\"custom-control custom-radio\">\n                <input class=\"custom-control-input\" [attr.id]=\"elementId+'CNT'+i\" type=\"radio\" [required]=\"allowBlank ? true: null\"  [attr.name] = \"fieldName\" (click)=\"setSelectedCheckBox(row, $event)\">\n                <span class=\"custom-control-indicator\"></span>\n                <span class=\"custom-control-description\">{{row[displayField]}}</span>\n              </label>\n            </span>\n          </div>\n\n        </div>\n      </ng-container>\n      \n        \n\n    ","styles":["/**\n A Style Sheet for all form inputs common used classes\n */\n\n    /** Form Validations & Icon Positioning **/\n    .has-feedback-custom {\n        position: relative;\n    }\n    .has-feedback-custom .form-control {\n        padding-right: 47.5px;\n    }\n\n    .form-control-feedback-custom {\n        position: absolute;\n        top: 0;\n        right: 0;\n        z-index: 2;\n        display: block;\n        width: 38px;\n        height: 38px;\n        line-height: 38px;\n        text-align: center;\n        pointer-events: none;\n    }\n\n    .has-feedback-custom label ~ .form-control-feedback-custom {\n        top: 32px;\n    }\n    .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n        top: 0;\n    }"]}]}],"members":{"enableBoxStyle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fieldLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fieldName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"allowBlank":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"displayField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"valueField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"radioGroupBindData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"searchBox":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"column":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedValue":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CommonHttpService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"getResponseData":[{"__symbolic":"method"}],"filterData":[{"__symbolic":"method"}],"setSelectedCheckBox":[{"__symbolic":"method"}],"emitSelectedRows":[{"__symbolic":"method"}]}},"RatingInputComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-rating-input","template":"\n    <span (mouseleave)=\"resetHovered()\"\n          class=\"amexio-rating\"\n          [class.disabled]=\"disabled\"\n          [class.readonly]=\"readonly\"\n          tabindex=\"0\"\n          role=\"slider\"\n          aria-valuemin=\"0\"\n          [attr.aria-valuemax]=\"ratingRange.length\"\n          [attr.aria-valuenow]=\"model\">\n    <span *ngFor=\"let item of ratingRange; let index = index\">\n        <i (mouseenter)=\"setHovered(item)\"\n           (mousemove)=\"changeHovered($event)\"\n           (click)=\"rate(item)\"\n           [attr.data-icon]=\"fullIcon\"\n           class=\"{{ iconClass }} half{{ calculateWidth(item) }}\"\n           [title]=\"titles[index] || item\">{{ emptyIcon }}</i>\n    </span>\n</span>\n  ","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"RatingInputComponent"},"multi":true},{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALIDATORS"},"useExisting":{"__symbolic":"reference","name":"RatingInputComponent"},"multi":true}],"styles":["/**\n A Style Sheet for all form inputs common used classes\n */\n\n      /** Form Validations & Icon Positioning **/\n      .has-feedback-custom {\n          position: relative;\n      }\n      .has-feedback-custom .form-control {\n          padding-right: 47.5px;\n      }\n\n      .form-control-feedback-custom {\n          position: absolute;\n          top: 0;\n          right: 0;\n          z-index: 2;\n          display: block;\n          width: 38px;\n          height: 38px;\n          line-height: 38px;\n          text-align: center;\n          pointer-events: none;\n      }\n\n      .has-feedback-custom label ~ .form-control-feedback-custom {\n          top: 32px;\n      }\n      .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n          top: 0;\n      }\n      .amexio-rating {\n          cursor: pointer;\n          outline: none;\n      }\n      .amexio-rating.readonly {\n          cursor: default;\n      }\n      .amexio-rating.disabled {\n          cursor: not-allowed;\n      }\n      .amexio-rating i{\n          font-style: normal;\n      }\n      .amexio-star-icon {\n          color: #666666;\n          font-size: 2em;\n          position: relative;\n          border-color: 1px solid black;\n      }\n      .amexio-star-icon:before {\n          color: #FDE16D;\n          content: attr(data-icon) \" \";\n          position: absolute;\n          left: 0;\n          overflow: hidden;\n          width: 0;\n      }\n      .amexio-rating.disabled .amexio-star-icon:before {\n          color: #ECECEC;\n          text-shadow: none;\n      }\n      .amexio-star-icon.half10:before {\n          width: 10%;\n      }\n      .amexio-star-icon.half20:before {\n          width: 20%;\n      }\n      .amexio-star-icon.half30:before {\n          width: 30%;\n      }\n      .amexio-star-icon.half40:before {\n          width: 40%;\n      }\n      .amexio-star-icon.half50:before {\n          width: 50%;\n      }\n      .amexio-star-icon.half60:before {\n          width: 60%;\n      }\n      .amexio-star-icon.half70:before {\n          width: 70%;\n      }\n      .amexio-star-icon.half80:before {\n          width: 80%;\n      }\n      .amexio-star-icon.half90:before {\n          width: 90%;\n      }\n      .amexio-star-icon.half100:before {\n          width: 100%;\n      }\n      @-moz-document url-prefix() { /* Firefox Hack */\n          .amexio-star-icon {\n              font-size: 50px;\n              line-height: 34px;\n          }\n      }\n    "]}]}],"members":{"iconClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fullIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"emptyIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"required":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"float":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"titles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"max":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onHover":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onLeave":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"validate":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"onKeydown":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener"},"arguments":["keydown",["$event"]]}]}],"calculateWidth":[{"__symbolic":"method"}],"setHovered":[{"__symbolic":"method"}],"changeHovered":[{"__symbolic":"method"}],"resetHovered":[{"__symbolic":"method"}],"rate":[{"__symbolic":"method"}],"buildRanges":[{"__symbolic":"method"}],"range":[{"__symbolic":"method"}]}},"CUSTOM_TEXT_AREA_INPUT_CONTROL_VALUE_ACCESSOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"TextAreaComponent"},"multi":true},"BASE_IMPL_TEXTAREA_INPUT":{"provide":{"__symbolic":"reference","name":"FormInputBase"},"useExisting":{"__symbolic":"reference","name":"TextAreaComponent"}},"TextAreaComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormInputBase"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-textarea-input","template":"<div [attr.class]=\"divCss\">\n\n        <ng-container *ngIf=\"hasLabel\">\n            <label [attr.for]=\"elementId\"\n                   [style.font-style]=\"fontStyle\"\n                   [style.font-family]=\"fontFamily\"\n                   [style.font-size]=\"fontSize\"\n                   class=\"control-label\">\n                {{fieldLabel}}\n            </label>\n        </ng-container>\n\n        <textarea type=\"text\"\n                  (blur)=\"onBlur()\"\n                  autocomplete=\"off\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"value\"\n                  [attr.fieldName] = \"fieldName\"\n                  [attr.rows]=\"noOfrows\"\n                  [attr.cols]=\"noOfCols\"\n                  [attr.id]=\"elementId\"\n                  [attr.placeholder]=\"placeholder\"\n                  [attr.disabled] = \"disabled ? true: null\"\n                  [required]=\"allowBlank ? true: null\"\n                  [attr.data-error]=\"errorMsg\"\n                  [attr.aria-describedby]=\"spanId\"\n                  [attr.data-toggle]=\"popoverField\" title=\"Info\" [attr.data-placement]=\"popoverPlacement\"  data-trigger=\"focus\"  data-html=\"true\"  [attr.data-content]=\"helpInfoMsg\"\n\n        >\n\n        </textarea>\n\n        <ng-container *ngIf=\"!iconFeedBack\">\n            <i [class]=\"fieldglyphIcon\"></i>\n        </ng-container>\n\n        <div class=\"help-block with-errors\"></div>\n\n    </div>\n    ","providers":[{"__symbolic":"reference","name":"CUSTOM_TEXT_AREA_INPUT_CONTROL_VALUE_ACCESSOR"},{"__symbolic":"reference","name":"BASE_IMPL_TEXTAREA_INPUT"}],"styles":["\n        /**\n A Style Sheet for all form inputs common used classes\n */\n\n        /** Form Validations & Icon Positioning **/\n        .has-feedback-custom {\n            position: relative;\n        }\n        .has-feedback-custom .form-control {\n            padding-right: 47.5px;\n        }\n\n        .form-control-feedback-custom {\n            position: absolute;\n            top: 0;\n            right: 0;\n            z-index: 2;\n            display: block;\n            width: 38px;\n            height: 38px;\n            line-height: 38px;\n            text-align: center;\n            pointer-events: none;\n        }\n\n        .has-feedback-custom label ~ .form-control-feedback-custom {\n            top: 32px;\n        }\n        .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n            top: 0;\n        }\n    "]}]}],"members":{"noOfrows":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"noOfCols":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"validate":[{"__symbolic":"method"}],"isValidInput":[{"__symbolic":"method"}]}},"CUSTOM_AUTO_COMPLETE_CONTROL_VALUE_ACCESSOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"TypeAheadComponent"},"multi":true},"BASE_IMPL_AUTO_COMPLETE":{"provide":{"__symbolic":"reference","name":"FormInputBase"},"useExisting":{"__symbolic":"reference","name":"TypeAheadComponent"}},"TypeAheadComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormInputBase"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-typeahead","template":"    \n    <div class=\"dropdown\" data-toggle=\"dropdown\" [ngClass]=\"{'show': showDropDown}\">\n      <div class=\"row\">\n          <div class=\"col-lg-12\">\n              <label [attr.for]=\"elementId\">{{fieldLabel}}</label>\n              <input type=\"search\" class=\"form-control\" [attr.aria-expanded]=\"showDropDown\"\n                     [attr.id]=\"elementId\"  (keyup)=\"onKeyUp($event)\"\n                     [placeholder]=\"placeholder\"\n                     (blur)=\"onBlur()\"  [(ngModel)]=\"value\" #inp>\n          </div>\n      \n<!--        <span [ngClass]=\"{'showIcon' : showDropDown,'hideIcon' : !showDropDown}\" (click)=\"clearResult(inp)\" class=\"glyphicon glyphicon-remove-circle searchIconPos\"></span>-->\n      </div>\n     \n      <ul class=\"dropdown-menu amexio-scrollable-options\" style=\"width: 100%\">\n        <li *ngFor=\"let item of filteredResult\" (click)=\"setValue(item[key],inp)\" style=\"cursor: pointer;\">\n            {{item[key]}}\n        </li>\n      </ul>\n    </div>\n  ","providers":[{"__symbolic":"reference","name":"CUSTOM_AUTO_COMPLETE_CONTROL_VALUE_ACCESSOR"},{"__symbolic":"reference","name":"BASE_IMPL_AUTO_COMPLETE"},{"__symbolic":"reference","name":"CommonHttpService"}],"styles":[".amexio-scrollable-options {\n          height: auto;\n          max-height: 200px;\n          overflow-x: hidden;\n      }\n      /**\n   A Style Sheet for all form inputs common used classes\n   */\n\n      /** Form Validations & Icon Positioning **/\n      .has-feedback-custom {\n          position: relative;\n      }\n      .has-feedback-custom .form-control {\n          padding-right: 47.5px;\n      }\n\n      .form-control-feedback-custom {\n          position: absolute;\n          top: 0;\n          right: 0;\n          z-index: 2;\n          display: block;\n          width: 38px;\n          height: 38px;\n          line-height: 38px;\n          text-align: center;\n          pointer-events: none;\n      }\n\n      .has-feedback-custom label ~ .form-control-feedback-custom {\n          top: 32px;\n      }\n      .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n          top: 0;\n      }\n    "]}]}],"members":{"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"datalist":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"key":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"triggerChar":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CommonHttpService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onKeyUp":[{"__symbolic":"method"}],"showOptions":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"getResponseData":[{"__symbolic":"method"}],"clearResult":[{"__symbolic":"method"}]}},"StepBlockComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-step-block","template":"\n    \n    \n  "}]}],"members":{"active":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"icon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"mdbClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"StepsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-steps","template":"\n        <!--this code use when user give showIndex true bydefault it is true-->\n        <div class=\"amexio-stepwizard\" *ngIf=\"(showIndex && !showBlockBox && !showIcon)\">\n            <div class=\"amexio-stepwizard-row setup-panel\">\n                <div *ngFor=\"let stepBlock of stepBlockArray; let i = index\" class=\"amexio-stepwizard-step\">\n                    <button type=\"button\" [ngClass]=\"{'disabled':!stepBlock.active,'active':stepBlock.active}\" class=\"btn btn-info btn-circle\"\n                            (click)=\"onClick(stepBlock)\">{{i + 1}}\n                    </button>\n                    <ng-container *ngIf=\"stepBlock.label && !stepBlock.active\">\n                        <p>{{stepBlock.label}}</p>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"stepBlock.label && stepBlock.active\">\n                        <p><strong class=\"amexio-step-label-highlight\">{{stepBlock.label}}</strong></p>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n\n        <!--this code use when user give showIcon true bydefault it is false-->\n        <div class=\"amexio-stepwizard\" *ngIf=\"(showIcon && !showIndex && !showBlockBox)\">\n            <div class=\"amexio-stepwizard-row setup-panel\">\n                <div *ngFor=\"let stepBlock of stepBlockArray; let i = index\" class=\"amexio-stepwizard-step\">\n                    <!--this is for material design-->\n                    <ng-container *ngIf=\"stepBlock.icon && stepBlock.mdbClass \">\n                        <i [attr.class]=\"'material-icons'\" (click)=\"onClick(stepBlock)\">{{stepBlock.icon}}</i>\n                    </ng-container>\n\n                    <!--this is for fontawesome-->\n                    <ng-container *ngIf=\"stepBlock.icon && !stepBlock.mdbClass\">\n                        <i [attr.class]=\"stepBlock.icon\" (click)=\"onClick(stepBlock)\"></i>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"stepBlock.icon=='' || !stepBlock.icon\">\n                        <br>\n                    </ng-container>\n                    <ng-container *ngIf=\"stepBlock.label && !stepBlock.active\">\n                        <p>{{stepBlock.label}}</p>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"stepBlock.label && stepBlock.active\">\n                        <p><strong class=\"amexio-step-label-highlight\">{{stepBlock.label}}</strong></p>\n                    </ng-container>\n\n                </div>\n            </div>\n        </div>\n\n        <!--This code use for steps of boxes-->\n        <ul *ngIf=\"showBlockBox\" class=\"nav nav-pills nav-justified \">\n            <li *ngFor=\"let stepBlock of stepBlockArray; let i = index\" class=\"nav-item \" style=\"padding-right:2px;\">\n                <a class=\"nav-link amexio-step-box\" [ngClass]=\"{'disabled':!stepBlock.active,'active':stepBlock.active}\"\n                   (click)=\"onClick(stepBlock)\">\n                    <ng-container *ngIf=\"showIndex\">\n                        {{i + 1}}<br>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"showIcon && stepBlock.icon && stepBlock.mdbClass \">\n                        <i [attr.class]=\"'material-icons'\" (click)=\"onClick(stepBlock)\">{{stepBlock.icon}}</i>\n                    </ng-container>\n                    <!--this is for fontawesome-->\n                    <ng-container *ngIf=\"showIcon && stepBlock.icon && !stepBlock.mdbClass\">\n                        <i [attr.class]=\"stepBlock.icon\" (click)=\"onClick(stepBlock)\"></i>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"stepBlock.label && !stepBlock.active\">\n                        <p>{{stepBlock.label}}</p>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"stepBlock.label && stepBlock.active\">\n                        <p><strong>{{stepBlock.label}}</strong></p>\n                    </ng-container>\n                </a>\n            </li>\n        </ul>\n  ","styles":["\n\n      .nav-pills {\n          background-color: #d6d6d6;\n      }\n\n      .amexio-step-box {\n          height: 80px;\n          border:1px solid grey;\n      }\n\n      .amexio-step-label-highlight {\n          color: black;\n          font-weight: bold;\n      }\n\n      .amexio-stepwizard-step p {\n          margin-top: 0px;\n          color: #666;\n      }\n\n      .amexio-stepwizard-row {\n          display: table-row;\n      }\n\n      .amexio-stepwizard {\n          display: table;\n          width: 100%;\n          position: relative;\n      }\n\n      .amexio-stepwizard .btn.disabled, .amexio-stepwizard .btn[disabled], .amexio-stepwizard fieldset[disabled] .btn {\n          opacity: 1 !important;\n          color: #cccccc;\n      }\n\n      .amexio-stepwizard-row:before {\n          top: 14px;\n          bottom: 0;\n          position: absolute;\n          content: \" \";\n          width: 100%;\n          height: 1px;\n          background-color: #ccc;\n          z-index: 0;\n      }\n\n      .amexio-stepwizard-step {\n          display: table-cell;\n          text-align: center;\n          position: relative;\n      }\n\n      .btn-circle {\n          width: 30px;\n          height: 30px;\n          text-align: center;\n          padding: 6px 0;\n          font-size: 12px;\n          line-height: 1.428571429;\n          border-radius: 15px;\n      }\n  "]}]}],"members":{"showIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showBlockBox":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onBlockClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"stepBlocks":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","name":"StepBlockComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"onClick":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}},"ButtonGroupActionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-btn-group-action","template":"","styles":["\n    .glyphicon-refresh-animate {\n      -animation: spin .7s infinite linear;\n      -webkit-animation: spin2 .7s infinite linear;\n    }\n\n    @-webkit-keyframes spin2 {\n      from { -webkit-transform: rotate(0deg);}\n      to { -webkit-transform: rotate(360deg);}\n    }\n\n    @keyframes spin {\n      from { transform: scale(1) rotate(0deg);}\n      to { transform: scale(1) rotate(360deg);}\n    }"]}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"icon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onClickRoute":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"tooltipMessage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"isLoading":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"size":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"block":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"fieldName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ButtonGroupComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-btn-group","template":"    \n      <div [class]=\"btnGroupStyleClass\" role=\"group\" [attr.id]=\"elementId\">\n        <button *ngFor=\"let data of buttonData\" type=\"button\" (click)=\"buttonClick($event,data)\"\n                [class]=\"data.btnStyleClass\"\n                [attr.fieldName] = \"data.fieldName\"\n                [attr.disabled] = \"data.disabled ? true: null\"\n                data-toggle=\"tooltip\" [attr.data-placement]=\"popoverPlacement\" [attr.title]=\"data.tooltipMessage\"\n        >\n          <ng-container *ngIf=\"data.isLoading\">\n            <i class=\"fa fa-refresh fa-spin \" aria-hidden=\"true\"></i>&nbsp;&nbsp;&nbsp;\n          </ng-container>\n          \n          <ng-container *ngIf=\"data.iconStyleClass!=null\">\n            <i [class]=\"data.iconStyleClass\" aria-hidden=\"true\"></i>\n          </ng-container>\n            {{data.label}}\n        </button>\n      </div>\n      <ng-content></ng-content>\n  "}]}],"members":{"size":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"popoverPlacement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"buttonComponentRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","name":"ButtonGroupActionComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"createConfig":[{"__symbolic":"method"}],"buttonClick":[{"__symbolic":"method"}],"createButtonConfig":[{"__symbolic":"method"}]}},"DropdownItemComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-btn-dropdown-item","template":""}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"icon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onClickRoute":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onItemClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ButtonDropdownComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-btn-dropdown","template":"\n      <div [class]=\"btnGroupStyleClass\" [attr.id]=\"elementId\">\n          <button type=\"button\" [class]=\"btnDropdownStyle\"  data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              {{label}}\n          </button>\n          <ul class=\"dropdown-menu\">\n              <ng-container *ngFor=\"let itemData of dropdownItemData\">\n                  <a class=\"dropdown-item\" [ngClass]=\"{'disabled':itemData.disabled}\" (click)=\"itemClick($event,itemData)\">\n                      {{itemData.label}}\n                      <ng-container *ngIf=\"itemData.icon!=null\">\n                          <i [class]=\"itemData.iconStyleClass\" aria-hidden=\"true\"></i>\n                      </ng-container>\n                  </a>\n              </ng-container>\n          </ul>\n      </div>\n      \n  "}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"size":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dropdownItemRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","name":"DropdownItemComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"createConfig":[{"__symbolic":"method"}],"createDropdownItemConfig":[{"__symbolic":"method"}],"itemClick":[{"__symbolic":"method"}]}},"ButtonSplitDropdownComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-btn-split-dropdown","template":"\n      \n    <div [class]=\"btnGroupStyleClass\" [attr.id]=\"elementId\">\n        <button type=\"button\" [class]=\"btnStyleClass\">{{label}}</button>\n        <button type=\"button\" [class]=\"btnDropdownStyle\" (click)=\"btnClick($event)\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <span class=\"sr-only\">Toggle Dropdown</span>\n        </button>\n        <ul class=\"dropdown-menu\">\n            <ng-container *ngFor=\"let itemData of dropdownItemData\">\n                <a class=\"dropdown-item\" [ngClass]=\"{'disabled':itemData.disabled}\" (click)=\"itemClick($event,itemData)\">\n                    {{itemData.label}}\n                    <ng-container *ngIf=\"itemData.icon!=null\">\n                        <i [class]=\"itemData.iconStyleClass\" aria-hidden=\"true\"></i>\n                    </ng-container>\n                </a>\n            </ng-container>\n        </ul>\n    </div>\n    \n  "}]}],"members":{"label":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"type":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"size":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"dropdownItemRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","name":"DropdownItemComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"createConfig":[{"__symbolic":"method"}],"createDropdownItemConfig":[{"__symbolic":"method"}],"itemClick":[{"__symbolic":"method"}],"btnClick":[{"__symbolic":"method"}]}},"TabComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-tab","template":"\n    <div [ngClass]=\"cClass\" role=\"tabpanel\" class=\"tab-pane active\" [attr.id]=\"elementId\">\n      <ng-content *ngIf=\"active\"></ng-content>\n    </div>\n  "}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"active":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"icon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"TabPaneComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-tab-pane","template":"\n\n    <div [ngClass]=\"cClass\" [attr.id]=\"elementId\" (window:resize)=\"onResize($event)\">\n    <div (click)=\"leftClick()\" class=\"amexio-tabpane-scroller amexio-tabpane-scroller-left\" >\n      <span class=\"amexio-tabpane-hide-span\"  [attr.id]=\"'left-'+elementId\"><i class=\"fa fa-caret-left fa-2x\" aria-hidden=\"true\"></i></span>\n    </div>\n    <div (click)=\"rightClick()\" class=\"amexio-tabpane-scroller amexio-tabpane-scroller-right\">\n      <span class=\"amexio-tabpane-display-span\" [attr.id]=\"'right-'+elementId\"><i class=\"fa fa-caret-right fa-2x\" aria-hidden=\"true\"></i></span>\n    </div>\n    \n    <div class=\"amexio-tabpane-wrapper\" [attr.id]=\"'amexio-tabpane-wrapper-'+elementId\">\n      <ul class=\"nav nav-tabs\" role=\"tablist\" [attr.id]=\"'list-'+elementId\">\n        <li class=\"nav-item\" *ngFor=\"let tab of tabs\" >\n          <a [class]=\"getTabClass(tab)\" data-toggle=\"tab\"  role=\"tab\" [ngClass]=\"{'active':tab.active}\" style=\"cursor: pointer;\" (click)=\"activateTab(tab.elementId)\" [attr.id]=\"tab.elementId\" >&nbsp;{{tab.title}}&nbsp;&nbsp;<a *ngIf=\"closable\" id=\"'closable-'+{{tab.elementId}}\" class=\"amexio-tabpane-closeicon-position\" (click)=\"closeTab(tab.elementId)\">&times;</a></a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    \n    <div>\n      <ng-content ></ng-content>\n    </div>\n    \n  ","styles":["\n      .amexio-tab-list {\n          position:absolute;\n          left:0px;\n          top:0px;\n          margin-left:12px;\n          margin-top:0px;\n      }\n\n      .amexio-tabpane-list li{\n          display:table-cell;\n          position:relative;\n          text-align:center;\n          cursor:grab;\n          cursor:-webkit-grab;\n          color:#efefef;\n          vertical-align:middle;\n      }\n\n      .amexio-tabpane-wrapper {\n          position:relative;\n          margin:0 auto;\n          overflow:hidden;\n          padding:5px;\n          height: 50px;\n      }\n\n      .amexio-tabpane-scroller {\n          text-align:center;\n          cursor:pointer;\n          padding-top:15px;\n          vertical-align: top;\n      }\n\n      .amexio-tabpane-scroller-right{\n          float:right;\n      }\n\n      .amexio-tabpane-scroller-left {\n          float:left;\n      }\n      .amexio-tabpane-hide-span{\n          display: none;\n      }\n      .amexio-tabpane-display-span{\n          display: block;\n      }\n      .amexio-tabpane-closeicon-position{\n          vertical-align: top;\n          cursor: pointer;\n      }\n  "]}]}],"members":{"closable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"tapPosition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"queryTabs":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","name":"TabComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"closeTab":[{"__symbolic":"method"}],"widthOfList":[{"__symbolic":"method"}],"rightClick":[{"__symbolic":"method"}],"leftClick":[{"__symbolic":"method"}],"reAdjust":[{"__symbolic":"method"}],"navAdjust":[{"__symbolic":"method"}],"onResize":[{"__symbolic":"method"}],"getTabClass":[{"__symbolic":"method"}],"activateTab":[{"__symbolic":"method"}]}},"VerticalLeftTabPaneComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-vertical-left-tab-pane","template":"\n    <table [ngClass]=\"cClass\" >\n      <tr>\n        <td [attr.width]=\"tabwidth\" valign=\"top\">\n          <ul [ngClass]=\"tapPosition\">\n            <li *ngFor=\"let tab of tabs\" class=\"nav-item\">\n              <a (click)=\"activateTab(tab.elementId)\" [ngClass]=\"{'amexio-verticallefttab-active':(tab.active && !verticalText), 'amexio-verticallefttab-inactive':(!tab.active && !verticalText),'amexio-verticallefttab-activevertical':(tab.active && verticalText), 'amexio-verticallefttab-inactivevertical':(!tab.active && verticalText)}\" class=\"nav-link \" [attr.id]=\"tab.elementId\" style=\"cursor: pointer;\"> <i *ngIf=\"tab.icon\" [ngClass]=\"tab.icon\"></i>&nbsp;{{tab.title}}</a>\n            </li>\n          </ul>\n        </td>\n        <td valign=\"top\">\n          <div class=\"amexio-verticallefttab-td-padding\">\n            <ng-content ></ng-content>\n          </div>\n        </td>\n      </tr>\n    </table>\n\n    \n  ","styles":["\n      .amexio-verticallefttab-active{\n          border-bottom: 1px solid #ddd;\n          border-top: 1px solid #ddd;\n          border-left: 1px solid #ddd;\n          border-right: none;\n          border-right-color: transparent;\n          display: block;\n      }\n\n      .amexio-verticallefttab-inactive{\n          border-right: 1px solid #ddd;;\n      }\n\n      .amexio-verticallefttab-activevertical{\n          border-left: 1px solid #ddd;\n          border-right: 1px solid #ddd;\n          border-top: 1px solid #ddd;\n      }\n\n      .amexio-verticallefttab-inactivevertical{\n          border-bottom: 1px solid #ddd;\n      }\n\n      .amexio-verticallefttab-vertical-text {\n          margin-top:50px;\n          border: none;\n          position: relative;\n      }\n      .amexio-verticallefttab-vertical-text>li {\n          height: 20px;\n          width: 120px;\n          margin-bottom: 100px;\n      }\n      .amexio-verticallefttab-vertical-text>li>a {\n          text-align: center;\n\n          -webkit-transform: rotate(-90deg);\n          -moz-transform: rotate(-90deg);\n          -ms-transform: rotate(-90deg);\n          -o-transform: rotate(-90deg);\n          transform: rotate(-90deg);\n      }\n      .amexio-verticallefttab-td-padding{\n          padding: 5px;\n      }\n  "]}]}],"members":{"tabs":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"tapPosition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"verticalText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"tabwidth":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"queryTabs":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","name":"TabComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"activateTab":[{"__symbolic":"method"}]}},"VerticalRightTabPaneComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-vertical-right-tab-pane","template":"\n    <table [ngClass]=\"cClass\">\n      <tr>\n        <td valign=\"top\">\n          <div class=\"amexio-verticalrighttab-td-padding\">\n            <ng-content ></ng-content>\n          </div>\n        </td>\n        <td [attr.width]=\"tabwidth\">\n          <ul [ngClass]=\"tapPosition\">\n            <li *ngFor=\"let tab of tabs\" class=\"nav-item\">\n              <a (click)=\"activateTab(tab.elementId)\" [ngClass]=\"{'amexio-verticalrighttab-active':(tab.active && !verticalText), 'amexio-verticalrighttab-inactive':(!tab.active && !verticalText),'amexio-verticalrighttab-activevertical':(tab.active && verticalText), 'amexio-verticalrighttab-inactivevertical':(!tab.active && verticalText)}\" class=\"nav-link \" [attr.id]=\"tab.elementId\" style=\"cursor: pointer;\"> <i *ngIf=\"tab.icon\" [ngClass]=\"tab.icon\"></i>&nbsp;{{tab.title}}</a>\n            </li>\n          </ul>\n        </td>\n      </tr>\n    </table>\n\n\n  ","styles":["\n      .amexio-verticalrighttab-active{\n          border-bottom: 1px solid #ddd;\n          border-top: 1px solid #ddd;\n          border-right: 1px solid #ddd;\n          border-left: none;\n          border-left-color: transparent;\n          display: block;\n      }\n\n      .amexio-verticalrighttab-inactive{\n          border-left: 1px solid #ddd;;\n      }\n\n      .amexio-verticalrighttab-activevertical{\n          border-left: 1px solid #ddd;\n          border-right: 1px solid #ddd;\n          border-bottom: 1px solid #ddd;\n      }\n\n      .amexio-verticalrighttab-inactivevertical{\n          border-top: 1px solid #ddd;\n      }\n\n      .amexio-verticalrighttab-vertical-text {\n          margin-top:50px;\n          border: none;\n          position: relative;\n      }\n      .amexio-verticalrighttab-vertical-text>li {\n          height: 20px;\n          width: 120px;\n          margin-bottom: 100px;\n      }\n      .amexio-verticalrighttab-vertical-text>li>a {\n          text-align: center;\n          -webkit-transform: rotate(-90deg);\n          -moz-transform: rotate(-90deg);\n          -ms-transform: rotate(-90deg);\n          -o-transform: rotate(-90deg);\n          transform: rotate(-90deg);\n      }\n      .amexio-verticalrighttab-td-padding{\n          padding: 5px;\n      }\n\n\n  "]}]}],"members":{"tabs":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"tapPosition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"verticalText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"tabwidth":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"queryTabs":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","name":"TabComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"activateTab":[{"__symbolic":"method"}]}},"FilterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-filter-component","template":"\n        <div class=\"col-lg-12 col-xs-12\">\n            <div class=\"row\">\n                <ng-container *ngIf=\"column.dataType==='string'\">\n                    <div class=\"input-group input-group-sm\">\n                        <input [attr.id]=\"column.dataIndex\" [(ngModel)]=\"filterValue\" [attr.placeholder]=\"column.text\" (keyup)=\"keyUpSearch(column)\" type=\"text\" class=\"form-control\" aria-label=\"Text input with dropdown button\">\n                        <div class=\"input-group-btn\">\n                            <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i class=\"fa fa-filter\" aria-hidden=\"true\"></i>\n                            </button>\n                            <div class=\"dropdown-menu \">\n\n                                <ng-container *ngFor=\"let opt of filterOptions\">\n                                    <ng-container *ngIf=\"opt.type===column.dataType\">\n                                        <a class=\"dropdown-item\" (click)=\"selectedOption(column,opt)\" >{{opt.key}}&nbsp;<i [class]=\"opt.checkedStatus\" aria-hidden=\"true\"></i></a>\n                                    </ng-container>\n                                </ng-container>\n                            </div>\n                        </div>\n                        <span class=\"input-group-btn\">\n                      <button *ngIf=\"column.filterIcon\" class=\"btn btn-secondary\" type=\"button\" (click)=\"removeFilter(column)\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>\n                    </span>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.dataType==='number'\">\n                    <div class=\"input-group input-group-sm\">\n                        <input [attr.id]=\"column.dataIndex\" [(ngModel)]=\"filterValue\" [attr.placeholder]=\"column.text\" (keyup)=\"keyUpSearch(column)\" type=\"number\" class=\"form-control\" aria-label=\"Text input with dropdown button\">\n                        <div class=\"input-group-btn\">\n                            <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i class=\"fa fa-filter\" aria-hidden=\"true\"></i>\n                            </button>\n                            <div class=\"dropdown-menu \">\n                                <ng-container *ngFor=\"let opt of filterOptions\">\n                                    <ng-container *ngIf=\"opt.type===column.dataType\">\n                                        <a class=\"dropdown-item\" (click)=\"selectedOption(column,opt)\" >{{opt.key}}&nbsp;<i [class]=\"opt.checkedStatus\" aria-hidden=\"true\"></i></a>\n                                    </ng-container>\n                                </ng-container>\n                            </div>\n                        </div>\n                        <span class=\"input-group-btn\">\n                      <button *ngIf=\"column.filterIcon\" class=\"btn btn-secondary\" type=\"button\" (click)=\"removeFilter(column)\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>\n                    </span>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    "}]}],"members":{"column":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filterObject":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CommonHttpService"}]}],"ngOnInit":[{"__symbolic":"method"}],"selectedOption":[{"__symbolic":"method"}],"keyUpSearch":[{"__symbolic":"method"}],"removeFilter":[{"__symbolic":"method"}],"checkStatus":[{"__symbolic":"method"}],"filterDataObject":[{"__symbolic":"method"}]}},"CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"DataTableComponent"},"multi":true},"DataTableComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-data-table","template":"\n        <div>\n            <ng-content></ng-content>\n        </div>\n        <div class=\"amexio-datatable-wrap\">\n            <table class=\"table table-sm  table-bordered amexio-datatable-width\" [attr.id]=\"elementId\" (window:resize)=\"onResize($event)\">\n                <tr>\n                    <td [attr.colspan]=\"columns?.length + (checkboxSelect? 1: 0)\" width=\"100%\" data align=\"right\">\n        <span class=\"amexio-datatable-title\">\n      <b>{{title}}</b>\n      </span>\n                        <span class=\"col-xs-12 amexio-datatable-opertions\">\n        <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"Button group with nested dropdown\">\n            <ng-container *ngIf=\"groupByColumn && !smallScreen\">\n                   <amexio-dropdown [(ngModel)]=\"groupByColumnIndex\"\n                                    [placeholder]=\"'Choose Column'\"\n                                    name=\"groupByColumnIndex\"\n                                    [dataReader]=\"'response.data'\"\n                                    [data]=\"dropdownData\"\n                                    [displayField]=\"'text'\"\n                                    [valueField]=\"'dataIndex'\"\n                                    (onSingleSelect)=\"setColumnData()\">\n                   </amexio-dropdown>\n               </ng-container>\n          <ng-container *ngIf=\"maxPage > 1\">\n          <button type=\"button\" class=\"btn btn-secondary\" aria-label=\"Previous\" (click)=\"prev()\"><span aria-hidden=\"true\">&laquo;</span></button>\n          <button type=\"button\" class=\"btn btn-secondary\" >({{currentPage}} of {{maxPage}})</button>\n         \n          <div class=\"input-group-btn\">\n            <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n             Page - {{currentPage}}\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right amexio-datatable-dropdown-action\">\n              <li *ngFor=\"let row of pageNumbers let pageNo = index \" class=\"dropdown-item\" value=\"{{pageNo+1}}\" (click)=\"setPageNo(pageNo+1)\"><a >{{pageNo+1}}</a></li>\n            </div>\n          </div>\n          <div class=\"input-group-btn\">\n            <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\"><b> Show Columns</b></a>\n              <a class=\"dropdown-item\" *ngFor=\"let cols of columns;let i = index;\">\n              <label class=\"form-check-label\">\n              <input class=\"form-check-input\" type=\"checkbox\" (click)=\"setColumnVisiblity(cols.dataIndex)\" [attr.checked]=\"!cols.hidden ? true: null\"> {{cols.text +\" \"}}\n              </label>\n              </a>\n            </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-secondary\" aria-label=\"Next\" (click)=\"next()\"><span aria-hidden=\"true\">&raquo;</span></button>\n           </ng-container>\n        </div>\n      </span>\n                    </td>\n                </tr>\n                <tr *ngIf=\"smallScreen && groupByColumn\">\n                    <td [attr.colspan]=\"columns.length+1\">\n                        <div>\n                            <amexio-dropdown [(ngModel)]=\"groupByColumnIndex\"\n                                             [placeholder]=\"'Choose Column'\"\n                                             name=\"groupByColumnIndex\"\n                                             [dataReader]=\"'response.data'\"\n                                             [data]=\"dropdownData\"\n                                             [displayField]=\"'text'\"\n                                             [valueField]=\"'dataIndex'\"\n                                             (onSingleSelect)=\"setColumnData()\">\n                            </amexio-dropdown>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n            <!--filtering changes-->\n            <table class=\"table table-sm\">\n                <tr *ngIf=\"filtering && !groupByColumn\">\n                    <ng-container *ngIf=\"!smallScreen\">\n                        <td *ngIf=\"checkboxSelect\" style=\"width: 10%\"></td>\n                        <td *ngFor=\"let cols of columns let index=index\" [hidden]=\"cols.hidden\">\n                            <amexio-filter-component [column]=\"cols\" (filterObject)=\"getFilteredData($event)\"></amexio-filter-component>\n                        </td>\n                    </ng-container>\n                    <ng-container *ngIf=\"smallScreen\">\n                        <td>\n                            <div class=\"amexio-datatable-small-word-wrap\" *ngFor=\"let cols of columns\" [hidden]=\"cols.hidden\">\n                                <amexio-filter-component [column]=\"cols\" (filterObject)=\"getFilteredData($event)\"></amexio-filter-component>\n                            </div>\n                        </td>\n                    </ng-container>\n                </tr>\n            </table>\n            <table class=\"table table-sm  table-hover  table-bordered \">\n                <tr *ngIf=\"!smallScreen\">\n                    <td *ngIf=\"checkboxSelect\" style=\"width: 10%\">\n                        <input type=\"checkbox\" (click)=\"selectAllVisibleRows()\">\n                    </td>\n                    <td *ngFor=\"let cols of columns let index=index\" [hidden]=\"cols.hidden\" (click)=\"sortOnColHeaderClick(cols)\">\n        \n      <!-- If user hasnt embedded view -->\n      <ng-container *ngIf=\"!cols?.headerTemplate\"><b>{{cols.text}}</b></ng-container>\n        <!--for sorting icon of column-->\n        <ng-container *ngIf=\"this.sortBy==1 && cols.isColumnSort\" >\n              <i class=\"fa fa-arrow-up\" ></i>\n        </ng-container>\n        <ng-container *ngIf=\"this.sortBy==2 && cols.isColumnSort\">\n              <i class=\"fa fa-arrow-down\" ></i>\n        </ng-container>\n        \n        <!--Check if user has embedded view inserted then -->\n      <ng-template *ngIf=\"cols?.headerTemplate\" [ngTemplateOutlet]=\"cols?.headerTemplate\" [ngOutletContext]=\"{ $implicit: { header: cols.text } }\"></ng-template>\n                    </td>\n                </tr>\n            </table>\n            <div [ngStyle]=\"setHeight()\">\n                <table class=\"table table-sm   table-bordered \">\n                    <tbody *ngIf=\"!smallScreen\">\n                    <ng-container *ngIf=\"groupByColumn\">\n                        <tr [ngClass]=\"{'hiderow' : !(viewRows?.length > 0),'showrow' : viewRows?.length > 0}\">\n                            <td [attr.colspan]=\"columns?.length + (checkboxSelect? 1: 0)\" width=\"100%\">\n                                <ul class=\"list-group amexio-datatable-list-group\" *ngFor=\"let row of viewRows;let i=index;\">\n              <span (click)=\"iconSwitch(row)\" style=\"cursor: pointer;\" data-toggle=\"collapse\" [attr.data-target]=\"'#'+i\" data-parent=\"#menu\">\n          \n                 <span style=\"width: 100%\" class=\"list-group-item justify-content-between fa \" [ngClass]=\"{'fa-caret-down':row.expanded,'fa-caret-right':!row.expanded}\">\n                   {{row.group}}\n                      <span style=\"float: right\" class=\"badge badge-default badge-pill\">{{row.groupData?.length}}</span>\n                    </span>\n              </span>\n\n\n\n                                    <div [attr.id]=\"i\" class=\"sublinks collapse\">\n                                        <table class=\"table table-hover \">\n                                            <tbody>\n                                            <tr *ngFor=\"let rows of row.groupData let rowIndex = index\" id=\"{{'row'+rowIndex}}\" (click)=\"rowClick(rows, rowIndex)\">\n                                                <td *ngIf=\"checkboxSelect\" style=\"width: 10%\">\n                                                    <input type=\"checkbox\" id=\"checkbox-{{elementId}}-{{rowIndex}}\" [attr.checked]=\"selectAll? true: null\" (click)=\"setSelectedRow(rows, $event)\">\n                                                </td>\n                                                <td *ngFor=\"let cols of columns\" [hidden]=\"cols.hidden\">\n                                                    <!-- If user hasnt specified customized cell use default -->\n                                                    <ng-container *ngIf=\"!cols?.bodyTemplate\">{{rows[cols.dataIndex]}}</ng-container>\n                                                    <!-- else insert customized code -->\n                                                    <ng-template *ngIf=\"cols.bodyTemplate\" [ngTemplateOutlet]=\"cols.bodyTemplate\" [ngOutletContext]=\"{ $implicit: { text : rows[cols.dataIndex] }, row: rows }\"></ng-template>\n                                                </td>\n                                            </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </ul>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"viewRows?.length == 0\">\n                            <td [attr.colspan]=\"columns?.length+1\" class=\"loading-mask amexio-datatable-loadingmask\">\n                            </td>\n                        </tr>\n                    </ng-container>\n                    <ng-container *ngIf=\"!groupByColumn\">\n                        <tr *ngIf=\"viewRows?.length==0\">\n                            <td class=\"amexio-datatable-width\" >\n                                <span>No Records Found</span>\n                            </td>\n                        </tr>\n                        <tr [ngClass]=\"{'hiderow' : !(viewRows?.length > 0),'showrow' : viewRows?.length > 0}\" style=\"cursor: pointer;\" *ngFor=\"let row of viewRows let rowIndex = index \" id=\"{{'row'+rowIndex}}\" (click)=\"rowClick(row, rowIndex)\" [class.info]=\"isSelected(rowIndex)\">\n                            <td *ngIf=\"checkboxSelect\" style=\"width: 10%\" >\n                                <input type=\"checkbox\" id=\"checkbox-{{elementId}}-{{rowIndex}}\" [attr.checked]=\"selectAll? true: null\" (click)=\"setSelectedRow(row, $event)\">\n                            </td>\n                            <td *ngFor=\"let cols of columns let index=index\" [hidden]=\"cols.hidden\">\n                                <!-- If user hasnt specified customized cell use default -->\n                                <ng-container *ngIf=\"cols.dataType=='number'\"><span style=\"float: right\">{{row[cols.dataIndex]}}</span></ng-container>\n                                <ng-container *ngIf=\"!cols?.bodyTemplate && cols.dataType=='string'\">{{row[cols.dataIndex]}}</ng-container>\n                                <!-- else insert customized code -->\n                                <ng-template *ngIf=\"cols.bodyTemplate\" [ngTemplateOutlet]=\"cols.bodyTemplate\" [ngOutletContext]=\"{ $implicit: { text : row[cols.dataIndex] }, row: row }\"></ng-template>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"viewRows?.length == 0\">\n                            <td [attr.colspan]=\"columns?.length+1\" class=\"loading-mask amexio-datatable-loadingmask\">\n                            </td>\n                        </tr>\n                    </ng-container>\n                    </tbody>\n                    <tbody *ngIf=\"smallScreen\">\n                    <ng-container *ngIf=\"groupByColumn\">\n                        <tr [ngClass]=\"{'hiderow' : !(viewRows?.length > 0),'showrow' : viewRows?.length > 0}\">\n                            <td [attr.colspan]=\"columns?.length + (checkboxSelect? 1: 0)\" width=\"100%\">\n                                <div class=\"list-group amexio-datatable-list-group\" *ngFor=\"let row of viewRows;let i=index;\">\n              <span (click)=\"iconSwitch(row)\" style=\"cursor: pointer;\" data-toggle=\"collapse\" [attr.data-target]=\"'#'+i\" data-parent=\"#menu\">\n                <span style=\"width: 100%\" class=\"list-group-item justify-content-between fa \" [ngClass]=\"{'fa-caret-down':row.expanded,'fa-caret-right':!row.expanded}\">\n                  <b>{{row.group}}</b>\n                      <span style=\"float: right\" class=\"badge badge-default badge-pill\">{{row.groupData?.length}}</span>\n                    </span>\n              </span>\n\n                                    <div [attr.id]=\"i\" class=\"sublinks collapse\">\n                                        <table class=\"table table-bordered\">\n                                            <tbody>\n                                            <tr *ngFor=\"let rows of row.groupData let rowIndex = index\" id=\"{{'row'+rowIndex}}\" (click)=\"rowClick(rows, rowIndex)\">\n                                                <td *ngIf=\"checkboxSelect\" style=\"width: 10%\">\n                                                    <input type=\"checkbox\" id=\"checkbox-{{elementId}}-{{rowIndex}}\" [attr.checked]=\"selectAll? true: null\" (click)=\"setSelectedRow(rows, $event)\">\n                                                </td>\n                                                <td [attr.colspan]=\"columns?.length-1\">\n                                                    <div class=\"amexio-datatable-small-word-wrap\" *ngFor=\"let cols of columns\" [hidden]=\"cols.hidden\">\n                                                        <b>{{cols.text}}</b> :\n                                                        <!-- If user hasnt specified customized cell use default -->\n                                                        <ng-container *ngIf=\"!cols?.bodyTemplate\">{{rows[cols.dataIndex]}}</ng-container>\n                                                        <!-- else insert customized code -->\n                                                        <ng-template *ngIf=\"cols.bodyTemplate\" [ngTemplateOutlet]=\"cols.bodyTemplate\" [ngOutletContext]=\"{ $implicit: { text : rows[cols.dataIndex] }, row: rows }\"></ng-template>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </ng-container>\n                    <ng-container *ngIf=\"!groupByColumn\">\n                        <tr *ngIf=\"viewRows?.length==0\">\n                            <td class=\"amexio-datatable-width\">\n                                <span>No Records Found</span>\n                            </td>\n                        </tr>\n                        <tr [ngClass]=\"{'hiderow' : !(viewRows?.length > 0),'showrow' : viewRows?.length > 0}\" style=\"cursor: pointer\" *ngFor=\"let row of viewRows let rowIndex = index \" id=\"{{'row'+rowIndex}}\" (click)=\"rowClick(row, rowIndex)\" [class.info]=\"isSelected(rowIndex)\">\n                            <td *ngIf=\"checkboxSelect\" style=\"width: 10%\" >\n                                <input type=\"checkbox\" id=\"checkbox-{{elementId}}-{{rowIndex}}\" [attr.checked]=\"selectAll? true: null\" (click)=\"setSelectedRow(row, $event)\">\n                            </td>\n                            <td>\n                                <div class=\"amexio-datatable-small-word-wrap\" *ngFor=\"let cols of columns\" [hidden]=\"cols.hidden\">\n                                    <b>{{cols.text}}</b> :\n                                    <!-- If user hasnt specified customized cell use default -->\n                                    <ng-container *ngIf=\"!cols?.bodyTemplate\">{{row[cols.dataIndex]}}</ng-container>\n                                    <!-- else insert customized code -->\n                                    <ng-template *ngIf=\"cols.bodyTemplate\" [ngTemplateOutlet]=\"cols.bodyTemplate\" [ngOutletContext]=\"{ $implicit: { text : row[cols.dataIndex] }, row: row }\"></ng-template>\n                                </div>\n                            </td>\n                        </tr>\n                    </ng-container>\n                    <tr *ngIf=\"viewRows?.length == 0\">\n                        <td [attr.colspan]=\"columns?.length+1\" class=\"loading-mask amexio-datatable-loadingmask\">\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    ","providers":[{"__symbolic":"reference","name":"CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR"},{"__symbolic":"reference","name":"CommonHttpService"}],"styles":["\n        .amexio-datatable-wrap {\n            width: 100%;\n        }\n\n        .amexio-datatable-wrap table {\n            width: 100%;\n            table-layout: fixed;\n            margin-bottom: 1px;\n        }\n\n        table tr td {\n            border: 1px solid #eee;\n            width: 90%;\n            word-wrap: break-word;\n        }\n\n        table.head tr td {\n            background: #eee;\n        }\n        .amexio-datatable-width{\n            width: 100%;\n        }\n        .amexio-datatable-title{\n            float: left;\n        }\n        .amexio-datatable-opertions{\n            float: right;\n        }\n        .amexio-datatable-dropdown-action{\n            max-height: 445.406px;\n            overflow-y: auto;\n            min-height: 0px;\n        }\n        .amexio-datatable-small-word-wrap{\n            word-wrap: break-word\n        }\n        .amexio-datatable-btngroup-span{\n            float: right;\n        }\n        .amexio-datatable-list-group{\n            border-bottom: 1px ridge lightgray;\n        }\n        .amexio-datatable-pagenumber{\n            float: right;\n        }\n        .amexio-datatable-loadingmask{\n            height: 100px;\n        }\n        .amexio-datatable-float-right{\n            float: right;\n        }\n    "]}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"pageSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"checkboxSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataTableBindData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"rowSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"selectedRowData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"height":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"groupByColumn":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"groupByColumnIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filtering":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"columnRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","name":"ColumnComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CommonHttpService"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"setHeight":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"createConfig":[{"__symbolic":"method"}],"createColumnConfig":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"createSummaryData":[{"__symbolic":"method"}],"getResponseData":[{"__symbolic":"method"}],"renderData":[{"__symbolic":"method"}],"sortData":[{"__symbolic":"method"}],"next":[{"__symbolic":"method"}],"prev":[{"__symbolic":"method"}],"sortOnColHeaderClick":[{"__symbolic":"method"}],"setSortColumn":[{"__symbolic":"method"}],"setPageNo":[{"__symbolic":"method"}],"setUserPageNo":[{"__symbolic":"method"}],"rowClick":[{"__symbolic":"method"}],"isSelected":[{"__symbolic":"method"}],"setColumnVisiblity":[{"__symbolic":"method"}],"selectAllVisibleRows":[{"__symbolic":"method"}],"setSelectedRow":[{"__symbolic":"method"}],"emitSelectedRows":[{"__symbolic":"method"}],"onResize":[{"__symbolic":"method"}],"setColumnData":[{"__symbolic":"method"}],"iconSwitch":[{"__symbolic":"method"}],"getFilteredData":[{"__symbolic":"method"}],"filterOpertion":[{"__symbolic":"method"}],"pagingRegenration":[{"__symbolic":"method"}]}},"ColumnComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-data-table-column","template":""}]}],"members":{"text":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"hidden":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"summaryType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"summaryCaption":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"headerTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["amexioHeaderTmpl"]}]}],"bodyTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["amexioBodyTmpl"]}]}]}},"CarouselComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-carousel","template":"\n        <div [attr.id]=\"elementId\" [attr.class]=\"className\" data-ride=\"carousel\">\n            <ol class=\"carousel-indicators\">\n                <li *ngFor=\"let scroll of viewData;let i =index\"  [attr.data-target]=\"'#'+elementId\" [attr.data-slide-to]=\"i\" class=\"\" [ngClass]=\"{'active':scroll.active}\"></li>\n            </ol>\n            <div class=\"carousel-inner\" role=\"listbox\">\n                <div class=\"carousel-item\" [ngClass]=\"{'active':scrollData.active}\"  *ngFor=\"let scrollData of viewData\">\n                    <ng-container *ngIf=\"isContent\">\n                        <div [innerHTML]=\"scrollData.content\"></div>\n                    </ng-container>\n                    <ng-container *ngIf=\"!isContent\">\n                        <img class=\"d-block img-fluid\" [src]=\"scrollData.img\" alt=\"First slide\" style=\"width: 100%\">\n                        <div class=\"carousel-caption  d-md-block\">\n                            <h3>{{scrollData.title}}</h3>\n                            <p>{{scrollData.caption}}</p>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n            <a class=\"carousel-control-prev\" [attr.href]=\"'#'+elementId\" role=\"button\" data-slide=\"prev\">\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">Previous</span>\n            </a>\n            <a class=\"carousel-control-next\" [attr.href]=\"'#'+elementId\" role=\"button\" data-slide=\"next\">\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">Next</span>\n            </a>\n        </div>\n    ","providers":[{"__symbolic":"reference","name":"CommonHttpService"}]}]}],"members":{"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"scrollViewBindData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"isContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CommonHttpService"}]}],"ngOnInit":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}]}},"ItemSelectorComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-item-selector","template":"\n\n      <div class=\"row amexio-itemselector\" (window:resize)=\"onResize($event)\">\n          <div  [style.width]=\"itemSelectorWidth\">\n              <div class=\"list-group\" [style.height]=\"itemSelectorHeight\">\n                  <button type=\"button\" class=\"list-group-item amexio-itemselector-available-btn\">Available</button>\n                  <div class=\"amexio-itemselector-action-list\" >\n                      <button type=\"button\" class=\"list-group-item list-group-item-action\"  *ngFor=\"let data of availableData; let i = index\" (click)=\"itemCkick(data,i)\">{{data[displayField]}}</button>\n                  </div>\n\n              </div>\n          </div>\n          <ng-container *ngIf=\"smallScreen\">\n              <div class=\"amexio-itemselector-width\">\n                  <div  class=\"btn-group amexio-itemselector-btn-group \" role=\"group\"  aria-label=\"Button group with nested dropdown\">\n                      <amexio-btn (onClick)=\"moveTop()\"  [type]=\"'link'\" [tooltipMessage]=\"'move top'\" [block]=\"true\" [icon]=\"'fa fa-caret-up'\"></amexio-btn>\n                      <amexio-btn (onClick)=\"upSwitch()\" [type]=\"'link'\" [tooltipMessage]=\"'move up'\" [block]=\"true\" [icon]=\"'fa fa-angle-double-up'\"></amexio-btn>\n                      <amexio-btn (onClick)=\"leftSwitch()\" [type]=\"'link'\" [tooltipMessage]=\"'move left'\" [block]=\"true\" [icon]=\"'fa fa-arrow-up'\"></amexio-btn>\n                      <amexio-btn (onClick)=\"rightSwitch()\" [type]=\"'link'\" [tooltipMessage]=\"'move right'\" [block]=\"true\" [icon]=\"'fa fa-arrow-down'\"></amexio-btn>\n                      <amexio-btn (onClick)=\"downSwitch()\" [type]=\"'link'\" [tooltipMessage]=\"'move down'\" [block]=\"true\" [icon]=\"'fa fa-angle-double-down'\"></amexio-btn>\n                      <amexio-btn (onClick)=\"moveDown()\" [type]=\"'link'\" [tooltipMessage]=\"'bottom'\" [block]=\"true\" [icon]=\"'fa fa-caret-down'\"></amexio-btn>\n                  </div>\n              </div>\n\n          </ng-container>\n          <div class=\"amexio-itemselector-smallscreen\" *ngIf=\"!smallScreen\">\n              <div class=\"list-group text-center amexio-itemselector-smallscreen-div\" [style.height]=\"itemSelectorHeight\">\n                  <div>\n                      <div class=\"btn-group-vertical\" role=\"group\" aria-label=\"Button group with nested dropdown\">\n                          <amexio-btn (onClick)=\"moveTop()\"  [type]=\"'link'\" [tooltipMessage]=\"'move top'\" [block]=\"true\" [icon]=\"'fa fa-caret-up fa-2x'\"></amexio-btn>\n                          <amexio-btn (onClick)=\"upSwitch()\" [type]=\"'link'\" [tooltipMessage]=\"'move up'\" [block]=\"true\" [icon]=\"'fa fa-arrow-up'\"></amexio-btn>\n                          <amexio-btn (onClick)=\"leftSwitch()\" [type]=\"'link'\" [tooltipMessage]=\"'move left'\" [block]=\"true\" [icon]=\"'fa fa-arrow-left'\"></amexio-btn>\n                          <amexio-btn (onClick)=\"rightSwitch()\" [type]=\"'link'\" [tooltipMessage]=\"'move right'\" [block]=\"true\" [icon]=\"'fa fa-arrow-right'\"></amexio-btn>\n                          <amexio-btn (onClick)=\"downSwitch()\" [type]=\"'link'\" [tooltipMessage]=\"'move down'\" [block]=\"true\" [icon]=\"'fa fa-arrow-down'\"></amexio-btn>\n                          <amexio-btn (onClick)=\"moveDown()\" [type]=\"'link'\" [tooltipMessage]=\"'bottom'\" [block]=\"true\" [icon]=\"'fa fa-caret-down fa-2x '\"></amexio-btn>\n                      </div>\n                  </div>\n\n              </div>\n          </div>\n          <div [style.width]=\"itemSelectorWidth\">\n              <div class=\"list-group\" [style.height]=\"itemSelectorHeight\">\n                  <button type=\"button\" class=\"list-group-item amexio-itemselector-available-btn\">Selected</button>\n                  <div class=\"amexio-itemselector-action-list\" >\n                      <button type=\"button\" class=\"list-group-item list-group-item-action\"  *ngFor=\"let data of selectedData; let i = index\" (click)=\"itemCkick(data,i)\">{{data[displayField]}}</button>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  ","styles":["\n      .amexio-itemselector{\n          width: 100%;\n          overflow: hidden;\n      }\n      .amexio-itemselector-available-btn{\n          background-color:#cecece;\n      }\n      .amexio-itemselector-action-list{\n          height:100%;\n          overflow-y: auto;\n          position:relative;\n      }\n      .amexio-itemselector-smallscreen{\n          width: 8%;\n      }\n      .amexio-itemselector-smallscreen-div{\n          padding-top: 35%;\n      }\n      .amexio-itemselector-btn-group{\n          padding:5% 5% 2% 5%;\n      }\n      .amexio-itemselector-width{\n          width: 100%;\n      }\n  "],"providers":[{"__symbolic":"reference","name":"CommonHttpService"}]}]}],"members":{"height":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"ItemSelectBindData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"displayField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"valueField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"availableRecords":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"selectedRecords":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CommonHttpService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"itemCkick":[{"__symbolic":"method"}],"rightSwitch":[{"__symbolic":"method"}],"leftSwitch":[{"__symbolic":"method"}],"upSwitch":[{"__symbolic":"method"}],"downSwitch":[{"__symbolic":"method"}],"moveTop":[{"__symbolic":"method"}],"moveDown":[{"__symbolic":"method"}],"dataEmitter":[{"__symbolic":"method"}],"onResize":[{"__symbolic":"method"}]}},"SideNavBarComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-sidemenubar","template":"\n\n      <div [style.margin-top]=\"toPosition\" [ngClass]=\"{'amexio-sidenavbar-sidenavleft':!right, 'amexio-sidenavbar-sidenavright':right}\"  [attr.id]=\"elementId\" (mouseleave)=\"expanded?null:closeNav()\">\n          <ul class=\"navbar-nav\">\n            <li *ngIf=\"filter==true\">\n                <div class=\"amexio-sidenavbar-filter\">\n                    <input type=\"text\" class=\"form-control amexio-sidenavbar-input-width\" [(ngModel)]=\"filterText\"  placeholder=\"Search\" (keyup)=\"filterData()\" />\n                </div>\n            </li>\n              <li class=\"nav-item\" *ngFor=\"let header of menus \">\n                  <a class=\"nav-link amexio-sidenavbar-nav-link-a\"  [ngClass]=\"(header.selected && !header.childrens) ? 'amexio-link-selected' : 'amexio-link-notselected'\"  (click)=\"expandNode(header)\">\n                      <ng-container *ngIf=\"headerTemplate==null\">{{header.text}}</ng-container>\n\n                      <ng-template *ngIf=\"headerTemplate!=null\" [ngTemplateOutlet]=\"headerTemplate\" [ngOutletContext]=\"{ $implicit: {}, navHeader:header }\"></ng-template>\n\n                      <span *ngIf=\"header.childrens \" class=\"amexio-sidenavbar-child-header fa\" [ngClass]=\"{'fa-angle-up':header.expand,'fa-angle-down':!header.expand}\"></span>\n                  </a>\n                  <ng-container *ngIf=\"header.childrens && header.expand\">\n                      <div [ngStyle]=\"header.hstyle\" >\n                          <ul>\n                              <li *ngFor=\"let level1Menu of header.childrens\">\n                                  <a (click)=\"menuClick(level1Menu)\" [ngClass]=\"(level1Menu.selected && !level1Menu.childrens) ? 'amexio-link-selected' : 'amexio-link-notselected'\">\n                                      <ng-container *ngIf=\"childTemplate==null\">{{level1Menu.text}}</ng-container>\n                                      <ng-template *ngIf=\"childTemplate!=null\" [ngTemplateOutlet]=\"childTemplate\" [ngOutletContext]=\"{ $implicit: {}, menuHeader:level1Menu }\"></ng-template>\n                                  </a>\n                                  <ng-container *ngIf=\"level1Menu.childrens\">\n                                      <ul class=\"amexio-sidenavbar-level1-child\" (nodeClick)=\"menuClick($event)\"  [templates]=\"subMenuTemplate\"  amexio-submenu-view [subMenuData]=\"level1Menu.childrens\"></ul>\n                                  </ng-container>\n                              </li>\n                          </ul>\n                      </div>\n                  </ng-container>\n\n              </li>\n          </ul>\n      </div>\n\n      <span *ngIf=\"enableToggleButton\" [style.margin-top]=\"toPosition\"  [ngClass]=\"{'amexio-sidenavbar-sidenavopenleft':!right, 'amexio-sidenavbar-sidenavopenright':right}\"  (click)=\"openNav()\">&#9776;</span>\n\n  ","styles":["\n      ul li{\n          list-style: none;\n          padding: 1px;\n      }\n\n      a{\n          cursor: pointer;\n          text-decoration: none;\n      }\n\n\n      .amexio-link-selected{\n\n      }\n      .amexio-link-notselected{\n\n      }\n\n      .amexio-sidenavbar-sidenavleft {\n          height: 100%;\n          width: 0;\n          position: fixed;\n          z-index: 1;\n          top: 0;\n          left: 0;\n          background-color: #ffffff;\n          overflow-x: hidden;\n          transition: 0.5s;\n          overflow: auto;\n      }\n\n      .amexio-sidenavbar-sidenavopenleft{\n          position:absolute;\n          top:0;\n          left:0;\n          font-size:30px;\n          cursor:pointer\n      }\n\n      .amexio-sidenavbar-sidenavleft >ul >li {\n          border-bottom: 1px solid #e7e7e7;\n      }\n\n      .amexio-sidenavbar-sidenavright {\n          height: 100%;\n          width: 0;\n          position: fixed;\n          z-index: 1;\n          top: 0;\n          right: 0;\n          background-color: #ffffff;\n          overflow-x: hidden;\n          transition: 0.5s;\n          overflow: auto;\n      }\n\n      .amexio-sidenavbar-sidenavopenright{\n          position:absolute;\n          top:0;\n          right:0;\n          font-size:30px;\n          cursor:pointer\n      }\n\n      .amexio-sidenavbar-sidenavright >ul >li {\n          border-bottom: 1px solid #e7e7e7;\n      }\n\n      @media screen and (max-height: 450px) {\n          .amexio-sidenavbar-sidenavleft {padding-top: 15px;}\n      }\n      .amexio-sidenavbar-filter{\n          padding-top: 5px;\n          padding-bottom: 5px;\n          padding-left: 10px;\n      }\n      .amexio-sidenavbar-input-width{\n          width: 100%;\n      }\n      .amexio-sidenavbar-nav-link-a{\n          padding-left: 10px;\n          padding-right: 10px;\n\n      }\n      .amexio-sidenavbar-child-header{\n          float: right;\n      }\n      .amexio-sidenavbar-level1-child{\n          list-style: none;\n          padding:0px;\n      }\n  "],"providers":[{"__symbolic":"reference","name":"CommonHttpService"}]}]}],"members":{"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"bindData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"expanded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"toPosition":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"enableToggleButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedNode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"right":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"headerTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["amexioNavHeaderTmpl"]}]}],"childTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["amexioMenuHeaderTmpl"]}]}],"subMenuTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["amexioSubMenuTmpl"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"},{"__symbolic":"reference","name":"CommonHttpService"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"expandNode":[{"__symbolic":"method"}],"menuClick":[{"__symbolic":"method"}],"renderServiceData":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"getData":[{"__symbolic":"method"}],"callService":[{"__symbolic":"method"}],"openNav":[{"__symbolic":"method"}],"closeNav":[{"__symbolic":"method"}],"filterData":[{"__symbolic":"method"}],"searchTree":[{"__symbolic":"method"}],"navToggle":[{"__symbolic":"method"}]}},"NavbarSubMenuComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"[amexio-submenu-view]","template":"\n    <ul class=\"amexio-navbarsubmenu-ul\">\n      <li *ngFor=\"let sm of subMenuData\">\n        <ng-container  *ngIf=\"sm.childrens\">\n          <a class=\"amexio-navbarsubmenu-a\"  [ngClass]=\"sm.selected ? 'amexio-link-selected' : 'amexio-link-notselected'\"   (click)=\"menuClick(sm)\">\n            <ng-container *ngIf=\"templates==null\">\n              {{sm.text}}\n            </ng-container>\n            <ng-template  [ngTemplateOutlet]=\"templates\" [ngOutletContext]=\"{ $implicit: {}, subMenus:sm }\"></ng-template>\n           </a>\n          <ul class=\"amexio-navbarsubmenu-ul\">\n            <ng-container *ngIf=\"sm.childrens\">\n              <li (nodeClick)=\"menuClick($event)\" amexio-submenu-view [subMenuData]=\"sm.childrens\" [templates]=\"templates\"></li>\n            </ng-container>\n          </ul>\n        </ng-container>\n        \n        <ng-container  *ngIf=\"!sm.childrens\">\n          <a class=\"amexio-navbarsubmenu-a\"  [ngClass]=\"sm.selected ? 'amexio-link-selected' : 'amexio-link-notselected'\"   (click)=\"menuClick(sm)\">\n           <ng-container *ngIf=\"templates==null\">\n             {{sm.text}}\n           </ng-container> \n            <ng-template *ngIf=\"templates!=null\"  [ngTemplateOutlet]=\"templates\" [ngOutletContext]=\"{ $implicit: {}, subMenus:sm }\"></ng-template>\n          </a>\n        </ng-container>\n      </li>\n    </ul>\n  ","styles":["\n      .amexio-navbarsubmenu-ul{\n          list-style: none;\n          padding: 1px;\n      }\n      .amexio-navbarsubmenu-ul li {\n          list-style: none;\n          padding: 1px 20px;\n          color: #777;\n      }\n      .amexio-navbarsubmenu-a {\n          text-decoration: none;\n          color: #777;\n          cursor:pointer;\n      }\n\n\n      .amexio-link-selected{\n\n      }\n      .amexio-link-notselected{\n\n      }\n  "]}]}],"members":{"subMenuData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"nodeClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"templates":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"menuClick":[{"__symbolic":"method"}]}},"NavbarComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-menubar","template":"\n      \n          <nav class=\"navbar navbar-toggleable-md navbar-light bg-faded \" [ngClass]=\"{ 'fixed-bottom dropup':bottom}\">\n            <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n\n              <div class=\"collapse navbar-collapse \" id=\"navbarNavDropdown\">\n                  <ul class=\"nav navbar-nav bg-faded\">\n                      <li class=\"dropdown amexio-navbar-dropdown-large bg-faded\" id=\"{{elementId}}dd-lr-{{ind}}\" *ngFor=\"let mh of menus let ind = index\" >\n                          <a class=\"dropdown-toggle\" [ngClass]=\"{'dropdown-toggle':getToggleClass(mh)}\" data-toggle=\"dropdown\" (click)=\"adjustPosition($event, ind)\">\n                              <ng-container *ngIf=\"headerTemplate==null\">\n                                  &nbsp;&nbsp;{{mh.text}}\n                              </ng-container><ng-template *ngIf=\"headerTemplate!=null\" [ngTemplateOutlet]=\"headerTemplate\" [ngOutletContext]=\"{ $implicit: {}, navHeader:mh }\"></ng-template>\n                          </a>\n                          <ng-container *ngIf=\"mh.childrens\">\n                              <ul class=\"dropdown-menu\" id=\"{{elementId}}dd-m-{{ind}}\">\n                                <div class=\"row\">\n                                  <li class=\"col-sm-4 amexio-navbar-li-position\" *ngFor=\"let sm of mh.childrens let ind =index\">\n                                    <ul class=\"amexio-navbar-align\">\n                                      <li class=\"amexio-navbar-li-custom\">\n                                        <a (click)=\"menuClick(sm)\">\n                                          <ng-container *ngIf=\"childTemplate==null\">{{sm.text}}</ng-container>\n                                          <ng-template *ngIf=\"childTemplate!=null\" [ngTemplateOutlet]=\"childTemplate\" [ngOutletContext]=\"{ $implicit: {}, menuHeader:sm }\"></ng-template>\n                                        </a>\n                                      </li>\n                                      <ng-container *ngIf=\"sm.childrens\">\n                                        <li class=\"amexio-navbar-ifchild\" (nodeClick)=\"menuClick($event)\" amexio-submenu-view [subMenuData]=\"sm.childrens\"  [templates]=\"subMenuTemplate\"></li>\n                                      </ng-container>\n                                    </ul>\n                                  </li>\n                                </div>\n                                 \n                              </ul>\n                          </ng-container>\n                      </li>\n                  </ul>\n              </div>\n          </nav>\n  ","styles":["\n        footer .navbar-collapse.in {\n            bottom: 70px;\n            position: absolute;\n            background-color:#333;\n            width: 100%;\n        }\n\n        @media screen and (max-width: 768px) {\n            footer .navbar-collapse {\n                position: absolute;\n                bottom: 70px;\n                width: 100%;\n                background-color: #303030;\n            }\n        }\n        .amexio-navbar-dropdown-large {\n            position: static !important;\n        }\n        .amexio-navbar-li-position{\n            position: static !important\n        }\n        .amexio-navbar-align{\n            padding: 0px;\n            margin: 0px;\n        }\n        .amexio-navbar-li-custom{\n            list-style: none;\n            color: #428bca;\n            font-size: 18px;\n            padding: 3px 2px;\n            position: static !important\n        }\n        .amexio-navbar-li-custom a{\n            cursor:pointer;\n            text-decoration: none;\n            color: #428bca;\n        }\n        .amexio-navbar-ifchild{\n            list-style: none;\n            padding:0px;\n        }\n    "],"providers":[{"__symbolic":"reference","name":"CommonHttpService"}]}]}],"members":{"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"bindData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"bottom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedNode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"headerTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["amexioNavHeaderTmpl"]}]}],"childTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["amexioMenuHeaderTmpl"]}]}],"subMenuTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["amexioSubMenuTmpl"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"},{"__symbolic":"reference","name":"CommonHttpService"}]}],"adjustPosition":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"menuClick":[{"__symbolic":"method"}],"renderServiceData":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"getData":[{"__symbolic":"method"}],"callService":[{"__symbolic":"method"}],"getToggleClass":[{"__symbolic":"method"}]}},"FilterTreeViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-tree-filter-view","template":"\n\n      <div [ngClass]=\"cClass\" class=\"col-lg-12\">\n          <div class=\"col-lg-12\">\n            <div class=\"input-group\">\n              <input type=\"text\" class=\"form-control\" aria-label=\"Text input with dropdown button\" [(ngModel)]=\"filterText\"  placeholder=\"Search\" (keyup)=\"filterData()\">\n              <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                </button>\n                <div class=\"dropdown-menu dropdown-menu-right\">\n                  <a class=\"dropdown-item\" *ngFor=\"let opt of filterOptionData\" (click)=\"filterOption(opt)\">{{opt.key}}&nbsp;<i [class]=\"opt.checkedStatus\" aria-hidden=\"true\"></i></a>\n                </div>\n              </div>\n            </div>\n              <ng-container *ngIf=\"isDataFound\">\n                  <amexio-tree-view\n                          [dataTableBindData]=\"treeData\"\n                          [enableCheckBox] =\"enableCheckBox\"\n                          (onTreeNodeChecked) = \"onCheckSelect($event)\"\n                          (selectedRecord)=\"onRowSelect($event)\" [templates]=\"templates\">\n                  </amexio-tree-view>\n              </ng-container>\n              <ng-container *ngIf=\"!isDataFound\">\n                  <p>No Data Found.</p>\n              </ng-container>\n\n          </div>\n      </div>\n\n\n  ","providers":[{"__symbolic":"reference","name":"CommonHttpService"}]}]}],"members":{"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataTableBindData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"enableCheckBox":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedRecord":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onTreeNodeChecked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"triggerChar":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"parentTmp":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["amexioTreeTemplate"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"},{"__symbolic":"reference","name":"CommonHttpService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"filterData":[{"__symbolic":"method"}],"searchTree":[{"__symbolic":"method"}],"filterOption":[{"__symbolic":"method"}],"renderServiceData":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"getData":[{"__symbolic":"method"}],"callService":[{"__symbolic":"method"}],"onRowSelect":[{"__symbolic":"method"}],"onCheckSelect":[{"__symbolic":"method"}]}},"TreeViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-tree-view","template":"\n        <div *ngIf=\"data.length== 0\">\n            <div class=\"loading-mask amexio-treeview-loadingmask\" >\n            </div>\n        </div>\n\n        <ul [ngClass]=\"cClass\" class=\"amexio-treeview-ul\" *ngIf=\"data.length > 0\">\n            <li style=\"cursor: pointer\" *ngFor=\"let treeData of data\">\n                <div >\n                    <span class=\"fa \" [ngClass]=\"{'fa-minus': treeData.expanded, 'fa-plus': (!treeData.expanded && treeData.children)}\" (click)=\"toggle(treeData)\"> </span>\n                    <span *ngIf=\"enableCheckBox\">\n                    <input type=\"checkbox\" [checked]=\"'checked'?treeData.checked:null\" (click)=\"emitCheckedData(treeData)\"/>                    \n                  </span>\n                    <label style=\"cursor: pointer\" (click)=\"emitData(treeData)\">\n                        <ng-container *ngIf=\"templates == null\">\n                            {{treeData.text}}\n                        </ng-container>\n                        <ng-template *ngIf=\"templates != null\" [ngTemplateOutlet]=\"parentTmp\" [ngOutletContext]=\"{ $implicit: { text: treeData.text } , icon: treeData.icon,node : treeData }\"></ng-template>\n                    </label>\n\n                </div>\n                <div *ngIf=\"treeData.expanded && treeData.expanded  == true\">\n                    <ul class=\"amexio-treeview-ul\">\n                        <li style=\"cursor: pointer\" *ngFor=\"let leaf of treeData.children\">\n                            <div>\n                                <span class=\"fa \" [ngClass]=\"{'fa-minus': leaf.expanded, 'fa-plus': (!leaf.expanded && leaf.children)}\" (click)=\"toggle(leaf)\"> </span>\n\n                                <span *ngIf=\"enableCheckBox\"><input type=\"checkbox\" [checked]=\"'checked'?leaf.checked:null\" (click)=\"emitCheckedData(leaf)\"/></span>\n\n                                <label (click)=\"emitData(leaf)\">\n                                    <ng-container *ngIf=\"templates == null\">{{ leaf.text }}</ng-container>\n                                    <ng-template *ngIf=\"templates != null\" [ngTemplateOutlet]=\"parentTmp\" [ngOutletContext]=\"{ $implicit: { text: leaf.text }, icon: leaf.icon, node : leaf }\"></ng-template>\n                                </label>\n\n                            </div>\n\n                            <div *ngIf=\"leaf.expanded && leaf.expanded  == true\">\n                                <amexio-tree-view [dataTableBindData]=\"leaf\" [dataReader]=\"'children'\" (selectedRecord)=\"setSelectedRecord($event)\" [templates]=\"templates\" (onTreeNodeChecked)=\"this.onTreeNodeCheck($event)\" [enableCheckBox]=\"enableCheckBox\"></amexio-tree-view>\n                            </div>\n                        </li>\n                    </ul>\n\n                </div>\n            </li>\n        </ul>","providers":[{"__symbolic":"reference","name":"CommonHttpService"}],"styles":["/**\n A Style Sheet for all form inputs common used classes\n */\n\n    /** Form Validations & Icon Positioning **/\n    .has-feedback-custom {\n        position: relative;\n    }\n    .has-feedback-custom .form-control {\n        padding-right: 47.5px;\n    }\n\n    .form-control-feedback-custom {\n        position: absolute;\n        top: 0;\n        right: 0;\n        z-index: 2;\n        display: block;\n        width: 38px;\n        height: 38px;\n        line-height: 38px;\n        text-align: center;\n        pointer-events: none;\n    }\n\n    .has-feedback-custom label ~ .form-control-feedback-custom {\n        top: 32px;\n    }\n    .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n        top: 0;\n    }\n    .amexio-treeview-loadingmask{\n        height: 300px;\n        width: 400px;\n    }\n    .amexio-treeview-ul{\n        list-style-type: none;\n        padding-left: 0px;\n    }"]}]}],"members":{"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataTableBindData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedRecord":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"templates":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"headerKey":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cookieName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"enableCheckBox":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"parentTmp":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["amexioTreeTemplate"]}]}],"onTreeNodeChecked":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CommonHttpService"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"getResponseData":[{"__symbolic":"method"}],"toggle":[{"__symbolic":"method"}],"setLazyData":[{"__symbolic":"method"}],"setSelectedRecord":[{"__symbolic":"method"}],"emitData":[{"__symbolic":"method"}],"emitCheckedData":[{"__symbolic":"method"}],"searchObject":[{"__symbolic":"method"}],"setCheckedStatusFromParent":[{"__symbolic":"method"}],"onTreeNodeCheck":[{"__symbolic":"method"}]}},"TreeDataTableComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-tree-data-table","template":"<table  class=\"table table-hover table-bordered \">\n        <thead>\n        <tr>\n            <td [attr.colspan]=\"columns.length\" width=\"100%\" align=\"right\">\n\n          <span class=\"amexio-tredatatable-float-left\">\n            <b>{{title}}</b>\n          </span>\n\n                <span class=\"amexio-tredatatable-float-right\">\n            <div class=\"dropdown\">\n              <a data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fa fa-list\" aria-hidden=\"true\"></i></a>\n                  <ul class=\"dropdown-menu dropdown-menu-right\">\n                      <li>\n                          &nbsp;&nbsp;<b> Show Columns</b>\n                      </li>\n                      <li *ngFor=\"let cols of columns\">\n                          <div class=\"checkbox\">\n                              <label>\n                                  &nbsp;&nbsp;<input type=\"checkbox\" (click)=\"setColumnVisiblity(cols.dataIndex)\" [attr.checked]=\"!cols.hidden ? true: null\"> {{cols.text +\" \"}}\n                              </label>\n                          </div>\n                      </li>\n                  </ul>\n            </div>\n          </span>\n            </td>\n        </tr>\n\n\n        <tr>\n            <td  *ngFor=\"let cols of columns\" [hidden]=\"cols.hidden\" >\n                <b><a (click)=\"setSortColumn(cols)\">{{cols.text}}</a></b>\n            </td>\n        </tr>\n\n        </thead>\n\n        <tr [ngClass]=\"{'amexio-treedatatable-hiderow' : !(viewRows.length > 0),'amexio-treedatatable-showrow' : viewRows.length > 0}\"  *ngFor=\"let row of viewRows let rowIndex = index\" [hidden]=\"!row.visible\" (click)=\"setSelectedRow(row, $event)\">\n            <td *ngFor=\"let cols of columns let colIndex = index\" [hidden] =\"cols.hidden\" >\n                <div class=\"amexio-treedatatable-col-0\" *ngIf=\"colIndex == 0\" \n                     [ngStyle]=\"{left: row.level*15+'px'}\" (click)=\"toggle(row,rowIndex)\">\n                  <span *ngIf=\"colIndex == 0\" class=\"fa \" [ngClass]=\"{'fa-minus': row.expanded, 'fa-plus': (!row.expanded && row.haschildren)}\" aria-hidden=\"true\">\n                  </span>\n                    {{row[cols.dataIndex]}}\n                </div>\n\n                <span *ngIf=\"colIndex > 0\" >{{row[cols.dataIndex]}}</span>\n\n            </td>\n        </tr>\n\n        <tr *ngIf=\"viewRows.length == 0\">\n            <td colspan=\"3\" class=\"loading-mask amexio-treedatatable-loadingmask-height\">\n\n            </td>\n        </tr>\n    </table>","providers":[{"__symbolic":"reference","name":"CommonHttpService"}],"styles":["/**\n A Style Sheet for all form inputs common used classes\n */\n\n        /** Form Validations & Icon Positioning **/\n        .has-feedback-custom {\n            position: relative;\n        }\n        .has-feedback-custom .form-control {\n            padding-right: 47.5px;\n        }\n\n        .form-control-feedback-custom {\n            position: absolute;\n            top: 0;\n            right: 0;\n            z-index: 2;\n            display: block;\n            width: 38px;\n            height: 38px;\n            line-height: 38px;\n            text-align: center;\n            pointer-events: none;\n        }\n\n        .has-feedback-custom label ~ .form-control-feedback-custom {\n            top: 32px;\n        }\n        .has-feedback-custom label.sr-only ~ .form-control-feedback-custom {\n            top: 0;\n        }\n        .amexio-treedatatable-loadingmask-height{\n            height: 400px;\n        }\n        .amexio-treedatatable-col-0{\n            cursor: pointer;\n            position: relative;\n        }\n        .amexio-treedatatable-hiderow{\n            visibility: hidden\n        }\n\n        .amexio-treedatatable-showrow{\n            visibility: visible;\n        }\n        .amexio-tredatatable-float-right{\n            float: right;\n        }\n        .amexio-tredatatable-float-left{\n            float: left;\n        }\n        "]}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataTableBindData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"pageSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedRecord":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"columnRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","name":"ColumnComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"CommonHttpService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"createConfig":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"toggle":[{"__symbolic":"method"}],"toggleViewRows":[{"__symbolic":"method"}],"renderData":[{"__symbolic":"method"}],"createViewRows":[{"__symbolic":"method"}],"getResponseData":[{"__symbolic":"method"}],"setSelectedRow":[{"__symbolic":"method"}],"setSortColumn":[{"__symbolic":"method"}],"sortData":[{"__symbolic":"method"}],"setColumnVisiblity":[{"__symbolic":"method"}]}},"PaneActionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-pane-action","template":"\n    <div [ngClass]=\"actionCClass\">\n        <ng-content></ng-content>\n    </div>\n\n  "}]}],"members":{"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"actionCClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"PaneBodyComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-pane-body","template":"\n    <div [ngClass]=\"bodyCClass\">\n        <ng-content></ng-content>\n    </div>\n   \n\n\n  "}]}],"members":{"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"bodyCClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"PaneHeaderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-pane-header","template":"\n    <div [ngClass]=\"headerCClass\">\n        <ng-content></ng-content>\n    </div>\n\n  "}]}],"members":{"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"headerCClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"WindowPaneComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-window-pane","template":"\n  <div class=\"modal fade amexio-window\"   tabindex=\"-1\" [ngClass]=\"{'show': visibleAnimate}\"\n       [ngStyle]=\"{'display': showWindow ? 'block' : 'none', 'opacity': visibleAnimate ? 1 : 0}\">\n    <div class=\"modal-dialog \" role=\"document\" [ngClass]=\"{'modal-lg':(size==2),'modal-sm':(size==1)}\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          {{title}}\n          <button *ngIf=\"closable\" type=\"button\" class=\"close\" (click)=\"close()\">&times;</button>\n        </div>\n        <div class=\"modal-body\" >\n          <ng-content select=\"amexio-pane-body\"></ng-content>\n        </div>\n        <div class=\"modal-footer\">\n          <ng-content select=\"amexio-pane-action\"></ng-content>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","styles":["\n      .amexio-window{\n          overflow: auto;\n          background: #888888;\n      }\n  "]}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"closable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showWindowChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"size":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"showWindow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"close":[{"__symbolic":"method"}]}},"DialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-dialog","template":"\n    <div class=\"modal fade amexio-dialog-background-color\" tabindex=\"-1\" [ngClass]=\"{'show': visibleAnimate}\"\n         [ngStyle]=\"{'display': showWindow ? 'block' : 'none', 'opacity': visibleAnimate ? 1 : 0}\">\n      <div class=\"modal-dialog \" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            {{title}}\n          </div>\n          <div class=\"modal-body\" >\n            <ng-content select=\"amexio-pane-body\"></ng-content>\n          </div>\n          <div class=\"modal-footer\">\n            <amexio-btn *ngIf=\"(dialogType==2)\" [label]=\"secondaryActionLabel\" [type]=\"'default'\" (onClick)=\"status('cancel')\"></amexio-btn>\n            <amexio-btn [label]=\"primaryActionLabel\" [type]=\"'primary'\" (onClick)=\"status('ok')\"></amexio-btn>\n          </div>\n        </div>\n      </div>\n    </div>\n  ","styles":["\n      .amexio-dialog-background-color{\n          background: #888888;\n      }\n  "]}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showWindowChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"actionStatus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"dialogType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"primaryActionLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"secondaryActionLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"showWindow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"close":[{"__symbolic":"method"}],"status":[{"__symbolic":"method"}]}},"CardComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-card-pane","template":"\n    \n\n    <div *ngIf=\"showCard\" class=\"amexio-card-padding\">\n      <div class=\"card\" [ngClass]=\"cClass\">\n        <div *ngIf=\"enableHeader\" class=\"card-header\">\n          <ng-content select=\"amexio-pane-header\"></ng-content>\n        </div>\n        <div class=\"card-block\">\n          <ng-content select=\"amexio-pane-body\"></ng-content>\n        </div>\n        <div *ngIf=\"enableFooter\" class=\"card-footer \" >\n          <ng-content select=\"amexio-pane-action\"></ng-content>\n        </div>\n      </div>\n    </div>\n    \n  ","styles":["\n      .amexio-card-padding{\n          padding: 2px;\n      }\n  "]}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"enableHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"enableFooter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"showCard":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"close":[{"__symbolic":"method"}]}},"ListBoxComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-listbox","template":"\n        <div [ngClass]=\"cClass\" style=\"padding: 10px;\" >\n            <table class=\"list-group\">\n                <tr *ngIf=\"(filter == true)\" class=\"list-group-item\">\n                    <td colspan=\"2\" width=\"90%\">\n                        <input type=\"text\" class=\"form-control\"  [(ngModel)]=\"filterText\"  placeholder=\"Search\" (keyup)=\"filterData()\">\n                    </td>\n                </tr>\n                <tr class=\"list-group-item\" *ngFor=\"let row of viewData let rowno = index \">\n                    <td *ngIf=\"(enableCheckbox == true)\" style=\"padding: 10px; \">\n                        <input type=\"checkbox\" (click)=\"selectedCheckBox($event,rowno,row)\"/>\n                    </td>\n                    <td (click)=\"onClick(row)\" style=\"cursor: pointer;\" >\n                        <ng-container *ngIf=\"!bodyTemplate\"> {{row[displayField]}}</ng-container>\n                        <ng-template *ngIf=\"bodyTemplate\" [ngTemplateOutlet]=\"bodyTemplate\" [ngOutletContext]=\"{ row: row }\"></ng-template>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    "}]}],"members":{"enableCheckbox":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataReader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"displayField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedRows":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"rowClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"httpUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"httpMethod":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"bodyTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":["amexioBodyTmpl"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"},{"__symbolic":"reference","name":"CommonHttpService"}]}],"ngOnInit":[{"__symbolic":"method"}],"setData":[{"__symbolic":"method"}],"filterData":[{"__symbolic":"method"}],"searchTree":[{"__symbolic":"method"}],"selectedCheckBox":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method"}]}},"NotifyComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-notification","template":"\n   <div class=\"list-group\" [ngClass]=\"msgStylClass\"  *ngIf=\"messageData!=null\" (window:resize)=\"onResize($event)\">\n     <ng-container *ngFor=\"let data of messageData let msgIndex=index\" >\n     <a [ngStyle]=\"setMsgBackground(data)\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n        <div class=\"d-flex w-100 justify-content-between\">\n           <h6 class=\"amexio-message-color\"><i class=\"fa fa-lg \" [ngClass]=\"icon\" aria-hidden=\"true\"></i>\n             {{data.msg}}</h6>\n          <i class=\"fa fa-times\" aria-hidden=\"true\" (click)=\"closePopup(msgIndex)\"></i>\n        </div>\n     </a>\n     </ng-container>\n   </div>\n  \n  ","styles":["\n     .amexio-messenger-desktop {\n         position: absolute;\n         top: 2%;\n         left: 70%;\n         right: 1%;\n         text-align: center;\n         overflow: hidden;\n         cursor: pointer;\n     }\n     .amexio-messenger-mobile {\n         position: absolute;\n         z-index: 101;\n         top: 2%;\n         left: 20%;\n         right: 1%;\n         text-align: center;\n         overflow: hidden;\n         cursor: pointer;\n     }\n     .amexio-message-color {\n         color: white;\n\n     }\n\n "]}]}],"members":{"messageData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"}]}],"ngOnInit":[{"__symbolic":"method"}],"closePopup":[{"__symbolic":"method"}],"setMsgBackground":[{"__symbolic":"method"}],"onResize":[{"__symbolic":"method"}],"changeStyle":[{"__symbolic":"method"}]}},"FieldSetComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-fieldset","template":"\n\n    <div style=\"padding: 5px;\">\n      <fieldset  [attr.class]=\"fieldSetClass\">\n        <legend  class=\"scheduler-border\">\n          <i *ngIf=\"collapsible\" [attr.class]=\"expandCollapseClass\" aria-hidden=\"true\" (click)=\"toogle()\"></i>\n          <span (click)=\"toogle()\"> &nbsp;{{title}}</span>\n        </legend>\n        <div [attr.class]=\"fieldSetContent\">\n          <ng-content select=\"amexio-fieldset-body\"></ng-content>\n        </div>\n      </fieldset>\n    </div>\n    \n\n    \n  ","styles":["\n      fieldset .contentnone {\n          display: none;\n      }\n\n      fieldset .contentdisplay {\n          display: block;\n      }\n\n      fieldset.scheduler-border-expanded {\n          border: 1px groove #ddd !important;\n          padding: 0 1.4em 1.4em 1.4em !important;\n          margin: 0 0 1.5em 0 !important;\n          -webkit-box-shadow:  0px 0px 0px 0px #000;\n          box-shadow:  0px 0px 0px 0px #000;\n      }\n\n      fieldset.scheduler-border-collapsed {\n          border-top: 1px groove #ddd !important;\n          border-bottom: none;\n          border-left: none;\n          border-right: none;\n          padding: 0 1.4em 1.4em 1.4em !important;\n          margin: 0 0 1.5em 0 !important;\n          -webkit-box-shadow:  0px 0px 0px 0px #000;\n          box-shadow:  0px 0px 0px 0px #000;\n      }\n\n      legend.scheduler-border {\n          font-size: 1.2em !important;\n          font-weight: bold !important;\n          text-align: left !important;\n          width:auto;\n          padding:0 10px;\n          border-bottom:none;\n      }\n\n  "]}]}],"members":{"collapsible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"toogle":[{"__symbolic":"method"}]}},"FieldSetBodyComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-fieldset-body","template":"\n \n    <ng-content></ng-content>\n\n\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ImageComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"amexio-image","template":"    \n    <!--Normal image-->\n      <ng-container *ngIf=\"imagePath || (imagePath && imageClass)\">\n        <img [src]=\"imagePath\" [attr.class]=\"cClass\" >\n      </ng-container>\n      \n      <!--this is for material design-->\n      <ng-container *ngIf=\"imageClass && mdbClass && !imagePath\">\n        <i [attr.class]=\"imageClass\">{{mdbClass}}</i>\n      </ng-container>\n      \n      <!--this is for fontawesome-->\n      <ng-container *ngIf=\"imageClass && (!imagePath && !mdbClass)\">\n        <i [attr.class]=\"imageClass\"></i>\n      </ng-container>\n  \n  "}]}],"members":{"imagePath":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"imageClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"mdbClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}}},"origins":{"AmexioWidgetModule":"./index","ButtonComponent":"./button/button.component","CommonHttpService":"./common.http.service","CUSTOM_TEXT_INPUT_CONTROL_VALUE_ACCESSOR":"./textinput/textinput.component","BASE_IMPL_TEXT_INPUT":"./textinput/textinput.component","TextInputComponent":"./textinput/textinput.component","FormInputBase":"./baseclass/form.base.class","CHECK_COLUMN_SIZE":"./checkgroup/checkbox.component","CheckBoxGroup":"./checkgroup/checkbox.component","DateTimeComponent":"./datetimepicker/datetimepicker.component","CUSTOM_DROPDOWN_CONTROL_VALUE_ACCESSOR":"./dropdown/dropdown","BASE_IMPL_DROPDOWN_INPUT":"./dropdown/dropdown","DropDownComponent":"./dropdown/dropdown","CUSTOM_EMAIL_INPUT_CONTROL_VALUE_ACCESSOR":"./emailinput/emailinput.component","BASE_IMPL_EMAIL_INPUT":"./emailinput/emailinput.component","EmailInputComponent":"./emailinput/emailinput.component","CUSTOM_NUMBER_INPUT_CONTROL_VALUE_ACCESSOR":"./numberinput/numberinput.component","BASE_IMPL_NUMBER_INPUT":"./numberinput/numberinput.component","NumberInputComponent":"./numberinput/numberinput.component","CUSTOM_PASSWORD_INPUT_CONTROL_VALUE_ACCESSOR":"./passwordinput/passwordinput.component","BASE_IMPL_PASSWORD_INPUT":"./passwordinput/passwordinput.component","PasswordInputComponent":"./passwordinput/passwordinput.component","ProgressComponent":"./progress/progress.component","COLUMN_SIZE":"./radiogroup/radiogroup.component","RadioGroupComponent":"./radiogroup/radiogroup.component","RatingInputComponent":"./ratinginput/ratinginput.component","CUSTOM_TEXT_AREA_INPUT_CONTROL_VALUE_ACCESSOR":"./textareainput/textareainput.component","BASE_IMPL_TEXTAREA_INPUT":"./textareainput/textareainput.component","TextAreaComponent":"./textareainput/textareainput.component","CUSTOM_AUTO_COMPLETE_CONTROL_VALUE_ACCESSOR":"./typeahead/autocomplete.component","BASE_IMPL_AUTO_COMPLETE":"./typeahead/autocomplete.component","TypeAheadComponent":"./typeahead/autocomplete.component","StepBlockComponent":"./steps/step-block","StepsComponent":"./steps/steps.component","ButtonGroupActionComponent":"./buttongroup/buttongroup.action.component","ButtonGroupComponent":"./buttongroup/buttongroup.component","DropdownItemComponent":"./buttondropdown/dropdown.item.component","ButtonDropdownComponent":"./buttondropdown/button.dropdown.component","ButtonSplitDropdownComponent":"./buttondropdown/button.split.dropdown.component","TabComponent":"./tabpane/tabpill.component","TabPaneComponent":"./tabpane/tabpane.component","VerticalLeftTabPaneComponent":"./tabpane/verticallefttab.component","VerticalRightTabPaneComponent":"./tabpane/verticalrighttab.component","FilterComponent":"./datatable/datatable.filter.component","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR":"./datatable/datatable.component","DataTableComponent":"./datatable/datatable.component","ColumnComponent":"./datatable/column.component","CarouselComponent":"./carousel/carousel.component","ItemSelectorComponent":"./itemselector/itemselector.component","SideNavBarComponent":"./navbar/sidenavbar.component","NavbarSubMenuComponent":"./navbar/navbarsubmenu.component","NavbarComponent":"./navbar/navbar.component","FilterTreeViewComponent":"./treeview/filtertreeview","TreeViewComponent":"./treeview/treeview.component","TreeDataTableComponent":"./treedatatable/treedatatable.component","PaneActionComponent":"./panes/paneaction.component","PaneBodyComponent":"./panes/panebody.component","PaneHeaderComponent":"./panes/paneheader.component","WindowPaneComponent":"./panes/windowpane.component","DialogComponent":"./panes/dialog.component","CardComponent":"./panes/card.component","ListBoxComponent":"./listbox/listbox.component","NotifyComponent":"./notify/notify.component","FieldSetComponent":"./fildset/fieldset.component","FieldSetBodyComponent":"./fildset/fieldsetbody.component","ImageComponent":"./image/image.component"},"importAs":"amexio-ng-extensions"}