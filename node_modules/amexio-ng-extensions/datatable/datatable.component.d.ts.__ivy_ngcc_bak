import { OnInit, QueryList, AfterContentInit, SimpleChanges, ChangeDetectorRef, AfterViewInit, OnChanges } from '@angular/core';
import { ColumnComponent } from './column.component';
import { CommonHttpService } from '../common.http.service';
export declare const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any;
export declare class DataTableComponent implements OnInit, AfterContentInit, AfterViewInit, OnChanges {
    private dataTableSevice;
    private cd;
    title: string;
    pageSize: number;
    httpUrl: string;
    httpMethod: string;
    dataReader: string;
    checkboxSelect: boolean;
    dataTableBindData: any;
    rowSelect: any;
    selectedRowData: any;
    height: string;
    width: string;
    groupByColumn: boolean;
    groupByColumnIndex: string;
    filtering: boolean;
    columns: any[];
    data: any[];
    viewRows: any[];
    maxPage: number;
    currentPage: number;
    sortColumn: any;
    pageNumbers: number[];
    elementId: string;
    selectedRowNo: number;
    selectAll: boolean;
    selectedRows: any[];
    summary: any[];
    summaryData: any[];
    isSummary: boolean;
    smallScreen: boolean;
    sortBy: number;
    randomIDCheckALL: string;
    cloneData: any;
    dropdownData: any;
    responseData: any;
    filterCloneData: any;
    rowId: any;
    columnRef: QueryList<ColumnComponent>;
    constructor(dataTableSevice: CommonHttpService, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    setHeight(): any;
    ngAfterContentInit(): void;
    createConfig(): void;
    createColumnConfig(): void;
    ngOnChanges(change: SimpleChanges): void;
    setData(httpResponse: any): void;
    createSummaryData(): void;
    getResponseData(httpResponse: any): any;
    renderData(): void;
    sortData(): void;
    next(): void;
    prev(): void;
    sortOnColHeaderClick(sortCol: any): void;
    setSortColumn(sortCol: any, _sortBy: number): void;
    setPageNo(value: any): void;
    setUserPageNo(): void;
    rowClick(rowData: any, rowIndex: any): void;
    isSelected(rowNo: any): boolean;
    setColumnVisiblity(dataIndex: string): void;
    selectAllVisibleRows(): void;
    setSelectedRow(rowData: any, event: any): void;
    emitSelectedRows(): void;
    onResize(event: any): void;
    setColumnData(): void;
    iconSwitch(groupData: any): void;
    getFilteredData(filteredObj: any): void;
    filterOpertion(data: any, filteredObj: any): any;
    pagingRegenration(): void;
}
