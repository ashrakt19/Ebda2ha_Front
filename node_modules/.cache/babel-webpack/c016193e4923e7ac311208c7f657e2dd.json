{"ast":null,"code":"import _assertThisInitialized from \"F:/front/Ebda2ha_Front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"F:/front/Ebda2ha_Front/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"F:/front/Ebda2ha_Front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:/front/Ebda2ha_Front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"F:/front/Ebda2ha_Front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createClass from \"F:/front/Ebda2ha_Front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"F:/front/Ebda2ha_Front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/** Current version of Angular Material. */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nvar _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nvar _c1 = [\"*\", \"mat-option, ng-container\"];\n\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nvar _c2 = [\"*\"];\nvar VERSION = new Version('10.2.7');\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/** @docs-private */\n\nvar AnimationCurves = function AnimationCurves() {\n  _classCallCheck(this, AnimationCurves);\n};\n\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\n\nvar AnimationDurations = function AnimationDurations() {\n  _classCallCheck(this, AnimationDurations);\n};\n\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n\nvar VERSION$1 = new Version('10.2.7');\n/** @docs-private */\n\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\n\n\nvar MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\r\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\r\n * components. This includes Bidi, etc.\r\n *\r\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\r\n */\n\nvar MatCommonModule = /*#__PURE__*/function () {\n  function MatCommonModule(highContrastModeDetector, sanityChecks,\n  /** @breaking-change 11.0.0 make document required */\n  document) {\n    _classCallCheck(this, MatCommonModule);\n\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n    this._hasDoneGlobalChecks = false;\n    this._document = document; // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses(); // Note that `_sanityChecks` is typed to `any`, because AoT\n    // throws an error if we use the `SanityChecks` type directly.\n\n\n    this._sanityChecks = sanityChecks;\n\n    if (!this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n\n      this._checkThemeIsPresent();\n\n      this._checkCdkVersionMatch();\n\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n  /** Access injected document if available or fallback to global document reference */\n\n\n  _createClass(MatCommonModule, [{\n    key: \"_getDocument\",\n    value: function _getDocument() {\n      var doc = this._document || document;\n      return typeof doc === 'object' && doc ? doc : null;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n\n  }, {\n    key: \"_getWindow\",\n    value: function _getWindow() {\n      var doc = this._getDocument();\n\n      var win = (doc === null || doc === void 0 ? void 0 : doc.defaultView) || window;\n      return typeof win === 'object' && win ? win : null;\n    }\n    /** Whether any sanity checks are enabled. */\n\n  }, {\n    key: \"_checksAreEnabled\",\n    value: function _checksAreEnabled() {\n      // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n      // it. Since these checks can have performance implications and they aren't tree shakeable\n      // in their current form, we can leave the `isDevMode` check in for now.\n      // tslint:disable-next-line:ban\n      return isDevMode() && !this._isTestEnv();\n    }\n    /** Whether the code is running in tests. */\n\n  }, {\n    key: \"_isTestEnv\",\n    value: function _isTestEnv() {\n      var window = this._getWindow();\n\n      return window && (window.__karma__ || window.jasmine);\n    }\n  }, {\n    key: \"_checkDoctypeIsDefined\",\n    value: function _checkDoctypeIsDefined() {\n      var isEnabled = this._checksAreEnabled() && (this._sanityChecks === true || this._sanityChecks.doctype);\n\n      var document = this._getDocument();\n\n      if (isEnabled && document && !document.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n      }\n    }\n  }, {\n    key: \"_checkThemeIsPresent\",\n    value: function _checkThemeIsPresent() {\n      // We need to assert that the `body` is defined, because these checks run very early\n      // and the `body` won't be defined if the consumer put their scripts in the `head`.\n      var isDisabled = !this._checksAreEnabled() || this._sanityChecks === false || !this._sanityChecks.theme;\n\n      var document = this._getDocument();\n\n      if (isDisabled || !document || !document.body || typeof getComputedStyle !== 'function') {\n        return;\n      }\n\n      var testElement = document.createElement('div');\n      testElement.classList.add('mat-theme-loaded-marker');\n      document.body.appendChild(testElement);\n      var computedStyle = getComputedStyle(testElement); // In some situations the computed style of the test element can be null. For example in\n      // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\n      if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n      }\n\n      document.body.removeChild(testElement);\n    }\n    /** Checks whether the material version matches the cdk version */\n\n  }, {\n    key: \"_checkCdkVersionMatch\",\n    value: function _checkCdkVersionMatch() {\n      var isEnabled = this._checksAreEnabled() && (this._sanityChecks === true || this._sanityChecks.version);\n\n      if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n        console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' + 'the Angular CDK version (' + VERSION$2.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n      }\n    }\n  }]);\n\n  return MatCommonModule;\n}();\n\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatCommonModule_Factory(t) {\n    return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8));\n  },\n  imports: [[BidiModule], BidiModule]\n});\n\nMatCommonModule.ctorParameters = function () {\n  return [{\n    type: HighContrastModeDetector\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MATERIAL_SANITY_CHECKS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, {\n    imports: function imports() {\n      return [BidiModule];\n    },\n    exports: function exports() {\n      return [BidiModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.HighContrastModeDetector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/** Mixin to augment a directive with a `disabled` property. */\n\n\nfunction mixinDisabled(base) {\n  return /*#__PURE__*/function (_base) {\n    _inherits(_class, _base);\n\n    var _super = _createSuper(_class);\n\n    function _class() {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this._disabled = false;\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: \"disabled\",\n      get: function get() {\n        return this._disabled;\n      },\n      set: function set(value) {\n        this._disabled = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return _class;\n  }(base);\n}\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/** Mixin to augment a directive with a `color` property. */\n\n\nfunction mixinColor(base, defaultColor) {\n  return /*#__PURE__*/function (_base2) {\n    _inherits(_class2, _base2);\n\n    var _super2 = _createSuper(_class2);\n\n    function _class2() {\n      var _this2;\n\n      _classCallCheck(this, _class2);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _super2.call.apply(_super2, [this].concat(args));\n      _this2.defaultColor = defaultColor; // Set the default color that can be specified from the mixin.\n\n      _this2.color = defaultColor;\n      return _this2;\n    }\n\n    _createClass(_class2, [{\n      key: \"color\",\n      get: function get() {\n        return this._color;\n      },\n      set: function set(value) {\n        var colorPalette = value || this.defaultColor;\n\n        if (colorPalette !== this._color) {\n          if (this._color) {\n            this._elementRef.nativeElement.classList.remove(\"mat-\".concat(this._color));\n          }\n\n          if (colorPalette) {\n            this._elementRef.nativeElement.classList.add(\"mat-\".concat(colorPalette));\n          }\n\n          this._color = colorPalette;\n        }\n      }\n    }]);\n\n    return _class2;\n  }(base);\n}\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/** Mixin to augment a directive with a `disableRipple` property. */\n\n\nfunction mixinDisableRipple(base) {\n  var Mixin = /*#__PURE__*/function (_base3) {\n    _inherits(Mixin, _base3);\n\n    var _super3 = _createSuper(Mixin);\n\n    function Mixin() {\n      var _this3;\n\n      _classCallCheck(this, Mixin);\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      _this3 = _super3.call.apply(_super3, [this].concat(args));\n      _this3._disableRipple = false;\n      return _this3;\n    }\n    /** Whether the ripple effect is disabled or not. */\n\n\n    _createClass(Mixin, [{\n      key: \"disableRipple\",\n      get: function get() {\n        return this._disableRipple;\n      },\n      set: function set(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return Mixin;\n  }(base); // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n\n\n  return Mixin;\n}\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/** Mixin to augment a directive with a `tabIndex` property. */\n\n\nfunction mixinTabIndex(base) {\n  var defaultTabIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\n  // but given we `extend` it from another class, we can assume a constructor being accessible.\n  var Mixin = /*#__PURE__*/function (_base4) {\n    _inherits(Mixin, _base4);\n\n    var _super4 = _createSuper(Mixin);\n\n    function Mixin() {\n      var _this4;\n\n      _classCallCheck(this, Mixin);\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      _this4 = _super4.call.apply(_super4, [this].concat(args));\n      _this4._tabIndex = defaultTabIndex;\n      _this4.defaultTabIndex = defaultTabIndex;\n      return _this4;\n    }\n\n    _createClass(Mixin, [{\n      key: \"tabIndex\",\n      get: function get() {\n        return this.disabled ? -1 : this._tabIndex;\n      },\n      set: function set(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n      }\n    }]);\n\n    return Mixin;\n  }(base); // Since we don't directly extend from `base` with it's original types, and we instruct\n  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n\n\n  return Mixin;\n}\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * Mixin to augment a directive with updateErrorState method.\r\n * For component with `errorState` and need to update `errorState`.\r\n */\n\n\nfunction mixinErrorState(base) {\n  return /*#__PURE__*/function (_base5) {\n    _inherits(_class3, _base5);\n\n    var _super5 = _createSuper(_class3);\n\n    function _class3() {\n      var _this5;\n\n      _classCallCheck(this, _class3);\n\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      _this5 = _super5.call.apply(_super5, [this].concat(args));\n      /** Whether the component is in an error state. */\n\n      _this5.errorState = false;\n      /**\r\n       * Stream that emits whenever the state of the input changes such that the wrapping\r\n       * `MatFormField` needs to run change detection.\r\n       */\n\n      _this5.stateChanges = new Subject();\n      return _this5;\n    }\n\n    _createClass(_class3, [{\n      key: \"updateErrorState\",\n      value: function updateErrorState() {\n        var oldState = this.errorState;\n        var parent = this._parentFormGroup || this._parentForm;\n        var matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n        var control = this.ngControl ? this.ngControl.control : null;\n        var newState = matcher.isErrorState(control, parent);\n\n        if (newState !== oldState) {\n          this.errorState = newState;\n          this.stateChanges.next();\n        }\n      }\n    }]);\n\n    return _class3;\n  }(base);\n}\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\n\n\nfunction mixinInitialized(base) {\n  return /*#__PURE__*/function (_base6) {\n    _inherits(_class4, _base6);\n\n    var _super6 = _createSuper(_class4);\n\n    function _class4() {\n      var _this6;\n\n      _classCallCheck(this, _class4);\n\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      _this6 = _super6.call.apply(_super6, [this].concat(args));\n      /** Whether this directive has been marked as initialized. */\n\n      _this6._isInitialized = false;\n      /**\r\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\r\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\r\n       * not expect to be populated after.\r\n       */\n\n      _this6._pendingSubscribers = [];\n      /**\r\n       * Observable stream that emits when the directive initializes. If already initialized, the\r\n       * subscriber is stored to be notified once _markInitialized is called.\r\n       */\n\n      _this6.initialized = new Observable(function (subscriber) {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (_this6._isInitialized) {\n          _this6._notifySubscriber(subscriber);\n        } else {\n          _this6._pendingSubscribers.push(subscriber);\n        }\n      });\n      return _this6;\n    }\n    /**\r\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\r\n     * of ngOnInit.\r\n     * @docs-private\r\n     */\n\n\n    _createClass(_class4, [{\n      key: \"_markInitialized\",\n      value: function _markInitialized() {\n        if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n        }\n\n        this._isInitialized = true;\n\n        this._pendingSubscribers.forEach(this._notifySubscriber);\n\n        this._pendingSubscribers = null;\n      }\n      /** Emits and completes the subscriber stream (should only emit once). */\n\n    }, {\n      key: \"_notifySubscriber\",\n      value: function _notifySubscriber(subscriber) {\n        subscriber.next();\n        subscriber.complete();\n      }\n    }]);\n\n    return _class4;\n  }(base);\n}\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\n\n\nvar MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/**\r\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\r\n * If you are importing and providing this in your code you can simply remove it.\r\n * @deprecated\r\n * @breaking-change 8.0.0\r\n */\n\n\nvar MAT_DATE_LOCALE_PROVIDER = {\n  provide: MAT_DATE_LOCALE,\n  useExisting: LOCALE_ID\n};\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\n\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter() {\n    _classCallCheck(this, DateAdapter);\n\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n\n    this.localeChanges = this._localeChanges;\n  }\n  /**\r\n   * Given a potential date object, returns that same date object if it is\r\n   * a valid date, or `null` if it's not a valid date.\r\n   * @param obj The object to check.\r\n   * @returns A date or `null`.\r\n   */\n\n\n  _createClass(DateAdapter, [{\n    key: \"getValidDateOrNull\",\n    value: function getValidDateOrNull(obj) {\n      return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\r\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n     * string). The default implementation does not allow any deserialization, it simply checks that\r\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\r\n     * support passing values from your backend directly to these properties by overriding this method\r\n     * to also deserialize the format used by your backend.\r\n     * @param value The value to be deserialized into a date object.\r\n     * @returns The deserialized date object, either a valid date, null if the value can be\r\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n        return value;\n      }\n\n      return this.invalid();\n    }\n    /**\r\n     * Sets the locale used for all dates.\r\n     * @param locale The new locale.\r\n     */\n\n  }, {\n    key: \"setLocale\",\n    value: function setLocale(locale) {\n      this.locale = locale;\n\n      this._localeChanges.next();\n    }\n    /**\r\n     * Compares two dates.\r\n     * @param first The first date to compare.\r\n     * @param second The second date to compare.\r\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n     *     a number greater than 0 if the first date is later.\r\n     */\n\n  }, {\n    key: \"compareDate\",\n    value: function compareDate(first, second) {\n      return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n    }\n    /**\r\n     * Checks if two dates are equal.\r\n     * @param first The first date to check.\r\n     * @param second The second date to check.\r\n     * @returns Whether the two dates are equal.\r\n     *     Null dates are considered equal to other null dates.\r\n     */\n\n  }, {\n    key: \"sameDate\",\n    value: function sameDate(first, second) {\n      if (first && second) {\n        var firstValid = this.isValid(first);\n        var secondValid = this.isValid(second);\n\n        if (firstValid && secondValid) {\n          return !this.compareDate(first, second);\n        }\n\n        return firstValid == secondValid;\n      }\n\n      return first == second;\n    }\n    /**\r\n     * Clamp the given date between min and max dates.\r\n     * @param date The date to clamp.\r\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\r\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\r\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n     *     otherwise `date`.\r\n     */\n\n  }, {\n    key: \"clampDate\",\n    value: function clampDate(date, min, max) {\n      if (min && this.compareDate(date, min) < 0) {\n        return min;\n      }\n\n      if (max && this.compareDate(date, max) > 0) {\n        return max;\n      }\n\n      return date;\n    }\n  }]);\n\n  return DateAdapter;\n}();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n\nvar MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n\n/** Whether the browser supports the Intl API. */\n\nvar SUPPORTS_INTL_API; // We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\n\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch (_a) {\n  SUPPORTS_INTL_API = false;\n}\n/** The default month names to use if Intl API is not available. */\n\n\nvar DEFAULT_MONTH_NAMES = {\n  'long': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\nvar ɵ0 = function ɵ0(i) {\n  return String(i + 1);\n};\n/** The default date names to use if Intl API is not available. */\n\n\nvar DEFAULT_DATE_NAMES = range(31, ɵ0);\n/** The default day of the week names to use if Intl API is not available. */\n\nvar DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\r\n * Matches strings that have the form of a valid RFC 3339 string\r\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\r\n * because the regex will match strings an with out of bounds month, date, etc.\r\n */\n\nvar ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\n\nfunction range(length, valueFunction) {\n  var valuesArray = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n\n\nvar NativeDateAdapter = /*#__PURE__*/function (_DateAdapter) {\n  _inherits(NativeDateAdapter, _DateAdapter);\n\n  var _super7 = _createSuper(NativeDateAdapter);\n\n  function NativeDateAdapter(matDateLocale, platform) {\n    var _thisSuper, _this7;\n\n    _classCallCheck(this, NativeDateAdapter);\n\n    _this7 = _super7.call(this);\n    /**\r\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\r\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\r\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\r\n     * will produce `'8/13/1800'`.\r\n     *\r\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\r\n     * getting the string representation of a Date object from its utc representation. We're keeping\r\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\r\n     * though.\r\n     */\n\n    _this7.useUtcForDisplay = true;\n\n    _get((_thisSuper = _assertThisInitialized(_this7), _getPrototypeOf(NativeDateAdapter.prototype)), \"setLocale\", _thisSuper).call(_thisSuper, matDateLocale); // IE does its own time zone correction, so we disable this on IE.\n\n\n    _this7.useUtcForDisplay = !platform.TRIDENT;\n    _this7._clampDate = platform.TRIDENT || platform.EDGE;\n    return _this7;\n  }\n\n  _createClass(NativeDateAdapter, [{\n    key: \"getYear\",\n    value: function getYear(date) {\n      return date.getFullYear();\n    }\n  }, {\n    key: \"getMonth\",\n    value: function getMonth(date) {\n      return date.getMonth();\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate(date) {\n      return date.getDate();\n    }\n  }, {\n    key: \"getDayOfWeek\",\n    value: function getDayOfWeek(date) {\n      return date.getDay();\n    }\n  }, {\n    key: \"getMonthNames\",\n    value: function getMonthNames(style) {\n      var _this8 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          month: style,\n          timeZone: 'utc'\n        });\n        return range(12, function (i) {\n          return _this8._stripDirectionalityCharacters(_this8._format(dtf, new Date(2017, i, 1)));\n        });\n      }\n\n      return DEFAULT_MONTH_NAMES[style];\n    }\n  }, {\n    key: \"getDateNames\",\n    value: function getDateNames() {\n      var _this9 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          day: 'numeric',\n          timeZone: 'utc'\n        });\n        return range(31, function (i) {\n          return _this9._stripDirectionalityCharacters(_this9._format(dtf, new Date(2017, 0, i + 1)));\n        });\n      }\n\n      return DEFAULT_DATE_NAMES;\n    }\n  }, {\n    key: \"getDayOfWeekNames\",\n    value: function getDayOfWeekNames(style) {\n      var _this10 = this;\n\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          weekday: style,\n          timeZone: 'utc'\n        });\n        return range(7, function (i) {\n          return _this10._stripDirectionalityCharacters(_this10._format(dtf, new Date(2017, 0, i + 1)));\n        });\n      }\n\n      return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n  }, {\n    key: \"getYearName\",\n    value: function getYearName(date) {\n      if (SUPPORTS_INTL_API) {\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          year: 'numeric',\n          timeZone: 'utc'\n        });\n        return this._stripDirectionalityCharacters(this._format(dtf, date));\n      }\n\n      return String(this.getYear(date));\n    }\n  }, {\n    key: \"getFirstDayOfWeek\",\n    value: function getFirstDayOfWeek() {\n      // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n      return 0;\n    }\n  }, {\n    key: \"getNumDaysInMonth\",\n    value: function getNumDaysInMonth(date) {\n      return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(date) {\n      return new Date(date.getTime());\n    }\n  }, {\n    key: \"createDate\",\n    value: function createDate(year, month, date) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n          throw Error(\"Invalid month index \\\"\".concat(month, \"\\\". Month index has to be between 0 and 11.\"));\n        }\n\n        if (date < 1) {\n          throw Error(\"Invalid date \\\"\".concat(date, \"\\\". Date has to be greater than 0.\"));\n        }\n      }\n\n      var result = this._createDateWithOverflow(year, month, date); // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n\n\n      if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\"Invalid date \\\"\".concat(date, \"\\\" for month with index \\\"\").concat(month, \"\\\".\"));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"today\",\n    value: function today() {\n      return new Date();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value) {\n      // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n      // parameters.\n      if (typeof value == 'number') {\n        return new Date(value);\n      }\n\n      return value ? new Date(Date.parse(value)) : null;\n    }\n  }, {\n    key: \"format\",\n    value: function format(date, displayFormat) {\n      if (!this.isValid(date)) {\n        throw Error('NativeDateAdapter: Cannot format invalid date.');\n      }\n\n      if (SUPPORTS_INTL_API) {\n        // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n        // if we attempt to format a date whose year is less than 1 or greater than 9999.\n        if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n          date = this.clone(date);\n          date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n        }\n\n        displayFormat = Object.assign(Object.assign({}, displayFormat), {\n          timeZone: 'utc'\n        });\n        var dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n        return this._stripDirectionalityCharacters(this._format(dtf, date));\n      }\n\n      return this._stripDirectionalityCharacters(date.toDateString());\n    }\n  }, {\n    key: \"addCalendarYears\",\n    value: function addCalendarYears(date, years) {\n      return this.addCalendarMonths(date, years * 12);\n    }\n  }, {\n    key: \"addCalendarMonths\",\n    value: function addCalendarMonths(date, months) {\n      var newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date)); // It's possible to wind up in the wrong month if the original month has more days than the new\n      // month. In this case we want to go to the last day of the desired month.\n      // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n      // guarantee this.\n\n\n      if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n        newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n      }\n\n      return newDate;\n    }\n  }, {\n    key: \"addCalendarDays\",\n    value: function addCalendarDays(date, days) {\n      return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n  }, {\n    key: \"toIso8601\",\n    value: function toIso8601(date) {\n      return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n    }\n    /**\r\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n     * invalid date for all other values.\r\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      if (typeof value === 'string') {\n        if (!value) {\n          return null;\n        } // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n        // string is the right format first.\n\n\n        if (ISO_8601_REGEX.test(value)) {\n          var date = new Date(value);\n\n          if (this.isValid(date)) {\n            return date;\n          }\n        }\n      }\n\n      return _get(_getPrototypeOf(NativeDateAdapter.prototype), \"deserialize\", this).call(this, value);\n    }\n  }, {\n    key: \"isDateInstance\",\n    value: function isDateInstance(obj) {\n      return obj instanceof Date;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return !isNaN(date.getTime());\n    }\n  }, {\n    key: \"invalid\",\n    value: function invalid() {\n      return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n\n  }, {\n    key: \"_createDateWithOverflow\",\n    value: function _createDateWithOverflow(year, month, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setFullYear` and `setHours` instead.\n      var d = new Date();\n      d.setFullYear(year, month, date);\n      d.setHours(0, 0, 0, 0);\n      return d;\n    }\n    /**\r\n     * Pads a number to make it two digits.\r\n     * @param n The number to pad.\r\n     * @returns The padded number.\r\n     */\n\n  }, {\n    key: \"_2digit\",\n    value: function _2digit(n) {\n      return ('00' + n).slice(-2);\n    }\n    /**\r\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n     * other browsers do not. We remove them to make output consistent and because they interfere with\r\n     * date parsing.\r\n     * @param str The string to strip direction characters from.\r\n     * @returns The stripped string.\r\n     */\n\n  }, {\n    key: \"_stripDirectionalityCharacters\",\n    value: function _stripDirectionalityCharacters(str) {\n      return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\r\n     * When converting Date object to string, javascript built-in functions may return wrong\r\n     * results because it applies its internal DST rules. The DST rules around the world change\r\n     * very frequently, and the current valid rule is not always valid in previous years though.\r\n     * We work around this problem building a new Date object which has its internal UTC\r\n     * representation with the local date and time.\r\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\r\n     *    timeZone set to 'utc' to work fine.\r\n     * @param date Date from which we want to get the string representation according to dtf\r\n     * @returns A Date object with its UTC representation based on the passed in date info\r\n     */\n\n  }, {\n    key: \"_format\",\n    value: function _format(dtf, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n      var d = new Date();\n      d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n      d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n      return dtf.format(d);\n    }\n  }]);\n\n  return NativeDateAdapter;\n}(DateAdapter);\n\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform));\n};\n\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\n\nNativeDateAdapter.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_LOCALE]\n    }]\n  }, {\n    type: Platform\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: ɵngcc2.Platform\n    }];\n  }, null);\n})();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n\nvar MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\nvar NativeDateModule = function NativeDateModule() {\n  _classCallCheck(this, NativeDateModule);\n};\n\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NativeDateModule_Factory(t) {\n    return new (t || NativeDateModule)();\n  },\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }],\n  imports: [[PlatformModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, {\n    imports: function imports() {\n      return [PlatformModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\n\nvar ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\n\nvar MatNativeDateModule = function MatNativeDateModule() {\n  _classCallCheck(this, MatNativeDateModule);\n};\n\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatNativeDateModule_Factory(t) {\n    return new (t || MatNativeDateModule)();\n  },\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: ɵ0$1\n  }],\n  imports: [[NativeDateModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, {\n    imports: [NativeDateModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: ɵ0$1\n      }]\n    }]\n  }], null, null);\n})();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n\n\nvar ShowOnDirtyErrorStateMatcher = /*#__PURE__*/function () {\n  function ShowOnDirtyErrorStateMatcher() {\n    _classCallCheck(this, ShowOnDirtyErrorStateMatcher);\n  }\n\n  _createClass(ShowOnDirtyErrorStateMatcher, [{\n    key: \"isErrorState\",\n    value: function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.dirty || form && form.submitted));\n    }\n  }]);\n\n  return ShowOnDirtyErrorStateMatcher;\n}();\n\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\n\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n\n\nvar ErrorStateMatcher = /*#__PURE__*/function () {\n  function ErrorStateMatcher() {\n    _classCallCheck(this, ErrorStateMatcher);\n  }\n\n  _createClass(ErrorStateMatcher, [{\n    key: \"isErrorState\",\n    value: function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.touched || form && form.submitted));\n    }\n  }]);\n\n  return ErrorStateMatcher;\n}();\n\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\n\nErrorStateMatcher.ɵprov = ɵɵdefineInjectable({\n  factory: function ErrorStateMatcher_Factory() {\n    return new ErrorStateMatcher();\n  },\n  token: ErrorStateMatcher,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * Shared directive to count lines inside a text area, such as a list item.\r\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\r\n * counted by checking the query list's length.\r\n */\n\n\nvar MatLine = function MatLine() {\n  _classCallCheck(this, MatLine);\n};\n\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\n\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\r\n * Helper that takes a query list of lines and sets the correct class on the host.\r\n * @docs-private\r\n */\n\n\nfunction setLines(lines, element) {\n  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'mat';\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(function (_ref) {\n    var length = _ref.length;\n    setClass(element, \"\".concat(prefix, \"-2-line\"), false);\n    setClass(element, \"\".concat(prefix, \"-3-line\"), false);\n    setClass(element, \"\".concat(prefix, \"-multi-line\"), false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, \"\".concat(prefix, \"-\").concat(length, \"-line\"), true);\n    } else if (length > 3) {\n      setClass(element, \"\".concat(prefix, \"-multi-line\"), true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\n\n\nfunction setClass(element, className, isAdd) {\n  var classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\r\n * Helper that takes a query list of lines and sets the correct class on the host.\r\n * @docs-private\r\n * @deprecated Use `setLines` instead.\r\n * @breaking-change 8.0.0\r\n */\n\n\nvar MatLineSetter = function MatLineSetter(lines, element) {\n  _classCallCheck(this, MatLineSetter);\n\n  setLines(lines, element);\n};\n\nvar MatLineModule = function MatLineModule() {\n  _classCallCheck(this, MatLineModule);\n};\n\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatLineModule_Factory(t) {\n    return new (t || MatLineModule)();\n  },\n  imports: [[MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, {\n    declarations: [MatLine],\n    imports: [MatCommonModule],\n    exports: [MatLine, MatCommonModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * Reference to a previously launched ripple element.\r\n */\n\n\nvar RippleRef = /*#__PURE__*/function () {\n  function RippleRef(_renderer,\n  /** Reference to the ripple HTML element. */\n  element,\n  /** Ripple configuration used for the ripple. */\n  config) {\n    _classCallCheck(this, RippleRef);\n\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    /** Current state of the ripple. */\n\n    this.state = 3\n    /* HIDDEN */\n    ;\n  }\n  /** Fades out the ripple element. */\n\n\n  _createClass(RippleRef, [{\n    key: \"fadeOut\",\n    value: function fadeOut() {\n      this._renderer.fadeOutRipple(this);\n    }\n  }]);\n\n  return RippleRef;\n}();\n/**\r\n * Default ripple animation configuration for ripples without an explicit\r\n * animation config specified.\r\n */\n\n\nvar defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n/**\r\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\r\n * events to avoid synthetic mouse events.\r\n */\n\nvar ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\n\nvar passiveEventOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/** Events that signal that the pointer is down. */\n\nvar pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\n\nvar pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\r\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\r\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\r\n * event handlers to be installed on the element that triggers ripple animations.\r\n * This will eventually become a custom renderer once Angular support exists.\r\n * @docs-private\r\n */\n\nvar RippleRenderer = /*#__PURE__*/function () {\n  function RippleRenderer(_target, _ngZone, elementOrElementRef, platform) {\n    _classCallCheck(this, RippleRenderer);\n\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /** Whether the pointer is currently down or not. */\n\n    this._isPointerDown = false;\n    /** Set of currently active ripple references. */\n\n    this._activeRipples = new Set();\n    /** Whether pointer-up event listeners have been registered. */\n\n    this._pointerUpEventsRegistered = false; // Only do anything if we're on the browser.\n\n    if (platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\r\n   * Fades in a ripple at the given coordinates.\r\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\r\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\r\n   * @param config Extra ripple options.\r\n   */\n\n\n  _createClass(RippleRenderer, [{\n    key: \"fadeInRipple\",\n    value: function fadeInRipple(x, y) {\n      var _this11 = this;\n\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n\n      var animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n\n      if (config.centered) {\n        x = containerRect.left + containerRect.width / 2;\n        y = containerRect.top + containerRect.height / 2;\n      }\n\n      var radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n      var offsetX = x - containerRect.left;\n      var offsetY = y - containerRect.top;\n      var duration = animationConfig.enterDuration;\n      var ripple = document.createElement('div');\n      ripple.classList.add('mat-ripple-element');\n      ripple.style.left = \"\".concat(offsetX - radius, \"px\");\n      ripple.style.top = \"\".concat(offsetY - radius, \"px\");\n      ripple.style.height = \"\".concat(radius * 2, \"px\");\n      ripple.style.width = \"\".concat(radius * 2, \"px\"); // If a custom color has been specified, set it as inline style. If no color is\n      // set, the default color will be applied through the ripple theme styles.\n\n      if (config.color != null) {\n        ripple.style.backgroundColor = config.color;\n      }\n\n      ripple.style.transitionDuration = \"\".concat(duration, \"ms\");\n\n      this._containerElement.appendChild(ripple); // By default the browser does not recalculate the styles of dynamically created\n      // ripple elements. This is critical because then the `scale` would not animate properly.\n\n\n      enforceStyleRecalculation(ripple);\n      ripple.style.transform = 'scale(1)'; // Exposed reference to the ripple that will be returned.\n\n      var rippleRef = new RippleRef(this, ripple, config);\n      rippleRef.state = 0\n      /* FADING_IN */\n      ; // Add the ripple reference to the list of all active ripples.\n\n      this._activeRipples.add(rippleRef);\n\n      if (!config.persistent) {\n        this._mostRecentTransientRipple = rippleRef;\n      } // Wait for the ripple element to be completely faded in.\n      // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n\n\n      this._runTimeoutOutsideZone(function () {\n        var isMostRecentTransientRipple = rippleRef === _this11._mostRecentTransientRipple;\n        rippleRef.state = 1\n        /* VISIBLE */\n        ; // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n\n        if (!config.persistent && (!isMostRecentTransientRipple || !_this11._isPointerDown)) {\n          rippleRef.fadeOut();\n        }\n      }, duration);\n\n      return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n\n  }, {\n    key: \"fadeOutRipple\",\n    value: function fadeOutRipple(rippleRef) {\n      var wasActive = this._activeRipples.delete(rippleRef);\n\n      if (rippleRef === this._mostRecentTransientRipple) {\n        this._mostRecentTransientRipple = null;\n      } // Clear out the cached bounding rect if we have no more ripples.\n\n\n      if (!this._activeRipples.size) {\n        this._containerRect = null;\n      } // For ripples that are not active anymore, don't re-run the fade-out animation.\n\n\n      if (!wasActive) {\n        return;\n      }\n\n      var rippleEl = rippleRef.element;\n      var animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n      rippleEl.style.transitionDuration = \"\".concat(animationConfig.exitDuration, \"ms\");\n      rippleEl.style.opacity = '0';\n      rippleRef.state = 2\n      /* FADING_OUT */\n      ; // Once the ripple faded out, the ripple can be safely removed from the DOM.\n\n      this._runTimeoutOutsideZone(function () {\n        rippleRef.state = 3\n        /* HIDDEN */\n        ;\n        rippleEl.parentNode.removeChild(rippleEl);\n      }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._activeRipples.forEach(function (ripple) {\n        return ripple.fadeOut();\n      });\n    }\n    /** Sets up the trigger event listeners */\n\n  }, {\n    key: \"setupTriggerEvents\",\n    value: function setupTriggerEvents(elementOrElementRef) {\n      var element = coerceElement(elementOrElementRef);\n\n      if (!element || element === this._triggerElement) {\n        return;\n      } // Remove all previously registered event listeners from the trigger element.\n\n\n      this._removeTriggerEvents();\n\n      this._triggerElement = element;\n\n      this._registerEvents(pointerDownEvents);\n    }\n    /**\r\n     * Handles all registered events.\r\n     * @docs-private\r\n     */\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      if (event.type === 'mousedown') {\n        this._onMousedown(event);\n      } else if (event.type === 'touchstart') {\n        this._onTouchStart(event);\n      } else {\n        this._onPointerUp();\n      } // If pointer-up events haven't been registered yet, do so now.\n      // We do this on-demand in order to reduce the total number of event listeners\n      // registered by the ripples, which speeds up the rendering time for large UIs.\n\n\n      if (!this._pointerUpEventsRegistered) {\n        this._registerEvents(pointerUpEvents);\n\n        this._pointerUpEventsRegistered = true;\n      }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n\n  }, {\n    key: \"_onMousedown\",\n    value: function _onMousedown(event) {\n      // Screen readers will fire fake mouse events for space/enter. Skip launching a\n      // ripple in this case for consistency with the non-screen-reader experience.\n      var isFakeMousedown = isFakeMousedownFromScreenReader(event);\n      var isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n      if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n        this._isPointerDown = true;\n        this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n      }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n\n  }, {\n    key: \"_onTouchStart\",\n    value: function _onTouchStart(event) {\n      if (!this._target.rippleDisabled) {\n        // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n        // events will launch a second ripple if we don't ignore mouse events for a specific\n        // time after a touchstart event.\n        this._lastTouchStartEvent = Date.now();\n        this._isPointerDown = true; // Use `changedTouches` so we skip any touches where the user put\n        // their finger down, but used another finger to tap the element again.\n\n        var touches = event.changedTouches;\n\n        for (var i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    }\n    /** Function being called whenever the trigger is being released. */\n\n  }, {\n    key: \"_onPointerUp\",\n    value: function _onPointerUp() {\n      if (!this._isPointerDown) {\n        return;\n      }\n\n      this._isPointerDown = false; // Fade-out all ripples that are visible and not persistent.\n\n      this._activeRipples.forEach(function (ripple) {\n        // By default, only ripples that are completely visible will fade out on pointer release.\n        // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n        var isVisible = ripple.state === 1\n        /* VISIBLE */\n        || ripple.config.terminateOnPointerUp && ripple.state === 0\n        /* FADING_IN */\n        ;\n\n        if (!ripple.config.persistent && isVisible) {\n          ripple.fadeOut();\n        }\n      });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n\n  }, {\n    key: \"_runTimeoutOutsideZone\",\n    value: function _runTimeoutOutsideZone(fn) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._ngZone.runOutsideAngular(function () {\n        return setTimeout(fn, delay);\n      });\n    }\n    /** Registers event listeners for a given list of events. */\n\n  }, {\n    key: \"_registerEvents\",\n    value: function _registerEvents(eventTypes) {\n      var _this12 = this;\n\n      this._ngZone.runOutsideAngular(function () {\n        eventTypes.forEach(function (type) {\n          _this12._triggerElement.addEventListener(type, _this12, passiveEventOptions);\n        });\n      });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n\n  }, {\n    key: \"_removeTriggerEvents\",\n    value: function _removeTriggerEvents() {\n      var _this13 = this;\n\n      if (this._triggerElement) {\n        pointerDownEvents.forEach(function (type) {\n          _this13._triggerElement.removeEventListener(type, _this13, passiveEventOptions);\n        });\n\n        if (this._pointerUpEventsRegistered) {\n          pointerUpEvents.forEach(function (type) {\n            _this13._triggerElement.removeEventListener(type, _this13, passiveEventOptions);\n          });\n        }\n      }\n    }\n  }]);\n\n  return RippleRenderer;\n}();\n/** Enforces a style recalculation of a DOM element by computing its styles. */\n\n\nfunction enforceStyleRecalculation(element) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\r\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\r\n */\n\n\nfunction distanceToFurthestCorner(x, y, rect) {\n  var distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  var distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/** Injection token that can be used to specify the global ripple options. */\n\n\nvar MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\n\nvar MatRipple = /*#__PURE__*/function () {\n  function MatRipple(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n    _classCallCheck(this, MatRipple);\n\n    this._elementRef = _elementRef;\n    this._animationMode = _animationMode;\n    /**\r\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\r\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\r\n     * bounding rectangle.\r\n     */\n\n    this.radius = 0;\n    this._disabled = false;\n    /** Whether ripple directive is initialized and the input bindings are set. */\n\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n  /**\r\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\r\n   * by using the `launch()` method.\r\n   */\n\n\n  _createClass(MatRipple, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = value;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\r\n     * The element that triggers the ripple when click events are received.\r\n     * Defaults to the directive's host element.\r\n     */\n\n  }, {\n    key: \"trigger\",\n    get: function get() {\n      return this._trigger || this._elementRef.nativeElement;\n    },\n    set: function set(trigger) {\n      this._trigger = trigger;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._isInitialized = true;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._rippleRenderer.fadeOutAll();\n    }\n    /**\r\n     * Ripple configuration from the directive's input values.\r\n     * @docs-private Implemented as part of RippleTarget\r\n     */\n\n  }, {\n    key: \"rippleConfig\",\n    get: function get() {\n      return {\n        centered: this.centered,\n        radius: this.radius,\n        color: this.color,\n        animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), this._animationMode === 'NoopAnimations' ? {\n          enterDuration: 0,\n          exitDuration: 0\n        } : {}), this.animation),\n        terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n      };\n    }\n    /**\r\n     * Whether ripples on pointer-down are disabled or not.\r\n     * @docs-private Implemented as part of RippleTarget\r\n     */\n\n  }, {\n    key: \"rippleDisabled\",\n    get: function get() {\n      return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n\n  }, {\n    key: \"_setupTriggerEventsIfEnabled\",\n    value: function _setupTriggerEventsIfEnabled() {\n      if (!this.disabled && this._isInitialized) {\n        this._rippleRenderer.setupTriggerEvents(this.trigger);\n      }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n\n  }, {\n    key: \"launch\",\n    value: function launch(configOrX) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var config = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (typeof configOrX === 'number') {\n        return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n      } else {\n        return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n      }\n    }\n  }]);\n\n  return MatRipple;\n}();\n\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    radius: [\"matRippleRadius\", \"radius\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"],\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    animation: [\"matRippleAnimation\", \"animation\"]\n  },\n  exportAs: [\"matRipple\"]\n});\n\nMatRipple.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatRipple.propDecorators = {\n  color: [{\n    type: Input,\n    args: ['matRippleColor']\n  }],\n  unbounded: [{\n    type: Input,\n    args: ['matRippleUnbounded']\n  }],\n  centered: [{\n    type: Input,\n    args: ['matRippleCentered']\n  }],\n  radius: [{\n    type: Input,\n    args: ['matRippleRadius']\n  }],\n  animation: [{\n    type: Input,\n    args: ['matRippleAnimation']\n  }],\n  disabled: [{\n    type: Input,\n    args: ['matRippleDisabled']\n  }],\n  trigger: [{\n    type: Input,\n    args: ['matRippleTrigger']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }],\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }]\n  });\n})();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n\nvar MatRippleModule = function MatRippleModule() {\n  _classCallCheck(this, MatRippleModule);\n};\n\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatRippleModule_Factory(t) {\n    return new (t || MatRippleModule)();\n  },\n  imports: [[MatCommonModule, PlatformModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, {\n    declarations: function declarations() {\n      return [MatRipple];\n    },\n    imports: function imports() {\n      return [MatCommonModule, PlatformModule];\n    },\n    exports: function exports() {\n      return [MatRipple, MatCommonModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, PlatformModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\r\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\r\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\r\n * Note that theming is meant to be handled by the parent element, e.g.\r\n * `mat-primary .mat-pseudo-checkbox`.\r\n *\r\n * Note that this component will be completely invisible to screen-reader users. This is *not*\r\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\r\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\r\n * of more complex components that appropriately handle selected / checked state.\r\n * @docs-private\r\n */\n\n\nvar MatPseudoCheckbox = function MatPseudoCheckbox(_animationMode) {\n  _classCallCheck(this, MatPseudoCheckbox);\n\n  this._animationMode = _animationMode;\n  /** Display state of the checkbox. */\n\n  this.state = 'unchecked';\n  /** Whether the checkbox is disabled. */\n\n  this.disabled = false;\n};\n\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatPseudoCheckbox.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatPseudoCheckbox.propDecorators = {\n  state: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n\nvar MatPseudoCheckboxModule = function MatPseudoCheckboxModule() {\n  _classCallCheck(this, MatPseudoCheckboxModule);\n};\n\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatPseudoCheckboxModule_Factory(t) {\n    return new (t || MatPseudoCheckboxModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, {\n    declarations: [MatPseudoCheckbox],\n    exports: [MatPseudoCheckbox]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n// Boilerplate for applying mixins to MatOptgroup.\n\n/** @docs-private */\n\n\nvar MatOptgroupBase = function MatOptgroupBase() {\n  _classCallCheck(this, MatOptgroupBase);\n};\n\nvar _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase); // Counter for unique group ids.\n\n\nvar _uniqueOptgroupIdCounter = 0;\n\nvar _MatOptgroupBase = /*#__PURE__*/function (_MatOptgroupMixinBase2) {\n  _inherits(_MatOptgroupBase, _MatOptgroupMixinBase2);\n\n  var _super8 = _createSuper(_MatOptgroupBase);\n\n  function _MatOptgroupBase() {\n    var _this14;\n\n    _classCallCheck(this, _MatOptgroupBase);\n\n    _this14 = _super8.apply(this, arguments);\n    /** Unique id for the underlying label. */\n\n    _this14._labelId = \"mat-optgroup-label-\".concat(_uniqueOptgroupIdCounter++);\n    return _this14;\n  }\n\n  return _MatOptgroupBase;\n}(_MatOptgroupMixinBase);\n\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) {\n  return ɵ_MatOptgroupBase_BaseFactory(t || _MatOptgroupBase);\n};\n\n_MatOptgroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatOptgroupBase,\n  inputs: {\n    label: \"label\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n_MatOptgroupBase.propDecorators = {\n  label: [{\n    type: Input\n  }]\n};\nvar ɵ_MatOptgroupBase_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(_MatOptgroupBase);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\n    type: Directive\n  }], null, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\r\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\r\n * retention of the class and its component metadata.\r\n */\n\n\nvar MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\r\n * Component that is used to group instances of `mat-option`.\r\n */\n\nvar MatOptgroup = /*#__PURE__*/function (_MatOptgroupBase2) {\n  _inherits(MatOptgroup, _MatOptgroupBase2);\n\n  var _super9 = _createSuper(MatOptgroup);\n\n  function MatOptgroup() {\n    _classCallCheck(this, MatOptgroup);\n\n    return _super9.apply(this, arguments);\n  }\n\n  return MatOptgroup;\n}(_MatOptgroupBase);\n\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) {\n  return ɵMatOptgroup_BaseFactory(t || MatOptgroup);\n};\n\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"],\n  hostVars: 4,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n      ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_OPTGROUP,\n    useExisting: MatOptgroup\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"mat-optgroup-label\", 3, \"id\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(3, 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    }\n  },\n  styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nvar ɵMatOptgroup_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-optgroup',\n        'role': 'group',\n        '[class.mat-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n    }]\n  }], null, null);\n})();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * Option IDs need to be unique across components, so this counter exists outside of\r\n * the component definition.\r\n */\n\n\nvar _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\n\nvar MatOptionSelectionChange = function MatOptionSelectionChange(\n/** Reference to the option that emitted the event. */\nsource) {\n  var isUserInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  _classCallCheck(this, MatOptionSelectionChange);\n\n  this.source = source;\n  this.isUserInput = isUserInput;\n};\n/**\r\n * Injection token used to provide the parent component to options.\r\n */\n\n\nvar MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\nvar _MatOptionBase = /*#__PURE__*/function () {\n  function _MatOptionBase(_element, _changeDetectorRef, _parent, group) {\n    _classCallCheck(this, _MatOptionBase);\n\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /** The unique ID of the option. */\n\n    this.id = \"mat-option-\".concat(_uniqueIdCounter++);\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onSelectionChange = new EventEmitter();\n    /** Emits when the state of the option changes and any parents have to be notified. */\n\n    this._stateChanges = new Subject();\n  }\n  /** Whether the wrapping component is in multiple selection mode. */\n\n\n  _createClass(_MatOptionBase, [{\n    key: \"multiple\",\n    get: function get() {\n      return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    }\n    /** Whether the option is disabled. */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.group && this.group.disabled || this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n\n  }, {\n    key: \"disableRipple\",\n    get: function get() {\n      return this._parent && this._parent.disableRipple;\n    }\n    /**\r\n     * Whether or not the option is currently active and ready to be selected.\r\n     * An active option displays styles as if it is focused, but the\r\n     * focus is actually retained somewhere else. This comes in handy\r\n     * for components like autocomplete where focus must remain on the input.\r\n     */\n\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._active;\n    }\n    /**\r\n     * The displayed value of the option. It is necessary to show the selected option in the\r\n     * select's trigger.\r\n     */\n\n  }, {\n    key: \"viewValue\",\n    get: function get() {\n      // TODO(kara): Add input property alternative for node envs.\n      return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      if (!this._selected) {\n        this._selected = true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /** Deselects the option. */\n\n  }, {\n    key: \"deselect\",\n    value: function deselect() {\n      if (this._selected) {\n        this._selected = false;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /** Sets focus onto this option. */\n\n  }, {\n    key: \"focus\",\n    value: function focus(_origin, options) {\n      // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n      // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n      var element = this._getHostElement();\n\n      if (typeof element.focus === 'function') {\n        element.focus(options);\n      }\n    }\n    /**\r\n     * This method sets display styles on the option to make it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     */\n\n  }, {\n    key: \"setActiveStyles\",\n    value: function setActiveStyles() {\n      if (!this._active) {\n        this._active = true;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\r\n     * This method removes display styles on the option that made it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     */\n\n  }, {\n    key: \"setInactiveStyles\",\n    value: function setInactiveStyles() {\n      if (this._active) {\n        this._active = false;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n\n  }, {\n    key: \"_handleKeydown\",\n    value: function _handleKeydown(event) {\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n        this._selectViaInteraction(); // Prevent the page from scrolling down and form submits.\n\n\n        event.preventDefault();\n      }\n    }\n    /**\r\n     * `Selects the option while indicating the selection came from the user. Used to\r\n     * determine if the select's view -> model callback should be invoked.`\r\n     */\n\n  }, {\n    key: \"_selectViaInteraction\",\n    value: function _selectViaInteraction() {\n      if (!this.disabled) {\n        this._selected = this.multiple ? !this._selected : true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent(true);\n      }\n    }\n    /**\r\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\r\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\r\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\r\n     * information.\r\n     */\n\n  }, {\n    key: \"_getAriaSelected\",\n    value: function _getAriaSelected() {\n      return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n\n  }, {\n    key: \"_getTabIndex\",\n    value: function _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n\n  }, {\n    key: \"_getHostElement\",\n    value: function _getHostElement() {\n      return this._element.nativeElement;\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      // Since parent components could be using the option's label to display the selected values\n      // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n      // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n      // relatively cheap, however we still limit them only to selected options in order to avoid\n      // hitting the DOM too often.\n      if (this._selected) {\n        var viewValue = this.viewValue;\n\n        if (viewValue !== this._mostRecentViewValue) {\n          this._mostRecentViewValue = viewValue;\n\n          this._stateChanges.next();\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n\n  }, {\n    key: \"_emitSelectionChangeEvent\",\n    value: function _emitSelectionChangeEvent() {\n      var isUserInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n  }]);\n\n  return _MatOptionBase;\n}();\n\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) {\n  return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase));\n};\n\n_MatOptionBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: _MatOptionBase,\n  inputs: {\n    id: \"id\",\n    disabled: \"disabled\",\n    value: \"value\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  }\n});\n\n_MatOptionBase.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined\n  }, {\n    type: _MatOptgroupBase\n  }];\n};\n\n_MatOptionBase.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  onSelectionChange: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined\n    }, {\n      type: _MatOptgroupBase\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * Single option inside of a `<mat-select>` element.\r\n */\n\n\nvar MatOption = /*#__PURE__*/function (_MatOptionBase2) {\n  _inherits(MatOption, _MatOptionBase2);\n\n  var _super10 = _createSuper(MatOption);\n\n  function MatOption(element, changeDetectorRef, parent, group) {\n    _classCallCheck(this, MatOption);\n\n    return _super10.call(this, element, changeDetectorRef, parent, group);\n  }\n\n  return MatOption;\n}(_MatOptionBase);\n\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n};\n\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n      ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    }\n  },\n  exportAs: [\"matOption\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 3,\n  consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(3, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  directives: [ɵngcc3.NgIf, MatRipple, MatPseudoCheckbox],\n  styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatOption.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_OPTION_PARENT_COMPONENT]\n    }]\n  }, {\n    type: MatOptgroup,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_OPTGROUP]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mat-selected]': 'selected',\n        '[class.mat-option-multiple]': 'multiple',\n        '[class.mat-active]': 'active',\n        '[id]': 'id',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[class.mat-option-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-option mat-focus-indicator'\n      },\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTGROUP]\n      }]\n    }];\n  }, null);\n})();\n/**\r\n * Counts the amount of option group labels that precede the specified option.\r\n * @param optionIndex Index of the option at which to start counting.\r\n * @param options Flat list of all of the options.\r\n * @param optionGroups Flat list of all of the option groups.\r\n * @docs-private\r\n */\n\n\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    var optionsArray = options.toArray();\n    var groups = optionGroups.toArray();\n    var groupCounter = 0;\n\n    for (var i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n/**\r\n * Determines the position to which to scroll a panel in order for an option to be into view.\r\n * @param optionOffset Offset of the option from the top of the panel.\r\n * @param optionHeight Height of the options.\r\n * @param currentScrollPosition Current scroll position of the panel.\r\n * @param panelHeight Height of the panel.\r\n * @docs-private\r\n */\n\n\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n\nvar MatOptionModule = function MatOptionModule() {\n  _classCallCheck(this, MatOptionModule);\n};\n\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatOptionModule_Factory(t) {\n    return new (t || MatOptionModule)();\n  },\n  imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, {\n    declarations: function declarations() {\n      return [MatOption, MatOptgroup];\n    },\n    imports: function imports() {\n      return [MatRippleModule, CommonModule, MatPseudoCheckboxModule];\n    },\n    exports: function exports() {\n      return [MatOption, MatOptgroup];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * InjectionToken that can be used to specify the global label options.\r\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\r\n *     `@angular/material/form-field` instead.\r\n * @breaking-change 11.0.0\r\n */\n\n\nvar MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\r\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\r\n * @docs-private\r\n * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\r\n */\n\nvar JAN = 0,\n    FEB = 1,\n    MAR = 2,\n    APR = 3,\n    MAY = 4,\n    JUN = 5,\n    JUL = 6,\n    AUG = 7,\n    SEP = 8,\n    OCT = 9,\n    NOV = 10,\n    DEC = 11;\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0$1 as ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a }; //# sourceMappingURL=core.js.map","map":{"version":3,"sources":["F:/front/Ebda2ha_Front/node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js"],"names":["Version","InjectionToken","isDevMode","NgModule","Optional","Inject","inject","LOCALE_ID","Injectable","ɵɵdefineInjectable","Directive","ElementRef","NgZone","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","EventEmitter","ChangeDetectorRef","Output","HighContrastModeDetector","isFakeMousedownFromScreenReader","BidiModule","VERSION","VERSION$2","DOCUMENT","CommonModule","coerceBooleanProperty","coerceNumberProperty","coerceElement","Subject","Observable","Platform","PlatformModule","normalizePassiveListenerOptions","startWith","ANIMATION_MODULE_TYPE","ENTER","SPACE","hasModifierKey","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","MatOption_mat_pseudo_checkbox_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","selected","disabled","_c2","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$1","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","highContrastModeDetector","sanityChecks","document","_hasDoneGlobalChecks","_document","_applyBodyHighContrastModeCssClasses","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","doc","_getDocument","win","defaultView","window","_isTestEnv","_getWindow","__karma__","jasmine","isEnabled","_checksAreEnabled","doctype","console","warn","isDisabled","theme","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","removeChild","version","full","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","MatCommonModule_Factory","t","ɵɵinject","imports","ctorParameters","undefined","decorators","args","ngJitMode","ɵɵsetNgModuleScope","exports","ɵsetClassMetadata","mixinDisabled","base","_disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","remove","mixinDisableRipple","Mixin","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","mixinErrorState","errorState","stateChanges","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","ngDevMode","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","provide","useExisting","DateAdapter","_localeChanges","localeChanges","obj","isDateInstance","isValid","invalid","locale","first","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","min","max","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","_a","DEFAULT_MONTH_NAMES","ɵ0","i","String","DEFAULT_DATE_NAMES","range","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","length","valueFunction","valuesArray","Array","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDay","style","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","result","parse","displayFormat","clone","setFullYear","Math","Object","assign","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","isNaN","NaN","d","setHours","n","slice","str","replace","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","format","ɵfac","NativeDateAdapter_Factory","ɵprov","token","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","providers","useClass","ɵ0$1","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","MatLine","MatLine_Factory","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","selector","host","setLines","lines","element","prefix","changes","pipe","subscribe","setClass","className","isAdd","MatLineSetter","MatLineModule","MatLineModule_Factory","declarations","RippleRef","_renderer","config","state","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","_ngZone","elementOrElementRef","_isPointerDown","_activeRipples","Set","_pointerUpEventsRegistered","isBrowser","_containerElement","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","duration","ripple","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","fadeOut","wasActive","delete","size","rippleEl","opacity","parentNode","_triggerElement","_removeTriggerEvents","_registerEvents","event","_onMousedown","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","fn","delay","runOutsideAngular","setTimeout","eventTypes","addEventListener","removeEventListener","getPropertyValue","rect","distX","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","_trigger","trigger","fadeOutAll","setupTriggerEvents","configOrX","MatRipple_Factory","ɵɵdirectiveInject","hostVars","hostBindings","MatRipple_HostBindings","ɵɵclassProp","unbounded","inputs","exportAs","propDecorators","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","ɵcmp","ɵɵdefineComponent","MatPseudoCheckbox_HostBindings","decls","vars","template","MatPseudoCheckbox_Template","styles","encapsulation","changeDetection","None","OnPush","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","arguments","_labelId","_MatOptgroupBase_Factory","ɵ_MatOptgroupBase_BaseFactory","label","features","ɵɵInheritDefinitionFeature","ɵɵgetInheritedFactory","MAT_OPTGROUP","MatOptgroup","MatOptgroup_Factory","ɵMatOptgroup_BaseFactory","MatOptgroup_HostBindings","ɵɵattribute","toString","ɵɵProvidersFeature","ngContentSelectors","consts","MatOptgroup_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵtext","ɵɵprojection","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","_MatOptionBase","_element","_changeDetectorRef","_parent","group","_selected","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","multiple","disableRipple","_getHostElement","textContent","trim","markForCheck","_emitSelectionChangeEvent","_origin","options","focus","viewValue","keyCode","_selectViaInteraction","preventDefault","emit","_MatOptionBase_Factory","outputs","MatOption","changeDetectorRef","MatOption_Factory","MatOption_HostBindings","ɵɵlistener","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","$event","_handleKeydown","ɵɵhostProperty","_getTabIndex","_getAriaSelected","active","MatOption_Template","ɵɵtemplate","directives","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","MatOptionModule_Factory","MAT_LABEL_GLOBAL_OPTIONS","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","ɵangular_material_src_material_core_core_a"],"mappings":"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","sourcesContent":["import { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\r\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { VERSION as VERSION$2 } from '@angular/cdk';\r\nimport { DOCUMENT, CommonModule } from '@angular/common';\r\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\r\nimport { startWith } from 'rxjs/operators';\r\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\r\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Current version of Angular Material. */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/cdk/a11y';\r\nimport * as ɵngcc2 from '@angular/cdk/platform';\r\nimport * as ɵngcc3 from '@angular/common';\r\n\r\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\r\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\r\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\r\n} }\r\nconst _c2 = [\"*\"];\r\nconst VERSION = new Version('10.2.7');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** @docs-private */\r\nclass AnimationCurves {\r\n}\r\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\r\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\r\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\r\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\r\n/** @docs-private */\r\nclass AnimationDurations {\r\n}\r\nAnimationDurations.COMPLEX = '375ms';\r\nAnimationDurations.ENTERING = '225ms';\r\nAnimationDurations.EXITING = '195ms';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// Private version constant to circumvent test/build issues,\r\n// i.e. avoid core to depend on the @angular/material primary entry-point\r\n// Can be removed once the Material primary entry-point no longer\r\n// re-exports all secondary entry-points\r\nconst VERSION$1 = new Version('10.2.7');\r\n/** @docs-private */\r\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\r\n    return true;\r\n}\r\n/** Injection token that configures whether the Material sanity checks are enabled. */\r\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\r\n    providedIn: 'root',\r\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\r\n});\r\n/**\r\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\r\n * components. This includes Bidi, etc.\r\n *\r\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\r\n */\r\nclass MatCommonModule {\r\n    constructor(highContrastModeDetector, sanityChecks, \r\n    /** @breaking-change 11.0.0 make document required */\r\n    document) {\r\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\r\n        this._hasDoneGlobalChecks = false;\r\n        this._document = document;\r\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\r\n        // in MatCommonModule.\r\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\r\n        // Note that `_sanityChecks` is typed to `any`, because AoT\r\n        // throws an error if we use the `SanityChecks` type directly.\r\n        this._sanityChecks = sanityChecks;\r\n        if (!this._hasDoneGlobalChecks) {\r\n            this._checkDoctypeIsDefined();\r\n            this._checkThemeIsPresent();\r\n            this._checkCdkVersionMatch();\r\n            this._hasDoneGlobalChecks = true;\r\n        }\r\n    }\r\n    /** Access injected document if available or fallback to global document reference */\r\n    _getDocument() {\r\n        const doc = this._document || document;\r\n        return typeof doc === 'object' && doc ? doc : null;\r\n    }\r\n    /** Use defaultView of injected document if available or fallback to global window reference */\r\n    _getWindow() {\r\n        const doc = this._getDocument();\r\n        const win = (doc === null || doc === void 0 ? void 0 : doc.defaultView) || window;\r\n        return typeof win === 'object' && win ? win : null;\r\n    }\r\n    /** Whether any sanity checks are enabled. */\r\n    _checksAreEnabled() {\r\n        // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\r\n        // it. Since these checks can have performance implications and they aren't tree shakeable\r\n        // in their current form, we can leave the `isDevMode` check in for now.\r\n        // tslint:disable-next-line:ban\r\n        return isDevMode() && !this._isTestEnv();\r\n    }\r\n    /** Whether the code is running in tests. */\r\n    _isTestEnv() {\r\n        const window = this._getWindow();\r\n        return window && (window.__karma__ || window.jasmine);\r\n    }\r\n    _checkDoctypeIsDefined() {\r\n        const isEnabled = this._checksAreEnabled() &&\r\n            (this._sanityChecks === true || this._sanityChecks.doctype);\r\n        const document = this._getDocument();\r\n        if (isEnabled && document && !document.doctype) {\r\n            console.warn('Current document does not have a doctype. This may cause ' +\r\n                'some Angular Material components not to behave as expected.');\r\n        }\r\n    }\r\n    _checkThemeIsPresent() {\r\n        // We need to assert that the `body` is defined, because these checks run very early\r\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\r\n        const isDisabled = !this._checksAreEnabled() ||\r\n            (this._sanityChecks === false || !this._sanityChecks.theme);\r\n        const document = this._getDocument();\r\n        if (isDisabled || !document || !document.body ||\r\n            typeof getComputedStyle !== 'function') {\r\n            return;\r\n        }\r\n        const testElement = document.createElement('div');\r\n        testElement.classList.add('mat-theme-loaded-marker');\r\n        document.body.appendChild(testElement);\r\n        const computedStyle = getComputedStyle(testElement);\r\n        // In some situations the computed style of the test element can be null. For example in\r\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\r\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n        if (computedStyle && computedStyle.display !== 'none') {\r\n            console.warn('Could not find Angular Material core theme. Most Material ' +\r\n                'components may not work as expected. For more info refer ' +\r\n                'to the theming guide: https://material.angular.io/guide/theming');\r\n        }\r\n        document.body.removeChild(testElement);\r\n    }\r\n    /** Checks whether the material version matches the cdk version */\r\n    _checkCdkVersionMatch() {\r\n        const isEnabled = this._checksAreEnabled() &&\r\n            (this._sanityChecks === true || this._sanityChecks.version);\r\n        if (isEnabled && VERSION$1.full !== VERSION$2.full) {\r\n            console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\r\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\r\n                'Please ensure the versions of these two packages exactly match.');\r\n        }\r\n    }\r\n}\r\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\r\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8)); }, imports: [[BidiModule], BidiModule] });\r\nMatCommonModule.ctorParameters = () => [\r\n    { type: HighContrastModeDetector },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [BidiModule],\r\n                exports: [BidiModule]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [MATERIAL_SANITY_CHECKS]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Mixin to augment a directive with a `disabled` property. */\r\nfunction mixinDisabled(base) {\r\n    return class extends base {\r\n        constructor(...args) {\r\n            super(...args);\r\n            this._disabled = false;\r\n        }\r\n        get disabled() { return this._disabled; }\r\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\r\n    };\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Mixin to augment a directive with a `color` property. */\r\nfunction mixinColor(base, defaultColor) {\r\n    return class extends base {\r\n        constructor(...args) {\r\n            super(...args);\r\n            this.defaultColor = defaultColor;\r\n            // Set the default color that can be specified from the mixin.\r\n            this.color = defaultColor;\r\n        }\r\n        get color() { return this._color; }\r\n        set color(value) {\r\n            const colorPalette = value || this.defaultColor;\r\n            if (colorPalette !== this._color) {\r\n                if (this._color) {\r\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\r\n                }\r\n                if (colorPalette) {\r\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\r\n                }\r\n                this._color = colorPalette;\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Mixin to augment a directive with a `disableRipple` property. */\r\nfunction mixinDisableRipple(base) {\r\n    class Mixin extends base {\r\n        constructor(...args) {\r\n            super(...args);\r\n            this._disableRipple = false;\r\n        }\r\n        /** Whether the ripple effect is disabled or not. */\r\n        get disableRipple() { return this._disableRipple; }\r\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\r\n    }\r\n    // Since we don't directly extend from `base` with it's original types, and we instruct\r\n    // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\r\n    // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\r\n    return Mixin;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Mixin to augment a directive with a `tabIndex` property. */\r\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\r\n    // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\r\n    // but given we `extend` it from another class, we can assume a constructor being accessible.\r\n    class Mixin extends base {\r\n        constructor(...args) {\r\n            super(...args);\r\n            this._tabIndex = defaultTabIndex;\r\n            this.defaultTabIndex = defaultTabIndex;\r\n        }\r\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\r\n        set tabIndex(value) {\r\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\r\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\r\n        }\r\n    }\r\n    // Since we don't directly extend from `base` with it's original types, and we instruct\r\n    // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\r\n    // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\r\n    return Mixin;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Mixin to augment a directive with updateErrorState method.\r\n * For component with `errorState` and need to update `errorState`.\r\n */\r\nfunction mixinErrorState(base) {\r\n    return class extends base {\r\n        constructor(...args) {\r\n            super(...args);\r\n            /** Whether the component is in an error state. */\r\n            this.errorState = false;\r\n            /**\r\n             * Stream that emits whenever the state of the input changes such that the wrapping\r\n             * `MatFormField` needs to run change detection.\r\n             */\r\n            this.stateChanges = new Subject();\r\n        }\r\n        updateErrorState() {\r\n            const oldState = this.errorState;\r\n            const parent = this._parentFormGroup || this._parentForm;\r\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\r\n            const control = this.ngControl ? this.ngControl.control : null;\r\n            const newState = matcher.isErrorState(control, parent);\r\n            if (newState !== oldState) {\r\n                this.errorState = newState;\r\n                this.stateChanges.next();\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\r\nfunction mixinInitialized(base) {\r\n    return class extends base {\r\n        constructor(...args) {\r\n            super(...args);\r\n            /** Whether this directive has been marked as initialized. */\r\n            this._isInitialized = false;\r\n            /**\r\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\r\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\r\n             * not expect to be populated after.\r\n             */\r\n            this._pendingSubscribers = [];\r\n            /**\r\n             * Observable stream that emits when the directive initializes. If already initialized, the\r\n             * subscriber is stored to be notified once _markInitialized is called.\r\n             */\r\n            this.initialized = new Observable(subscriber => {\r\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\r\n                // when _markInitialized is called.\r\n                if (this._isInitialized) {\r\n                    this._notifySubscriber(subscriber);\r\n                }\r\n                else {\r\n                    this._pendingSubscribers.push(subscriber);\r\n                }\r\n            });\r\n        }\r\n        /**\r\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\r\n         * of ngOnInit.\r\n         * @docs-private\r\n         */\r\n        _markInitialized() {\r\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw Error('This directive has already been marked as initialized and ' +\r\n                    'should not be called twice.');\r\n            }\r\n            this._isInitialized = true;\r\n            this._pendingSubscribers.forEach(this._notifySubscriber);\r\n            this._pendingSubscribers = null;\r\n        }\r\n        /** Emits and completes the subscriber stream (should only emit once). */\r\n        _notifySubscriber(subscriber) {\r\n            subscriber.next();\r\n            subscriber.complete();\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** InjectionToken for datepicker that can be used to override default locale code. */\r\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\r\n    providedIn: 'root',\r\n    factory: MAT_DATE_LOCALE_FACTORY,\r\n});\r\n/** @docs-private */\r\nfunction MAT_DATE_LOCALE_FACTORY() {\r\n    return inject(LOCALE_ID);\r\n}\r\n/**\r\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\r\n * If you are importing and providing this in your code you can simply remove it.\r\n * @deprecated\r\n * @breaking-change 8.0.0\r\n */\r\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\r\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\r\nclass DateAdapter {\r\n    constructor() {\r\n        this._localeChanges = new Subject();\r\n        /** A stream that emits when the locale changes. */\r\n        this.localeChanges = this._localeChanges;\r\n    }\r\n    /**\r\n     * Given a potential date object, returns that same date object if it is\r\n     * a valid date, or `null` if it's not a valid date.\r\n     * @param obj The object to check.\r\n     * @returns A date or `null`.\r\n     */\r\n    getValidDateOrNull(obj) {\r\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\r\n    }\r\n    /**\r\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n     * string). The default implementation does not allow any deserialization, it simply checks that\r\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\r\n     * support passing values from your backend directly to these properties by overriding this method\r\n     * to also deserialize the format used by your backend.\r\n     * @param value The value to be deserialized into a date object.\r\n     * @returns The deserialized date object, either a valid date, null if the value can be\r\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n     */\r\n    deserialize(value) {\r\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\r\n            return value;\r\n        }\r\n        return this.invalid();\r\n    }\r\n    /**\r\n     * Sets the locale used for all dates.\r\n     * @param locale The new locale.\r\n     */\r\n    setLocale(locale) {\r\n        this.locale = locale;\r\n        this._localeChanges.next();\r\n    }\r\n    /**\r\n     * Compares two dates.\r\n     * @param first The first date to compare.\r\n     * @param second The second date to compare.\r\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n     *     a number greater than 0 if the first date is later.\r\n     */\r\n    compareDate(first, second) {\r\n        return this.getYear(first) - this.getYear(second) ||\r\n            this.getMonth(first) - this.getMonth(second) ||\r\n            this.getDate(first) - this.getDate(second);\r\n    }\r\n    /**\r\n     * Checks if two dates are equal.\r\n     * @param first The first date to check.\r\n     * @param second The second date to check.\r\n     * @returns Whether the two dates are equal.\r\n     *     Null dates are considered equal to other null dates.\r\n     */\r\n    sameDate(first, second) {\r\n        if (first && second) {\r\n            let firstValid = this.isValid(first);\r\n            let secondValid = this.isValid(second);\r\n            if (firstValid && secondValid) {\r\n                return !this.compareDate(first, second);\r\n            }\r\n            return firstValid == secondValid;\r\n        }\r\n        return first == second;\r\n    }\r\n    /**\r\n     * Clamp the given date between min and max dates.\r\n     * @param date The date to clamp.\r\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\r\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\r\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n     *     otherwise `date`.\r\n     */\r\n    clampDate(date, min, max) {\r\n        if (min && this.compareDate(date, min) < 0) {\r\n            return min;\r\n        }\r\n        if (max && this.compareDate(date, max) > 0) {\r\n            return max;\r\n        }\r\n        return date;\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// TODO(mmalerba): Remove when we no longer support safari 9.\r\n/** Whether the browser supports the Intl API. */\r\nlet SUPPORTS_INTL_API;\r\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\r\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\r\n// the consumer is providing a polyfilled `Map`. See:\r\n// https://github.com/Microsoft/ChakraCore/issues/3189\r\n// https://github.com/angular/components/issues/15687\r\ntry {\r\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\r\n}\r\ncatch (_a) {\r\n    SUPPORTS_INTL_API = false;\r\n}\r\n/** The default month names to use if Intl API is not available. */\r\nconst DEFAULT_MONTH_NAMES = {\r\n    'long': [\r\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\r\n        'October', 'November', 'December'\r\n    ],\r\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\r\n};\r\nconst ɵ0 = i => String(i + 1);\r\n/** The default date names to use if Intl API is not available. */\r\nconst DEFAULT_DATE_NAMES = range(31, ɵ0);\r\n/** The default day of the week names to use if Intl API is not available. */\r\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\r\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\r\n};\r\n/**\r\n * Matches strings that have the form of a valid RFC 3339 string\r\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\r\n * because the regex will match strings an with out of bounds month, date, etc.\r\n */\r\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\r\n/** Creates an array and fills it with values. */\r\nfunction range(length, valueFunction) {\r\n    const valuesArray = Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n        valuesArray[i] = valueFunction(i);\r\n    }\r\n    return valuesArray;\r\n}\r\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\r\nclass NativeDateAdapter extends DateAdapter {\r\n    constructor(matDateLocale, platform) {\r\n        super();\r\n        /**\r\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\r\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\r\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\r\n         * will produce `'8/13/1800'`.\r\n         *\r\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\r\n         * getting the string representation of a Date object from its utc representation. We're keeping\r\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\r\n         * though.\r\n         */\r\n        this.useUtcForDisplay = true;\r\n        super.setLocale(matDateLocale);\r\n        // IE does its own time zone correction, so we disable this on IE.\r\n        this.useUtcForDisplay = !platform.TRIDENT;\r\n        this._clampDate = platform.TRIDENT || platform.EDGE;\r\n    }\r\n    getYear(date) {\r\n        return date.getFullYear();\r\n    }\r\n    getMonth(date) {\r\n        return date.getMonth();\r\n    }\r\n    getDate(date) {\r\n        return date.getDate();\r\n    }\r\n    getDayOfWeek(date) {\r\n        return date.getDay();\r\n    }\r\n    getMonthNames(style) {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\r\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\r\n        }\r\n        return DEFAULT_MONTH_NAMES[style];\r\n    }\r\n    getDateNames() {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\r\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\r\n        }\r\n        return DEFAULT_DATE_NAMES;\r\n    }\r\n    getDayOfWeekNames(style) {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\r\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\r\n        }\r\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\r\n    }\r\n    getYearName(date) {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\r\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n        }\r\n        return String(this.getYear(date));\r\n    }\r\n    getFirstDayOfWeek() {\r\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\r\n        return 0;\r\n    }\r\n    getNumDaysInMonth(date) {\r\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\r\n    }\r\n    clone(date) {\r\n        return new Date(date.getTime());\r\n    }\r\n    createDate(year, month, date) {\r\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\r\n            // Check for invalid month and date (except upper bound on date which we have to check after\r\n            // creating the Date).\r\n            if (month < 0 || month > 11) {\r\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n            }\r\n            if (date < 1) {\r\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n            }\r\n        }\r\n        let result = this._createDateWithOverflow(year, month, date);\r\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n        }\r\n        return result;\r\n    }\r\n    today() {\r\n        return new Date();\r\n    }\r\n    parse(value) {\r\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\r\n        // parameters.\r\n        if (typeof value == 'number') {\r\n            return new Date(value);\r\n        }\r\n        return value ? new Date(Date.parse(value)) : null;\r\n    }\r\n    format(date, displayFormat) {\r\n        if (!this.isValid(date)) {\r\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\r\n        }\r\n        if (SUPPORTS_INTL_API) {\r\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\r\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\r\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\r\n                date = this.clone(date);\r\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\r\n            }\r\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\r\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\r\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n        }\r\n        return this._stripDirectionalityCharacters(date.toDateString());\r\n    }\r\n    addCalendarYears(date, years) {\r\n        return this.addCalendarMonths(date, years * 12);\r\n    }\r\n    addCalendarMonths(date, months) {\r\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\r\n        // It's possible to wind up in the wrong month if the original month has more days than the new\r\n        // month. In this case we want to go to the last day of the desired month.\r\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n        // guarantee this.\r\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\r\n        }\r\n        return newDate;\r\n    }\r\n    addCalendarDays(date, days) {\r\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\r\n    }\r\n    toIso8601(date) {\r\n        return [\r\n            date.getUTCFullYear(),\r\n            this._2digit(date.getUTCMonth() + 1),\r\n            this._2digit(date.getUTCDate())\r\n        ].join('-');\r\n    }\r\n    /**\r\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n     * invalid date for all other values.\r\n     */\r\n    deserialize(value) {\r\n        if (typeof value === 'string') {\r\n            if (!value) {\r\n                return null;\r\n            }\r\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\r\n            // string is the right format first.\r\n            if (ISO_8601_REGEX.test(value)) {\r\n                let date = new Date(value);\r\n                if (this.isValid(date)) {\r\n                    return date;\r\n                }\r\n            }\r\n        }\r\n        return super.deserialize(value);\r\n    }\r\n    isDateInstance(obj) {\r\n        return obj instanceof Date;\r\n    }\r\n    isValid(date) {\r\n        return !isNaN(date.getTime());\r\n    }\r\n    invalid() {\r\n        return new Date(NaN);\r\n    }\r\n    /** Creates a date but allows the month and date to overflow. */\r\n    _createDateWithOverflow(year, month, date) {\r\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\r\n        // To work around this we use `setFullYear` and `setHours` instead.\r\n        const d = new Date();\r\n        d.setFullYear(year, month, date);\r\n        d.setHours(0, 0, 0, 0);\r\n        return d;\r\n    }\r\n    /**\r\n     * Pads a number to make it two digits.\r\n     * @param n The number to pad.\r\n     * @returns The padded number.\r\n     */\r\n    _2digit(n) {\r\n        return ('00' + n).slice(-2);\r\n    }\r\n    /**\r\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n     * other browsers do not. We remove them to make output consistent and because they interfere with\r\n     * date parsing.\r\n     * @param str The string to strip direction characters from.\r\n     * @returns The stripped string.\r\n     */\r\n    _stripDirectionalityCharacters(str) {\r\n        return str.replace(/[\\u200e\\u200f]/g, '');\r\n    }\r\n    /**\r\n     * When converting Date object to string, javascript built-in functions may return wrong\r\n     * results because it applies its internal DST rules. The DST rules around the world change\r\n     * very frequently, and the current valid rule is not always valid in previous years though.\r\n     * We work around this problem building a new Date object which has its internal UTC\r\n     * representation with the local date and time.\r\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\r\n     *    timeZone set to 'utc' to work fine.\r\n     * @param date Date from which we want to get the string representation according to dtf\r\n     * @returns A Date object with its UTC representation based on the passed in date info\r\n     */\r\n    _format(dtf, date) {\r\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\r\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\r\n        const d = new Date();\r\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\r\n        return dtf.format(d);\r\n    }\r\n}\r\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\r\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\r\nNativeDateAdapter.ctorParameters = () => [\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\r\n    { type: Platform }\r\n];\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [MAT_DATE_LOCALE]\r\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst MAT_NATIVE_DATE_FORMATS = {\r\n    parse: {\r\n        dateInput: null,\r\n    },\r\n    display: {\r\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\r\n        monthYearLabel: { year: 'numeric', month: 'short' },\r\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\r\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\r\n    }\r\n};\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass NativeDateModule {\r\n}\r\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\r\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); }, providers: [\r\n        { provide: DateAdapter, useClass: NativeDateAdapter },\r\n    ], imports: [[PlatformModule]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [PlatformModule],\r\n                providers: [\r\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\r\nclass MatNativeDateModule {\r\n}\r\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\r\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [NativeDateModule],\r\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Error state matcher that matches when a control is invalid and dirty. */\r\nclass ShowOnDirtyErrorStateMatcher {\r\n    isErrorState(control, form) {\r\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\r\n    }\r\n}\r\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\r\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\r\n        type: Injectable\r\n    }], null, null); })();\r\n/** Provider that defines how form controls behave with regards to displaying error messages. */\r\nclass ErrorStateMatcher {\r\n    isErrorState(control, form) {\r\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\r\n    }\r\n}\r\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\r\nErrorStateMatcher.ɵprov = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Shared directive to count lines inside a text area, such as a list item.\r\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\r\n * counted by checking the query list's length.\r\n */\r\nclass MatLine {\r\n}\r\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\r\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLine, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[mat-line], [matLine]',\r\n                host: { 'class': 'mat-line' }\r\n            }]\r\n    }], null, null); })();\r\n/**\r\n * Helper that takes a query list of lines and sets the correct class on the host.\r\n * @docs-private\r\n */\r\nfunction setLines(lines, element, prefix = 'mat') {\r\n    // Note: doesn't need to unsubscribe, because `changes`\r\n    // gets completed by Angular when the view is destroyed.\r\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\r\n        setClass(element, `${prefix}-2-line`, false);\r\n        setClass(element, `${prefix}-3-line`, false);\r\n        setClass(element, `${prefix}-multi-line`, false);\r\n        if (length === 2 || length === 3) {\r\n            setClass(element, `${prefix}-${length}-line`, true);\r\n        }\r\n        else if (length > 3) {\r\n            setClass(element, `${prefix}-multi-line`, true);\r\n        }\r\n    });\r\n}\r\n/** Adds or removes a class from an element. */\r\nfunction setClass(element, className, isAdd) {\r\n    const classList = element.nativeElement.classList;\r\n    isAdd ? classList.add(className) : classList.remove(className);\r\n}\r\n/**\r\n * Helper that takes a query list of lines and sets the correct class on the host.\r\n * @docs-private\r\n * @deprecated Use `setLines` instead.\r\n * @breaking-change 8.0.0\r\n */\r\nclass MatLineSetter {\r\n    constructor(lines, element) {\r\n        setLines(lines, element);\r\n    }\r\n}\r\nclass MatLineModule {\r\n}\r\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\r\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatLineModule_Factory(t) { return new (t || MatLineModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [MatCommonModule],\r\n                exports: [MatLine, MatCommonModule],\r\n                declarations: [MatLine]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Reference to a previously launched ripple element.\r\n */\r\nclass RippleRef {\r\n    constructor(_renderer, \r\n    /** Reference to the ripple HTML element. */\r\n    element, \r\n    /** Ripple configuration used for the ripple. */\r\n    config) {\r\n        this._renderer = _renderer;\r\n        this.element = element;\r\n        this.config = config;\r\n        /** Current state of the ripple. */\r\n        this.state = 3 /* HIDDEN */;\r\n    }\r\n    /** Fades out the ripple element. */\r\n    fadeOut() {\r\n        this._renderer.fadeOutRipple(this);\r\n    }\r\n}\r\n\r\n/**\r\n * Default ripple animation configuration for ripples without an explicit\r\n * animation config specified.\r\n */\r\nconst defaultRippleAnimationConfig = {\r\n    enterDuration: 450,\r\n    exitDuration: 400\r\n};\r\n/**\r\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\r\n * events to avoid synthetic mouse events.\r\n */\r\nconst ignoreMouseEventsTimeout = 800;\r\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\r\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\r\n/** Events that signal that the pointer is down. */\r\nconst pointerDownEvents = ['mousedown', 'touchstart'];\r\n/** Events that signal that the pointer is up. */\r\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\r\n/**\r\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\r\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\r\n * event handlers to be installed on the element that triggers ripple animations.\r\n * This will eventually become a custom renderer once Angular support exists.\r\n * @docs-private\r\n */\r\nclass RippleRenderer {\r\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\r\n        this._target = _target;\r\n        this._ngZone = _ngZone;\r\n        /** Whether the pointer is currently down or not. */\r\n        this._isPointerDown = false;\r\n        /** Set of currently active ripple references. */\r\n        this._activeRipples = new Set();\r\n        /** Whether pointer-up event listeners have been registered. */\r\n        this._pointerUpEventsRegistered = false;\r\n        // Only do anything if we're on the browser.\r\n        if (platform.isBrowser) {\r\n            this._containerElement = coerceElement(elementOrElementRef);\r\n        }\r\n    }\r\n    /**\r\n     * Fades in a ripple at the given coordinates.\r\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\r\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\r\n     * @param config Extra ripple options.\r\n     */\r\n    fadeInRipple(x, y, config = {}) {\r\n        const containerRect = this._containerRect =\r\n            this._containerRect || this._containerElement.getBoundingClientRect();\r\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\r\n        if (config.centered) {\r\n            x = containerRect.left + containerRect.width / 2;\r\n            y = containerRect.top + containerRect.height / 2;\r\n        }\r\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\r\n        const offsetX = x - containerRect.left;\r\n        const offsetY = y - containerRect.top;\r\n        const duration = animationConfig.enterDuration;\r\n        const ripple = document.createElement('div');\r\n        ripple.classList.add('mat-ripple-element');\r\n        ripple.style.left = `${offsetX - radius}px`;\r\n        ripple.style.top = `${offsetY - radius}px`;\r\n        ripple.style.height = `${radius * 2}px`;\r\n        ripple.style.width = `${radius * 2}px`;\r\n        // If a custom color has been specified, set it as inline style. If no color is\r\n        // set, the default color will be applied through the ripple theme styles.\r\n        if (config.color != null) {\r\n            ripple.style.backgroundColor = config.color;\r\n        }\r\n        ripple.style.transitionDuration = `${duration}ms`;\r\n        this._containerElement.appendChild(ripple);\r\n        // By default the browser does not recalculate the styles of dynamically created\r\n        // ripple elements. This is critical because then the `scale` would not animate properly.\r\n        enforceStyleRecalculation(ripple);\r\n        ripple.style.transform = 'scale(1)';\r\n        // Exposed reference to the ripple that will be returned.\r\n        const rippleRef = new RippleRef(this, ripple, config);\r\n        rippleRef.state = 0 /* FADING_IN */;\r\n        // Add the ripple reference to the list of all active ripples.\r\n        this._activeRipples.add(rippleRef);\r\n        if (!config.persistent) {\r\n            this._mostRecentTransientRipple = rippleRef;\r\n        }\r\n        // Wait for the ripple element to be completely faded in.\r\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\r\n        this._runTimeoutOutsideZone(() => {\r\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\r\n            rippleRef.state = 1 /* VISIBLE */;\r\n            // When the timer runs out while the user has kept their pointer down, we want to\r\n            // keep only the persistent ripples and the latest transient ripple. We do this,\r\n            // because we don't want stacked transient ripples to appear after their enter\r\n            // animation has finished.\r\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\r\n                rippleRef.fadeOut();\r\n            }\r\n        }, duration);\r\n        return rippleRef;\r\n    }\r\n    /** Fades out a ripple reference. */\r\n    fadeOutRipple(rippleRef) {\r\n        const wasActive = this._activeRipples.delete(rippleRef);\r\n        if (rippleRef === this._mostRecentTransientRipple) {\r\n            this._mostRecentTransientRipple = null;\r\n        }\r\n        // Clear out the cached bounding rect if we have no more ripples.\r\n        if (!this._activeRipples.size) {\r\n            this._containerRect = null;\r\n        }\r\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\r\n        if (!wasActive) {\r\n            return;\r\n        }\r\n        const rippleEl = rippleRef.element;\r\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\r\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\r\n        rippleEl.style.opacity = '0';\r\n        rippleRef.state = 2 /* FADING_OUT */;\r\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\r\n        this._runTimeoutOutsideZone(() => {\r\n            rippleRef.state = 3 /* HIDDEN */;\r\n            rippleEl.parentNode.removeChild(rippleEl);\r\n        }, animationConfig.exitDuration);\r\n    }\r\n    /** Fades out all currently active ripples. */\r\n    fadeOutAll() {\r\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\r\n    }\r\n    /** Sets up the trigger event listeners */\r\n    setupTriggerEvents(elementOrElementRef) {\r\n        const element = coerceElement(elementOrElementRef);\r\n        if (!element || element === this._triggerElement) {\r\n            return;\r\n        }\r\n        // Remove all previously registered event listeners from the trigger element.\r\n        this._removeTriggerEvents();\r\n        this._triggerElement = element;\r\n        this._registerEvents(pointerDownEvents);\r\n    }\r\n    /**\r\n     * Handles all registered events.\r\n     * @docs-private\r\n     */\r\n    handleEvent(event) {\r\n        if (event.type === 'mousedown') {\r\n            this._onMousedown(event);\r\n        }\r\n        else if (event.type === 'touchstart') {\r\n            this._onTouchStart(event);\r\n        }\r\n        else {\r\n            this._onPointerUp();\r\n        }\r\n        // If pointer-up events haven't been registered yet, do so now.\r\n        // We do this on-demand in order to reduce the total number of event listeners\r\n        // registered by the ripples, which speeds up the rendering time for large UIs.\r\n        if (!this._pointerUpEventsRegistered) {\r\n            this._registerEvents(pointerUpEvents);\r\n            this._pointerUpEventsRegistered = true;\r\n        }\r\n    }\r\n    /** Function being called whenever the trigger is being pressed using mouse. */\r\n    _onMousedown(event) {\r\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\r\n        // ripple in this case for consistency with the non-screen-reader experience.\r\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\r\n        const isSyntheticEvent = this._lastTouchStartEvent &&\r\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\r\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\r\n            this._isPointerDown = true;\r\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\r\n        }\r\n    }\r\n    /** Function being called whenever the trigger is being pressed using touch. */\r\n    _onTouchStart(event) {\r\n        if (!this._target.rippleDisabled) {\r\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\r\n            // events will launch a second ripple if we don't ignore mouse events for a specific\r\n            // time after a touchstart event.\r\n            this._lastTouchStartEvent = Date.now();\r\n            this._isPointerDown = true;\r\n            // Use `changedTouches` so we skip any touches where the user put\r\n            // their finger down, but used another finger to tap the element again.\r\n            const touches = event.changedTouches;\r\n            for (let i = 0; i < touches.length; i++) {\r\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\r\n            }\r\n        }\r\n    }\r\n    /** Function being called whenever the trigger is being released. */\r\n    _onPointerUp() {\r\n        if (!this._isPointerDown) {\r\n            return;\r\n        }\r\n        this._isPointerDown = false;\r\n        // Fade-out all ripples that are visible and not persistent.\r\n        this._activeRipples.forEach(ripple => {\r\n            // By default, only ripples that are completely visible will fade out on pointer release.\r\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\r\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\r\n                ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\r\n            if (!ripple.config.persistent && isVisible) {\r\n                ripple.fadeOut();\r\n            }\r\n        });\r\n    }\r\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\r\n    _runTimeoutOutsideZone(fn, delay = 0) {\r\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\r\n    }\r\n    /** Registers event listeners for a given list of events. */\r\n    _registerEvents(eventTypes) {\r\n        this._ngZone.runOutsideAngular(() => {\r\n            eventTypes.forEach((type) => {\r\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\r\n            });\r\n        });\r\n    }\r\n    /** Removes previously registered event listeners from the trigger element. */\r\n    _removeTriggerEvents() {\r\n        if (this._triggerElement) {\r\n            pointerDownEvents.forEach((type) => {\r\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\r\n            });\r\n            if (this._pointerUpEventsRegistered) {\r\n                pointerUpEvents.forEach((type) => {\r\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/** Enforces a style recalculation of a DOM element by computing its styles. */\r\nfunction enforceStyleRecalculation(element) {\r\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\r\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\r\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\r\n    window.getComputedStyle(element).getPropertyValue('opacity');\r\n}\r\n/**\r\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\r\n */\r\nfunction distanceToFurthestCorner(x, y, rect) {\r\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\r\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\r\n    return Math.sqrt(distX * distX + distY * distY);\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Injection token that can be used to specify the global ripple options. */\r\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\r\nclass MatRipple {\r\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\r\n        this._elementRef = _elementRef;\r\n        this._animationMode = _animationMode;\r\n        /**\r\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\r\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\r\n         * bounding rectangle.\r\n         */\r\n        this.radius = 0;\r\n        this._disabled = false;\r\n        /** Whether ripple directive is initialized and the input bindings are set. */\r\n        this._isInitialized = false;\r\n        this._globalOptions = globalOptions || {};\r\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\r\n    }\r\n    /**\r\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\r\n     * by using the `launch()` method.\r\n     */\r\n    get disabled() { return this._disabled; }\r\n    set disabled(value) {\r\n        this._disabled = value;\r\n        this._setupTriggerEventsIfEnabled();\r\n    }\r\n    /**\r\n     * The element that triggers the ripple when click events are received.\r\n     * Defaults to the directive's host element.\r\n     */\r\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\r\n    set trigger(trigger) {\r\n        this._trigger = trigger;\r\n        this._setupTriggerEventsIfEnabled();\r\n    }\r\n    ngOnInit() {\r\n        this._isInitialized = true;\r\n        this._setupTriggerEventsIfEnabled();\r\n    }\r\n    ngOnDestroy() {\r\n        this._rippleRenderer._removeTriggerEvents();\r\n    }\r\n    /** Fades out all currently showing ripple elements. */\r\n    fadeOutAll() {\r\n        this._rippleRenderer.fadeOutAll();\r\n    }\r\n    /**\r\n     * Ripple configuration from the directive's input values.\r\n     * @docs-private Implemented as part of RippleTarget\r\n     */\r\n    get rippleConfig() {\r\n        return {\r\n            centered: this.centered,\r\n            radius: this.radius,\r\n            color: this.color,\r\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\r\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\r\n        };\r\n    }\r\n    /**\r\n     * Whether ripples on pointer-down are disabled or not.\r\n     * @docs-private Implemented as part of RippleTarget\r\n     */\r\n    get rippleDisabled() {\r\n        return this.disabled || !!this._globalOptions.disabled;\r\n    }\r\n    /** Sets up the trigger event listeners if ripples are enabled. */\r\n    _setupTriggerEventsIfEnabled() {\r\n        if (!this.disabled && this._isInitialized) {\r\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\r\n        }\r\n    }\r\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\r\n    launch(configOrX, y = 0, config) {\r\n        if (typeof configOrX === 'number') {\r\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\r\n        }\r\n        else {\r\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\r\n        }\r\n    }\r\n}\r\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\r\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\r\nMatRipple.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: NgZone },\r\n    { type: Platform },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\nMatRipple.propDecorators = {\r\n    color: [{ type: Input, args: ['matRippleColor',] }],\r\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\r\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\r\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\r\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\r\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\r\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRipple, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[mat-ripple], [matRipple]',\r\n                exportAs: 'matRipple',\r\n                host: {\r\n                    'class': 'mat-ripple',\r\n                    '[class.mat-ripple-unbounded]': 'unbounded'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\r\n            }] }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, { radius: [{\r\n            type: Input,\r\n            args: ['matRippleRadius']\r\n        }], disabled: [{\r\n            type: Input,\r\n            args: ['matRippleDisabled']\r\n        }], trigger: [{\r\n            type: Input,\r\n            args: ['matRippleTrigger']\r\n        }], color: [{\r\n            type: Input,\r\n            args: ['matRippleColor']\r\n        }], unbounded: [{\r\n            type: Input,\r\n            args: ['matRippleUnbounded']\r\n        }], centered: [{\r\n            type: Input,\r\n            args: ['matRippleCentered']\r\n        }], animation: [{\r\n            type: Input,\r\n            args: ['matRippleAnimation']\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass MatRippleModule {\r\n}\r\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\r\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); }, imports: [[MatCommonModule, PlatformModule], MatCommonModule] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [MatCommonModule, PlatformModule],\r\n                exports: [MatRipple, MatCommonModule],\r\n                declarations: [MatRipple]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\r\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\r\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\r\n * Note that theming is meant to be handled by the parent element, e.g.\r\n * `mat-primary .mat-pseudo-checkbox`.\r\n *\r\n * Note that this component will be completely invisible to screen-reader users. This is *not*\r\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\r\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\r\n * of more complex components that appropriately handle selected / checked state.\r\n * @docs-private\r\n */\r\nclass MatPseudoCheckbox {\r\n    constructor(_animationMode) {\r\n        this._animationMode = _animationMode;\r\n        /** Display state of the checkbox. */\r\n        this.state = 'unchecked';\r\n        /** Whether the checkbox is disabled. */\r\n        this.disabled = false;\r\n    }\r\n}\r\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\r\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\r\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\r\nMatPseudoCheckbox.ctorParameters = () => [\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\r\n];\r\nMatPseudoCheckbox.propDecorators = {\r\n    state: [{ type: Input }],\r\n    disabled: [{ type: Input }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\r\n        type: Component,\r\n        args: [{\r\n                encapsulation: ViewEncapsulation.None,\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                selector: 'mat-pseudo-checkbox',\r\n                template: '',\r\n                host: {\r\n                    'class': 'mat-pseudo-checkbox',\r\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\r\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\r\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\r\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\r\n                },\r\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }]; }, { state: [{\r\n            type: Input\r\n        }], disabled: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass MatPseudoCheckboxModule {\r\n}\r\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\r\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); } });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                exports: [MatPseudoCheckbox],\r\n                declarations: [MatPseudoCheckbox]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// Boilerplate for applying mixins to MatOptgroup.\r\n/** @docs-private */\r\nclass MatOptgroupBase {\r\n}\r\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\r\n// Counter for unique group ids.\r\nlet _uniqueOptgroupIdCounter = 0;\r\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        /** Unique id for the underlying label. */\r\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\r\n    }\r\n}\r\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) { return ɵ_MatOptgroupBase_BaseFactory(t || _MatOptgroupBase); };\r\n_MatOptgroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatOptgroupBase, inputs: { label: \"label\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\n_MatOptgroupBase.propDecorators = {\r\n    label: [{ type: Input }]\r\n};\r\nconst ɵ_MatOptgroupBase_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(_MatOptgroupBase);\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\r\n        type: Directive\r\n    }], null, { label: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\r\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\r\n * retention of the class and its component metadata.\r\n */\r\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\r\n/**\r\n * Component that is used to group instances of `mat-option`.\r\n */\r\nclass MatOptgroup extends _MatOptgroupBase {\r\n}\r\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\r\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\r\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\r\n    } }, inputs: { disabled: \"disabled\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef(_c0);\r\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\r\n        ɵngcc0.ɵɵtext(1);\r\n        ɵngcc0.ɵɵprojection(2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵprojection(3, 1);\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\r\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\r\nconst ɵMatOptgroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'mat-optgroup',\r\n                exportAs: 'matOptgroup',\r\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\r\n                encapsulation: ViewEncapsulation.None,\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                inputs: ['disabled'],\r\n                host: {\r\n                    'class': 'mat-optgroup',\r\n                    'role': 'group',\r\n                    '[class.mat-optgroup-disabled]': 'disabled',\r\n                    '[attr.aria-disabled]': 'disabled.toString()',\r\n                    '[attr.aria-labelledby]': '_labelId'\r\n                },\r\n                providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }],\r\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Option IDs need to be unique across components, so this counter exists outside of\r\n * the component definition.\r\n */\r\nlet _uniqueIdCounter = 0;\r\n/** Event object emitted by MatOption when selected or deselected. */\r\nclass MatOptionSelectionChange {\r\n    constructor(\r\n    /** Reference to the option that emitted the event. */\r\n    source, \r\n    /** Whether the change in the option's value was a result of a user action. */\r\n    isUserInput = false) {\r\n        this.source = source;\r\n        this.isUserInput = isUserInput;\r\n    }\r\n}\r\n/**\r\n * Injection token used to provide the parent component to options.\r\n */\r\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\r\nclass _MatOptionBase {\r\n    constructor(_element, _changeDetectorRef, _parent, group) {\r\n        this._element = _element;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._parent = _parent;\r\n        this.group = group;\r\n        this._selected = false;\r\n        this._active = false;\r\n        this._disabled = false;\r\n        this._mostRecentViewValue = '';\r\n        /** The unique ID of the option. */\r\n        this.id = `mat-option-${_uniqueIdCounter++}`;\r\n        /** Event emitted when the option is selected or deselected. */\r\n        // tslint:disable-next-line:no-output-on-prefix\r\n        this.onSelectionChange = new EventEmitter();\r\n        /** Emits when the state of the option changes and any parents have to be notified. */\r\n        this._stateChanges = new Subject();\r\n    }\r\n    /** Whether the wrapping component is in multiple selection mode. */\r\n    get multiple() { return this._parent && this._parent.multiple; }\r\n    /** Whether or not the option is currently selected. */\r\n    get selected() { return this._selected; }\r\n    /** Whether the option is disabled. */\r\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\r\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\r\n    /** Whether ripples for the option are disabled. */\r\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\r\n    /**\r\n     * Whether or not the option is currently active and ready to be selected.\r\n     * An active option displays styles as if it is focused, but the\r\n     * focus is actually retained somewhere else. This comes in handy\r\n     * for components like autocomplete where focus must remain on the input.\r\n     */\r\n    get active() {\r\n        return this._active;\r\n    }\r\n    /**\r\n     * The displayed value of the option. It is necessary to show the selected option in the\r\n     * select's trigger.\r\n     */\r\n    get viewValue() {\r\n        // TODO(kara): Add input property alternative for node envs.\r\n        return (this._getHostElement().textContent || '').trim();\r\n    }\r\n    /** Selects the option. */\r\n    select() {\r\n        if (!this._selected) {\r\n            this._selected = true;\r\n            this._changeDetectorRef.markForCheck();\r\n            this._emitSelectionChangeEvent();\r\n        }\r\n    }\r\n    /** Deselects the option. */\r\n    deselect() {\r\n        if (this._selected) {\r\n            this._selected = false;\r\n            this._changeDetectorRef.markForCheck();\r\n            this._emitSelectionChangeEvent();\r\n        }\r\n    }\r\n    /** Sets focus onto this option. */\r\n    focus(_origin, options) {\r\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\r\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\r\n        const element = this._getHostElement();\r\n        if (typeof element.focus === 'function') {\r\n            element.focus(options);\r\n        }\r\n    }\r\n    /**\r\n     * This method sets display styles on the option to make it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     */\r\n    setActiveStyles() {\r\n        if (!this._active) {\r\n            this._active = true;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    /**\r\n     * This method removes display styles on the option that made it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     */\r\n    setInactiveStyles() {\r\n        if (this._active) {\r\n            this._active = false;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    /** Gets the label to be used when determining whether the option should be focused. */\r\n    getLabel() {\r\n        return this.viewValue;\r\n    }\r\n    /** Ensures the option is selected when activated from the keyboard. */\r\n    _handleKeydown(event) {\r\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\r\n            this._selectViaInteraction();\r\n            // Prevent the page from scrolling down and form submits.\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    /**\r\n     * `Selects the option while indicating the selection came from the user. Used to\r\n     * determine if the select's view -> model callback should be invoked.`\r\n     */\r\n    _selectViaInteraction() {\r\n        if (!this.disabled) {\r\n            this._selected = this.multiple ? !this._selected : true;\r\n            this._changeDetectorRef.markForCheck();\r\n            this._emitSelectionChangeEvent(true);\r\n        }\r\n    }\r\n    /**\r\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\r\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\r\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\r\n     * information.\r\n     */\r\n    _getAriaSelected() {\r\n        return this.selected || (this.multiple ? false : null);\r\n    }\r\n    /** Returns the correct tabindex for the option depending on disabled state. */\r\n    _getTabIndex() {\r\n        return this.disabled ? '-1' : '0';\r\n    }\r\n    /** Gets the host DOM element. */\r\n    _getHostElement() {\r\n        return this._element.nativeElement;\r\n    }\r\n    ngAfterViewChecked() {\r\n        // Since parent components could be using the option's label to display the selected values\r\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\r\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\r\n        // relatively cheap, however we still limit them only to selected options in order to avoid\r\n        // hitting the DOM too often.\r\n        if (this._selected) {\r\n            const viewValue = this.viewValue;\r\n            if (viewValue !== this._mostRecentViewValue) {\r\n                this._mostRecentViewValue = viewValue;\r\n                this._stateChanges.next();\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._stateChanges.complete();\r\n    }\r\n    /** Emits the selection change event. */\r\n    _emitSelectionChangeEvent(isUserInput = false) {\r\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\r\n    }\r\n}\r\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) { return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase)); };\r\n_MatOptionBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatOptionBase, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" } });\r\n_MatOptionBase.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: undefined },\r\n    { type: _MatOptgroupBase }\r\n];\r\n_MatOptionBase.propDecorators = {\r\n    value: [{ type: Input }],\r\n    id: [{ type: Input }],\r\n    disabled: [{ type: Input }],\r\n    onSelectionChange: [{ type: Output }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\r\n        type: Directive\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, { id: [{\r\n            type: Input\r\n        }], onSelectionChange: [{\r\n            type: Output\r\n        }], disabled: [{\r\n            type: Input\r\n        }], value: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * Single option inside of a `<mat-select>` element.\r\n */\r\nclass MatOption extends _MatOptionBase {\r\n    constructor(element, changeDetectorRef, parent, group) {\r\n        super(element, changeDetectorRef, parent, group);\r\n    }\r\n}\r\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8)); };\r\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\r\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\r\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\r\n    } }, exportAs: [\"matOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\r\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\r\n        ɵngcc0.ɵɵprojection(2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\r\n        ɵngcc0.ɵɵadvance(3);\r\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\r\n    } }, directives: [ɵngcc3.NgIf, MatRipple, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\r\nMatOption.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\r\n    { type: MatOptgroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTGROUP,] }] }\r\n];\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOption, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'mat-option',\r\n                exportAs: 'matOption',\r\n                host: {\r\n                    'role': 'option',\r\n                    '[attr.tabindex]': '_getTabIndex()',\r\n                    '[class.mat-selected]': 'selected',\r\n                    '[class.mat-option-multiple]': 'multiple',\r\n                    '[class.mat-active]': 'active',\r\n                    '[id]': 'id',\r\n                    '[attr.aria-selected]': '_getAriaSelected()',\r\n                    '[attr.aria-disabled]': 'disabled.toString()',\r\n                    '[class.mat-option-disabled]': 'disabled',\r\n                    '(click)': '_selectViaInteraction()',\r\n                    '(keydown)': '_handleKeydown($event)',\r\n                    'class': 'mat-option mat-focus-indicator'\r\n                },\r\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\r\n                encapsulation: ViewEncapsulation.None,\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [MAT_OPTION_PARENT_COMPONENT]\r\n            }] }, { type: MatOptgroup, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [MAT_OPTGROUP]\r\n            }] }]; }, null); })();\r\n/**\r\n * Counts the amount of option group labels that precede the specified option.\r\n * @param optionIndex Index of the option at which to start counting.\r\n * @param options Flat list of all of the options.\r\n * @param optionGroups Flat list of all of the option groups.\r\n * @docs-private\r\n */\r\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\r\n    if (optionGroups.length) {\r\n        let optionsArray = options.toArray();\r\n        let groups = optionGroups.toArray();\r\n        let groupCounter = 0;\r\n        for (let i = 0; i < optionIndex + 1; i++) {\r\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\r\n                groupCounter++;\r\n            }\r\n        }\r\n        return groupCounter;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Determines the position to which to scroll a panel in order for an option to be into view.\r\n * @param optionOffset Offset of the option from the top of the panel.\r\n * @param optionHeight Height of the options.\r\n * @param currentScrollPosition Current scroll position of the panel.\r\n * @param panelHeight Height of the panel.\r\n * @docs-private\r\n */\r\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\r\n    if (optionOffset < currentScrollPosition) {\r\n        return optionOffset;\r\n    }\r\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\r\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\r\n    }\r\n    return currentScrollPosition;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass MatOptionModule {\r\n}\r\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\r\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); }, imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\r\n                exports: [MatOption, MatOptgroup],\r\n                declarations: [MatOption, MatOptgroup]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * InjectionToken that can be used to specify the global label options.\r\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\r\n *     `@angular/material/form-field` instead.\r\n * @breaking-change 11.0.0\r\n */\r\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\r\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\r\n * @docs-private\r\n * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\r\n */\r\nconst JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8, OCT = 9, NOV = 10, DEC = 11;\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0$1 as ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\r\n\r\n//# sourceMappingURL=core.js.map"]},"metadata":{},"sourceType":"module"}