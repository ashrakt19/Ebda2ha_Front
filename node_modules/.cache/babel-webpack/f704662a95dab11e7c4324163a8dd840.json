{"ast":null,"code":"import _defineProperty from \"F:/FCIH/Gp/Ebda2ha-Front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _assertThisInitialized from \"F:/FCIH/Gp/Ebda2ha-Front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createForOfIteratorHelper from \"F:/FCIH/Gp/Ebda2ha-Front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"F:/FCIH/Gp/Ebda2ha-Front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"F:/FCIH/Gp/Ebda2ha-Front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"F:/FCIH/Gp/Ebda2ha-Front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"F:/FCIH/Gp/Ebda2ha-Front/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"F:/FCIH/Gp/Ebda2ha-Front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license Angular v10.1.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { Location, LocationStrategy, ViewportScroller, PlatformLocation, APP_BASE_HREF, HashLocationStrategy, PathLocationStrategy, ɵgetDOM, LOCATION_INITIALIZED } from '@angular/common';\nimport { ɵisObservable, ɵisPromise, NgModuleRef, Component, InjectionToken, NgModuleFactory, ɵConsole, NgZone, isDevMode, Injectable, Type, Injector, NgModuleFactoryLoader, Compiler, Directive, Attribute, Renderer2, ElementRef, Input, HostListener, HostBinding, ChangeDetectorRef, Optional, ContentChildren, EventEmitter, ViewContainerRef, ComponentFactoryResolver, Output, SystemJsNgModuleLoader, NgProbeToken, ANALYZE_FOR_ENTRY_COMPONENTS, SkipSelf, Inject, APP_INITIALIZER, APP_BOOTSTRAP_LISTENER, NgModule, ApplicationRef, Version } from '@angular/core';\nimport { of, from, BehaviorSubject, combineLatest, Observable, EmptyError, defer, EMPTY, Subject } from 'rxjs';\nimport { map, concatAll, last as last$1, switchMap, take, startWith, scan, filter, catchError, concatMap, first, mergeMap, tap, takeLast, finalize, mergeAll } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Base for events the router goes through, as opposed to events tied to a specific\n * route. Fired one time for any given navigation.\n *\n * The following code shows how a class subscribes to router events.\n *\n * ```ts\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.pipe(\n *        filter((e: Event): e is RouterEvent => e instanceof RouterEvent)\n *     ).subscribe((e: RouterEvent) => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * @see `Event`\n * @see [Router events summary](guide/router#router-events)\n * @publicApi\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nvar RouterEvent = function RouterEvent(\n/** A unique ID that the router assigns to every router navigation. */\nid,\n/** The URL that is the destination for this navigation. */\nurl) {\n  _classCallCheck(this, RouterEvent);\n\n  this.id = id;\n  this.url = url;\n};\n/**\n * An event triggered when a navigation starts.\n *\n * @publicApi\n */\n\n\nvar NavigationStart = /*#__PURE__*/function (_RouterEvent) {\n  _inherits(NavigationStart, _RouterEvent);\n\n  var _super = _createSuper(NavigationStart);\n\n  function NavigationStart(\n  /** @docsNotRequired */\n  id,\n  /** @docsNotRequired */\n  url) {\n    var _this;\n\n    var navigationTrigger = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'imperative';\n    var restoredState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    _classCallCheck(this, NavigationStart);\n\n    _this = _super.call(this, id, url);\n    _this.navigationTrigger = navigationTrigger;\n    _this.restoredState = restoredState;\n    return _this;\n  }\n  /** @docsNotRequired */\n\n\n  _createClass(NavigationStart, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"NavigationStart(id: \".concat(this.id, \", url: '\").concat(this.url, \"')\");\n    }\n  }]);\n\n  return NavigationStart;\n}(RouterEvent);\n/**\n * An event triggered when a navigation ends successfully.\n *\n * @see `NavigationStart`\n * @see `NavigationCancel`\n * @see `NavigationError`\n *\n * @publicApi\n */\n\n\nvar NavigationEnd = /*#__PURE__*/function (_RouterEvent2) {\n  _inherits(NavigationEnd, _RouterEvent2);\n\n  var _super2 = _createSuper(NavigationEnd);\n\n  function NavigationEnd(\n  /** @docsNotRequired */\n  id,\n  /** @docsNotRequired */\n  url,\n  /** @docsNotRequired */\n  urlAfterRedirects) {\n    var _this2;\n\n    _classCallCheck(this, NavigationEnd);\n\n    _this2 = _super2.call(this, id, url);\n    _this2.urlAfterRedirects = urlAfterRedirects;\n    return _this2;\n  }\n  /** @docsNotRequired */\n\n\n  _createClass(NavigationEnd, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"NavigationEnd(id: \".concat(this.id, \", url: '\").concat(this.url, \"', urlAfterRedirects: '\").concat(this.urlAfterRedirects, \"')\");\n    }\n  }]);\n\n  return NavigationEnd;\n}(RouterEvent);\n/**\n * An event triggered when a navigation is canceled, directly or indirectly.\n * This can happen when a route guard\n * returns `false` or initiates a redirect by returning a `UrlTree`.\n *\n * @see `NavigationStart`\n * @see `NavigationEnd`\n * @see `NavigationError`\n *\n * @publicApi\n */\n\n\nvar NavigationCancel = /*#__PURE__*/function (_RouterEvent3) {\n  _inherits(NavigationCancel, _RouterEvent3);\n\n  var _super3 = _createSuper(NavigationCancel);\n\n  function NavigationCancel(\n  /** @docsNotRequired */\n  id,\n  /** @docsNotRequired */\n  url,\n  /** @docsNotRequired */\n  reason) {\n    var _this3;\n\n    _classCallCheck(this, NavigationCancel);\n\n    _this3 = _super3.call(this, id, url);\n    _this3.reason = reason;\n    return _this3;\n  }\n  /** @docsNotRequired */\n\n\n  _createClass(NavigationCancel, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"NavigationCancel(id: \".concat(this.id, \", url: '\").concat(this.url, \"')\");\n    }\n  }]);\n\n  return NavigationCancel;\n}(RouterEvent);\n/**\n * An event triggered when a navigation fails due to an unexpected error.\n *\n * @see `NavigationStart`\n * @see `NavigationEnd`\n * @see `NavigationCancel`\n *\n * @publicApi\n */\n\n\nvar NavigationError = /*#__PURE__*/function (_RouterEvent4) {\n  _inherits(NavigationError, _RouterEvent4);\n\n  var _super4 = _createSuper(NavigationError);\n\n  function NavigationError(\n  /** @docsNotRequired */\n  id,\n  /** @docsNotRequired */\n  url,\n  /** @docsNotRequired */\n  error) {\n    var _this4;\n\n    _classCallCheck(this, NavigationError);\n\n    _this4 = _super4.call(this, id, url);\n    _this4.error = error;\n    return _this4;\n  }\n  /** @docsNotRequired */\n\n\n  _createClass(NavigationError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"NavigationError(id: \".concat(this.id, \", url: '\").concat(this.url, \"', error: \").concat(this.error, \")\");\n    }\n  }]);\n\n  return NavigationError;\n}(RouterEvent);\n/**\n * An event triggered when routes are recognized.\n *\n * @publicApi\n */\n\n\nvar RoutesRecognized = /*#__PURE__*/function (_RouterEvent5) {\n  _inherits(RoutesRecognized, _RouterEvent5);\n\n  var _super5 = _createSuper(RoutesRecognized);\n\n  function RoutesRecognized(\n  /** @docsNotRequired */\n  id,\n  /** @docsNotRequired */\n  url,\n  /** @docsNotRequired */\n  urlAfterRedirects,\n  /** @docsNotRequired */\n  state) {\n    var _this5;\n\n    _classCallCheck(this, RoutesRecognized);\n\n    _this5 = _super5.call(this, id, url);\n    _this5.urlAfterRedirects = urlAfterRedirects;\n    _this5.state = state;\n    return _this5;\n  }\n  /** @docsNotRequired */\n\n\n  _createClass(RoutesRecognized, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"RoutesRecognized(id: \".concat(this.id, \", url: '\").concat(this.url, \"', urlAfterRedirects: '\").concat(this.urlAfterRedirects, \"', state: \").concat(this.state, \")\");\n    }\n  }]);\n\n  return RoutesRecognized;\n}(RouterEvent);\n/**\n * An event triggered at the start of the Guard phase of routing.\n *\n * @see `GuardsCheckEnd`\n *\n * @publicApi\n */\n\n\nvar GuardsCheckStart = /*#__PURE__*/function (_RouterEvent6) {\n  _inherits(GuardsCheckStart, _RouterEvent6);\n\n  var _super6 = _createSuper(GuardsCheckStart);\n\n  function GuardsCheckStart(\n  /** @docsNotRequired */\n  id,\n  /** @docsNotRequired */\n  url,\n  /** @docsNotRequired */\n  urlAfterRedirects,\n  /** @docsNotRequired */\n  state) {\n    var _this6;\n\n    _classCallCheck(this, GuardsCheckStart);\n\n    _this6 = _super6.call(this, id, url);\n    _this6.urlAfterRedirects = urlAfterRedirects;\n    _this6.state = state;\n    return _this6;\n  }\n\n  _createClass(GuardsCheckStart, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"GuardsCheckStart(id: \".concat(this.id, \", url: '\").concat(this.url, \"', urlAfterRedirects: '\").concat(this.urlAfterRedirects, \"', state: \").concat(this.state, \")\");\n    }\n  }]);\n\n  return GuardsCheckStart;\n}(RouterEvent);\n/**\n * An event triggered at the end of the Guard phase of routing.\n *\n * @see `GuardsCheckStart`\n *\n * @publicApi\n */\n\n\nvar GuardsCheckEnd = /*#__PURE__*/function (_RouterEvent7) {\n  _inherits(GuardsCheckEnd, _RouterEvent7);\n\n  var _super7 = _createSuper(GuardsCheckEnd);\n\n  function GuardsCheckEnd(\n  /** @docsNotRequired */\n  id,\n  /** @docsNotRequired */\n  url,\n  /** @docsNotRequired */\n  urlAfterRedirects,\n  /** @docsNotRequired */\n  state,\n  /** @docsNotRequired */\n  shouldActivate) {\n    var _this7;\n\n    _classCallCheck(this, GuardsCheckEnd);\n\n    _this7 = _super7.call(this, id, url);\n    _this7.urlAfterRedirects = urlAfterRedirects;\n    _this7.state = state;\n    _this7.shouldActivate = shouldActivate;\n    return _this7;\n  }\n\n  _createClass(GuardsCheckEnd, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"GuardsCheckEnd(id: \".concat(this.id, \", url: '\").concat(this.url, \"', urlAfterRedirects: '\").concat(this.urlAfterRedirects, \"', state: \").concat(this.state, \", shouldActivate: \").concat(this.shouldActivate, \")\");\n    }\n  }]);\n\n  return GuardsCheckEnd;\n}(RouterEvent);\n/**\n * An event triggered at the the start of the Resolve phase of routing.\n *\n * Runs in the \"resolve\" phase whether or not there is anything to resolve.\n * In future, may change to only run when there are things to be resolved.\n *\n * @see `ResolveEnd`\n *\n * @publicApi\n */\n\n\nvar ResolveStart = /*#__PURE__*/function (_RouterEvent8) {\n  _inherits(ResolveStart, _RouterEvent8);\n\n  var _super8 = _createSuper(ResolveStart);\n\n  function ResolveStart(\n  /** @docsNotRequired */\n  id,\n  /** @docsNotRequired */\n  url,\n  /** @docsNotRequired */\n  urlAfterRedirects,\n  /** @docsNotRequired */\n  state) {\n    var _this8;\n\n    _classCallCheck(this, ResolveStart);\n\n    _this8 = _super8.call(this, id, url);\n    _this8.urlAfterRedirects = urlAfterRedirects;\n    _this8.state = state;\n    return _this8;\n  }\n\n  _createClass(ResolveStart, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"ResolveStart(id: \".concat(this.id, \", url: '\").concat(this.url, \"', urlAfterRedirects: '\").concat(this.urlAfterRedirects, \"', state: \").concat(this.state, \")\");\n    }\n  }]);\n\n  return ResolveStart;\n}(RouterEvent);\n/**\n * An event triggered at the end of the Resolve phase of routing.\n * @see `ResolveStart`.\n *\n * @publicApi\n */\n\n\nvar ResolveEnd = /*#__PURE__*/function (_RouterEvent9) {\n  _inherits(ResolveEnd, _RouterEvent9);\n\n  var _super9 = _createSuper(ResolveEnd);\n\n  function ResolveEnd(\n  /** @docsNotRequired */\n  id,\n  /** @docsNotRequired */\n  url,\n  /** @docsNotRequired */\n  urlAfterRedirects,\n  /** @docsNotRequired */\n  state) {\n    var _this9;\n\n    _classCallCheck(this, ResolveEnd);\n\n    _this9 = _super9.call(this, id, url);\n    _this9.urlAfterRedirects = urlAfterRedirects;\n    _this9.state = state;\n    return _this9;\n  }\n\n  _createClass(ResolveEnd, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"ResolveEnd(id: \".concat(this.id, \", url: '\").concat(this.url, \"', urlAfterRedirects: '\").concat(this.urlAfterRedirects, \"', state: \").concat(this.state, \")\");\n    }\n  }]);\n\n  return ResolveEnd;\n}(RouterEvent);\n/**\n * An event triggered before lazy loading a route configuration.\n *\n * @see `RouteConfigLoadEnd`\n *\n * @publicApi\n */\n\n\nvar RouteConfigLoadStart = /*#__PURE__*/function () {\n  function RouteConfigLoadStart(\n  /** @docsNotRequired */\n  route) {\n    _classCallCheck(this, RouteConfigLoadStart);\n\n    this.route = route;\n  }\n\n  _createClass(RouteConfigLoadStart, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"RouteConfigLoadStart(path: \".concat(this.route.path, \")\");\n    }\n  }]);\n\n  return RouteConfigLoadStart;\n}();\n/**\n * An event triggered when a route has been lazy loaded.\n *\n * @see `RouteConfigLoadStart`\n *\n * @publicApi\n */\n\n\nvar RouteConfigLoadEnd = /*#__PURE__*/function () {\n  function RouteConfigLoadEnd(\n  /** @docsNotRequired */\n  route) {\n    _classCallCheck(this, RouteConfigLoadEnd);\n\n    this.route = route;\n  }\n\n  _createClass(RouteConfigLoadEnd, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"RouteConfigLoadEnd(path: \".concat(this.route.path, \")\");\n    }\n  }]);\n\n  return RouteConfigLoadEnd;\n}();\n/**\n * An event triggered at the start of the child-activation\n * part of the Resolve phase of routing.\n * @see  `ChildActivationEnd`\n * @see `ResolveStart`\n *\n * @publicApi\n */\n\n\nvar ChildActivationStart = /*#__PURE__*/function () {\n  function ChildActivationStart(\n  /** @docsNotRequired */\n  snapshot) {\n    _classCallCheck(this, ChildActivationStart);\n\n    this.snapshot = snapshot;\n  }\n\n  _createClass(ChildActivationStart, [{\n    key: \"toString\",\n    value: function toString() {\n      var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n      return \"ChildActivationStart(path: '\".concat(path, \"')\");\n    }\n  }]);\n\n  return ChildActivationStart;\n}();\n/**\n * An event triggered at the end of the child-activation part\n * of the Resolve phase of routing.\n * @see `ChildActivationStart`\n * @see `ResolveStart`\n * @publicApi\n */\n\n\nvar ChildActivationEnd = /*#__PURE__*/function () {\n  function ChildActivationEnd(\n  /** @docsNotRequired */\n  snapshot) {\n    _classCallCheck(this, ChildActivationEnd);\n\n    this.snapshot = snapshot;\n  }\n\n  _createClass(ChildActivationEnd, [{\n    key: \"toString\",\n    value: function toString() {\n      var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n      return \"ChildActivationEnd(path: '\".concat(path, \"')\");\n    }\n  }]);\n\n  return ChildActivationEnd;\n}();\n/**\n * An event triggered at the start of the activation part\n * of the Resolve phase of routing.\n * @see `ActivationEnd`\n * @see `ResolveStart`\n *\n * @publicApi\n */\n\n\nvar ActivationStart = /*#__PURE__*/function () {\n  function ActivationStart(\n  /** @docsNotRequired */\n  snapshot) {\n    _classCallCheck(this, ActivationStart);\n\n    this.snapshot = snapshot;\n  }\n\n  _createClass(ActivationStart, [{\n    key: \"toString\",\n    value: function toString() {\n      var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n      return \"ActivationStart(path: '\".concat(path, \"')\");\n    }\n  }]);\n\n  return ActivationStart;\n}();\n/**\n * An event triggered at the end of the activation part\n * of the Resolve phase of routing.\n * @see `ActivationStart`\n * @see `ResolveStart`\n *\n * @publicApi\n */\n\n\nvar ActivationEnd = /*#__PURE__*/function () {\n  function ActivationEnd(\n  /** @docsNotRequired */\n  snapshot) {\n    _classCallCheck(this, ActivationEnd);\n\n    this.snapshot = snapshot;\n  }\n\n  _createClass(ActivationEnd, [{\n    key: \"toString\",\n    value: function toString() {\n      var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n      return \"ActivationEnd(path: '\".concat(path, \"')\");\n    }\n  }]);\n\n  return ActivationEnd;\n}();\n/**\n * An event triggered by scrolling.\n *\n * @publicApi\n */\n\n\nvar Scroll = /*#__PURE__*/function () {\n  function Scroll(\n  /** @docsNotRequired */\n  routerEvent,\n  /** @docsNotRequired */\n  position,\n  /** @docsNotRequired */\n  anchor) {\n    _classCallCheck(this, Scroll);\n\n    this.routerEvent = routerEvent;\n    this.position = position;\n    this.anchor = anchor;\n  }\n\n  _createClass(Scroll, [{\n    key: \"toString\",\n    value: function toString() {\n      var pos = this.position ? \"\".concat(this.position[0], \", \").concat(this.position[1]) : null;\n      return \"Scroll(anchor: '\".concat(this.anchor, \"', position: '\").concat(pos, \"')\");\n    }\n  }]);\n\n  return Scroll;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The primary routing outlet.\n *\n * @publicApi\n */\n\n\nvar PRIMARY_OUTLET = 'primary';\n\nvar ParamsAsMap = /*#__PURE__*/function () {\n  function ParamsAsMap(params) {\n    _classCallCheck(this, ParamsAsMap);\n\n    this.params = params || {};\n  }\n\n  _createClass(ParamsAsMap, [{\n    key: \"has\",\n    value: function has(name) {\n      return Object.prototype.hasOwnProperty.call(this.params, name);\n    }\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      if (this.has(name)) {\n        var v = this.params[name];\n        return Array.isArray(v) ? v[0] : v;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll(name) {\n      if (this.has(name)) {\n        var v = this.params[name];\n        return Array.isArray(v) ? v : [v];\n      }\n\n      return [];\n    }\n  }, {\n    key: \"keys\",\n    get: function get() {\n      return Object.keys(this.params);\n    }\n  }]);\n\n  return ParamsAsMap;\n}();\n/**\n * Converts a `Params` instance to a `ParamMap`.\n * @param params The instance to convert.\n * @returns The new map instance.\n *\n * @publicApi\n */\n\n\nfunction convertToParamMap(params) {\n  return new ParamsAsMap(params);\n}\n\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n\nfunction navigationCancelingError(message) {\n  var error = Error('NavigationCancelingError: ' + message);\n  error[NAVIGATION_CANCELING_ERROR] = true;\n  return error;\n}\n\nfunction isNavigationCancelingError(error) {\n  return error && error[NAVIGATION_CANCELING_ERROR];\n} // Matches the route configuration (`route`) against the actual URL (`segments`).\n\n\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n  var parts = route.path.split('/');\n\n  if (parts.length > segments.length) {\n    // The actual URL is shorter than the config, no match\n    return null;\n  }\n\n  if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || parts.length < segments.length)) {\n    // The config is longer than the actual URL but we are looking for a full match, return null\n    return null;\n  }\n\n  var posParams = {}; // Check each config part against the actual URL\n\n  for (var index = 0; index < parts.length; index++) {\n    var part = parts[index];\n    var segment = segments[index];\n    var isParameter = part.startsWith(':');\n\n    if (isParameter) {\n      posParams[part.substring(1)] = segment;\n    } else if (part !== segment.path) {\n      // The actual URL part does not match the config, no match\n      return null;\n    }\n  }\n\n  return {\n    consumed: segments.slice(0, parts.length),\n    posParams: posParams\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction shallowEqualArrays(a, b) {\n  if (a.length !== b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (!shallowEqual(a[i], b[i])) return false;\n  }\n\n  return true;\n}\n\nfunction shallowEqual(a, b) {\n  // Casting Object.keys return values to include `undefined` as there are some cases\n  // in IE 11 where this can happen. Cannot provide a test because the behavior only\n  // exists in certain circumstances in IE 11, therefore doing this cast ensures the\n  // logic is correct for when this edge case is hit.\n  var k1 = Object.keys(a);\n  var k2 = Object.keys(b);\n\n  if (!k1 || !k2 || k1.length != k2.length) {\n    return false;\n  }\n\n  var key;\n\n  for (var i = 0; i < k1.length; i++) {\n    key = k1[i];\n\n    if (!equalArraysOrString(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Test equality for arrays of strings or a string.\n */\n\n\nfunction equalArraysOrString(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false;\n\n    var aSorted = _toConsumableArray(a).sort();\n\n    var bSorted = _toConsumableArray(b).sort();\n\n    return aSorted.every(function (val, index) {\n      return bSorted[index] === val;\n    });\n  } else {\n    return a === b;\n  }\n}\n/**\n * Flattens single-level nested arrays.\n */\n\n\nfunction flatten(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n */\n\n\nfunction last(a) {\n  return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n */\n\n\nfunction and(bools) {\n  return !bools.some(function (v) {\n    return !v;\n  });\n}\n\nfunction forEach(map, callback) {\n  for (var prop in map) {\n    if (map.hasOwnProperty(prop)) {\n      callback(map[prop], prop);\n    }\n  }\n}\n\nfunction waitForMap(obj, fn) {\n  if (Object.keys(obj).length === 0) {\n    return of({});\n  }\n\n  var waitHead = [];\n  var waitTail = [];\n  var res = {};\n  forEach(obj, function (a, k) {\n    var mapped = fn(k, a).pipe(map(function (r) {\n      return res[k] = r;\n    }));\n\n    if (k === PRIMARY_OUTLET) {\n      waitHead.push(mapped);\n    } else {\n      waitTail.push(mapped);\n    }\n  }); // Closure compiler has problem with using spread operator here. So we use \"Array.concat\".\n  // Note that we also need to cast the new promise because TypeScript cannot infer the type\n  // when calling the \"of\" function through \"Function.apply\"\n\n  return of.apply(null, waitHead.concat(waitTail)).pipe(concatAll(), last$1(), map(function () {\n    return res;\n  }));\n}\n\nfunction wrapIntoObservable(value) {\n  if (ɵisObservable(value)) {\n    return value;\n  }\n\n  if (ɵisPromise(value)) {\n    // Use `Promise.resolve()` to wrap promise-like instances.\n    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n    // change detection.\n    return from(Promise.resolve(value));\n  }\n\n  return of(value);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction createEmptyUrlTree() {\n  return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n\nfunction containsTree(container, containee, exact) {\n  if (exact) {\n    return equalQueryParams(container.queryParams, containee.queryParams) && equalSegmentGroups(container.root, containee.root);\n  }\n\n  return containsQueryParams(container.queryParams, containee.queryParams) && containsSegmentGroup(container.root, containee.root);\n}\n\nfunction equalQueryParams(container, containee) {\n  // TODO: This does not handle array params correctly.\n  return shallowEqual(container, containee);\n}\n\nfunction equalSegmentGroups(container, containee) {\n  if (!equalPath(container.segments, containee.segments)) return false;\n  if (container.numberOfChildren !== containee.numberOfChildren) return false;\n\n  for (var c in containee.children) {\n    if (!container.children[c]) return false;\n    if (!equalSegmentGroups(container.children[c], containee.children[c])) return false;\n  }\n\n  return true;\n}\n\nfunction containsQueryParams(container, containee) {\n  return Object.keys(containee).length <= Object.keys(container).length && Object.keys(containee).every(function (key) {\n    return equalArraysOrString(container[key], containee[key]);\n  });\n}\n\nfunction containsSegmentGroup(container, containee) {\n  return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n  if (container.segments.length > containeePaths.length) {\n    var current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) return false;\n    if (containee.hasChildren()) return false;\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) return false;\n\n    for (var c in containee.children) {\n      if (!container.children[c]) return false;\n      if (!containsSegmentGroup(container.children[c], containee.children[c])) return false;\n    }\n\n    return true;\n  } else {\n    var _current = containeePaths.slice(0, container.segments.length);\n\n    var next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, _current)) return false;\n    if (!container.children[PRIMARY_OUTLET]) return false;\n    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n  }\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * @publicApi\n */\n\n\nvar UrlTree = /*#__PURE__*/function () {\n  /** @internal */\n  function UrlTree(\n  /** The root segment group of the URL tree */\n  root,\n  /** The query params of the URL */\n  queryParams,\n  /** The fragment of the URL */\n  fragment) {\n    _classCallCheck(this, UrlTree);\n\n    this.root = root;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n  }\n\n  _createClass(UrlTree, [{\n    key: \"queryParamMap\",\n    get: function get() {\n      if (!this._queryParamMap) {\n        this._queryParamMap = convertToParamMap(this.queryParams);\n      }\n\n      return this._queryParamMap;\n    }\n    /** @docsNotRequired */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return DEFAULT_SERIALIZER.serialize(this);\n    }\n  }]);\n\n  return UrlTree;\n}();\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n * @publicApi\n */\n\n\nvar UrlSegmentGroup = /*#__PURE__*/function () {\n  function UrlSegmentGroup(\n  /** The URL segments of this group. See `UrlSegment` for more information */\n  segments,\n  /** The list of children of this group */\n  children) {\n    var _this10 = this;\n\n    _classCallCheck(this, UrlSegmentGroup);\n\n    this.segments = segments;\n    this.children = children;\n    /** The parent node in the url tree */\n\n    this.parent = null;\n    forEach(children, function (v, k) {\n      return v.parent = _this10;\n    });\n  }\n  /** Whether the segment has child segments */\n\n\n  _createClass(UrlSegmentGroup, [{\n    key: \"hasChildren\",\n    value: function hasChildren() {\n      return this.numberOfChildren > 0;\n    }\n    /** Number of child segments */\n\n  }, {\n    key: \"numberOfChildren\",\n    get: function get() {\n      return Object.keys(this.children).length;\n    }\n    /** @docsNotRequired */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return serializePaths(this);\n    }\n  }]);\n\n  return UrlSegmentGroup;\n}();\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * @publicApi\n */\n\n\nvar UrlSegment = /*#__PURE__*/function () {\n  function UrlSegment(\n  /** The path part of a URL segment */\n  path,\n  /** The matrix parameters associated with a segment */\n  parameters) {\n    _classCallCheck(this, UrlSegment);\n\n    this.path = path;\n    this.parameters = parameters;\n  }\n\n  _createClass(UrlSegment, [{\n    key: \"parameterMap\",\n    get: function get() {\n      if (!this._parameterMap) {\n        this._parameterMap = convertToParamMap(this.parameters);\n      }\n\n      return this._parameterMap;\n    }\n    /** @docsNotRequired */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return serializePath(this);\n    }\n  }]);\n\n  return UrlSegment;\n}();\n\nfunction equalSegments(as, bs) {\n  return equalPath(as, bs) && as.every(function (a, i) {\n    return shallowEqual(a.parameters, bs[i].parameters);\n  });\n}\n\nfunction equalPath(as, bs) {\n  if (as.length !== bs.length) return false;\n  return as.every(function (a, i) {\n    return a.path === bs[i].path;\n  });\n}\n\nfunction mapChildrenIntoArray(segment, fn) {\n  var res = [];\n  forEach(segment.children, function (child, childOutlet) {\n    if (childOutlet === PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  forEach(segment.children, function (child, childOutlet) {\n    if (childOutlet !== PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n * @publicApi\n */\n\n\nvar UrlSerializer = function UrlSerializer() {\n  _classCallCheck(this, UrlSerializer);\n};\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * @publicApi\n */\n\n\nvar DefaultUrlSerializer = /*#__PURE__*/function () {\n  function DefaultUrlSerializer() {\n    _classCallCheck(this, DefaultUrlSerializer);\n  }\n\n  _createClass(DefaultUrlSerializer, [{\n    key: \"parse\",\n    value:\n    /** Parses a url into a `UrlTree` */\n    function parse(url) {\n      var p = new UrlParser(url);\n      return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    }\n    /** Converts a `UrlTree` into a url */\n\n  }, {\n    key: \"serialize\",\n    value: function serialize(tree) {\n      var segment = \"/\".concat(serializeSegment(tree.root, true));\n      var query = serializeQueryParams(tree.queryParams);\n      var fragment = typeof tree.fragment === \"string\" ? \"#\".concat(encodeUriFragment(tree.fragment)) : '';\n      return \"\".concat(segment).concat(query).concat(fragment);\n    }\n  }]);\n\n  return DefaultUrlSerializer;\n}();\n\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n\nfunction serializePaths(segment) {\n  return segment.segments.map(function (p) {\n    return serializePath(p);\n  }).join('/');\n}\n\nfunction serializeSegment(segment, root) {\n  if (!segment.hasChildren()) {\n    return serializePaths(segment);\n  }\n\n  if (root) {\n    var primary = segment.children[PRIMARY_OUTLET] ? serializeSegment(segment.children[PRIMARY_OUTLET], false) : '';\n    var children = [];\n    forEach(segment.children, function (v, k) {\n      if (k !== PRIMARY_OUTLET) {\n        children.push(\"\".concat(k, \":\").concat(serializeSegment(v, false)));\n      }\n    });\n    return children.length > 0 ? \"\".concat(primary, \"(\").concat(children.join('//'), \")\") : primary;\n  } else {\n    var _children = mapChildrenIntoArray(segment, function (v, k) {\n      if (k === PRIMARY_OUTLET) {\n        return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n      }\n\n      return [\"\".concat(k, \":\").concat(serializeSegment(v, false))];\n    }); // use no parenthesis if the only child is a primary outlet route\n\n\n    if (Object.keys(segment.children).length === 1 && segment.children[PRIMARY_OUTLET] != null) {\n      return \"\".concat(serializePaths(segment), \"/\").concat(_children[0]);\n    }\n\n    return \"\".concat(serializePaths(segment), \"/(\").concat(_children.join('//'), \")\");\n  }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\n\n\nfunction encodeUriString(s) {\n  return encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\n\n\nfunction encodeUriQuery(s) {\n  return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\n\n\nfunction encodeUriFragment(s) {\n  return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\n\n\nfunction encodeUriSegment(s) {\n  return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\n\nfunction decode(s) {\n  return decodeURIComponent(s);\n} // Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\n\n\nfunction decodeQuery(s) {\n  return decode(s.replace(/\\+/g, '%20'));\n}\n\nfunction serializePath(path) {\n  return \"\".concat(encodeUriSegment(path.path)).concat(serializeMatrixParams(path.parameters));\n}\n\nfunction serializeMatrixParams(params) {\n  return Object.keys(params).map(function (key) {\n    return \";\".concat(encodeUriSegment(key), \"=\").concat(encodeUriSegment(params[key]));\n  }).join('');\n}\n\nfunction serializeQueryParams(params) {\n  var strParams = Object.keys(params).map(function (name) {\n    var value = params[name];\n    return Array.isArray(value) ? value.map(function (v) {\n      return \"\".concat(encodeUriQuery(name), \"=\").concat(encodeUriQuery(v));\n    }).join('&') : \"\".concat(encodeUriQuery(name), \"=\").concat(encodeUriQuery(value));\n  });\n  return strParams.length ? \"?\".concat(strParams.join('&')) : '';\n}\n\nvar SEGMENT_RE = /^[^\\/()?;=#]+/;\n\nfunction matchSegments(str) {\n  var match = str.match(SEGMENT_RE);\n  return match ? match[0] : '';\n}\n\nvar QUERY_PARAM_RE = /^[^=?&#]+/; // Return the name of the query param at the start of the string or an empty string\n\nfunction matchQueryParams(str) {\n  var match = str.match(QUERY_PARAM_RE);\n  return match ? match[0] : '';\n}\n\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/; // Return the value of the query param at the start of the string or an empty string\n\nfunction matchUrlQueryParamValue(str) {\n  var match = str.match(QUERY_PARAM_VALUE_RE);\n  return match ? match[0] : '';\n}\n\nvar UrlParser = /*#__PURE__*/function () {\n  function UrlParser(url) {\n    _classCallCheck(this, UrlParser);\n\n    this.url = url;\n    this.remaining = url;\n  }\n\n  _createClass(UrlParser, [{\n    key: \"parseRootSegment\",\n    value: function parseRootSegment() {\n      this.consumeOptional('/');\n\n      if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n        return new UrlSegmentGroup([], {});\n      } // The root segment group never has segments\n\n\n      return new UrlSegmentGroup([], this.parseChildren());\n    }\n  }, {\n    key: \"parseQueryParams\",\n    value: function parseQueryParams() {\n      var params = {};\n\n      if (this.consumeOptional('?')) {\n        do {\n          this.parseQueryParam(params);\n        } while (this.consumeOptional('&'));\n      }\n\n      return params;\n    }\n  }, {\n    key: \"parseFragment\",\n    value: function parseFragment() {\n      return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    }\n  }, {\n    key: \"parseChildren\",\n    value: function parseChildren() {\n      if (this.remaining === '') {\n        return {};\n      }\n\n      this.consumeOptional('/');\n      var segments = [];\n\n      if (!this.peekStartsWith('(')) {\n        segments.push(this.parseSegment());\n      }\n\n      while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n        this.capture('/');\n        segments.push(this.parseSegment());\n      }\n\n      var children = {};\n\n      if (this.peekStartsWith('/(')) {\n        this.capture('/');\n        children = this.parseParens(true);\n      }\n\n      var res = {};\n\n      if (this.peekStartsWith('(')) {\n        res = this.parseParens(false);\n      }\n\n      if (segments.length > 0 || Object.keys(children).length > 0) {\n        res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n      }\n\n      return res;\n    } // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n\n  }, {\n    key: \"parseSegment\",\n    value: function parseSegment() {\n      var path = matchSegments(this.remaining);\n\n      if (path === '' && this.peekStartsWith(';')) {\n        throw new Error(\"Empty path url segment cannot have parameters: '\".concat(this.remaining, \"'.\"));\n      }\n\n      this.capture(path);\n      return new UrlSegment(decode(path), this.parseMatrixParams());\n    }\n  }, {\n    key: \"parseMatrixParams\",\n    value: function parseMatrixParams() {\n      var params = {};\n\n      while (this.consumeOptional(';')) {\n        this.parseParam(params);\n      }\n\n      return params;\n    }\n  }, {\n    key: \"parseParam\",\n    value: function parseParam(params) {\n      var key = matchSegments(this.remaining);\n\n      if (!key) {\n        return;\n      }\n\n      this.capture(key);\n      var value = '';\n\n      if (this.consumeOptional('=')) {\n        var valueMatch = matchSegments(this.remaining);\n\n        if (valueMatch) {\n          value = valueMatch;\n          this.capture(value);\n        }\n      }\n\n      params[decode(key)] = decode(value);\n    } // Parse a single query parameter `name[=value]`\n\n  }, {\n    key: \"parseQueryParam\",\n    value: function parseQueryParam(params) {\n      var key = matchQueryParams(this.remaining);\n\n      if (!key) {\n        return;\n      }\n\n      this.capture(key);\n      var value = '';\n\n      if (this.consumeOptional('=')) {\n        var valueMatch = matchUrlQueryParamValue(this.remaining);\n\n        if (valueMatch) {\n          value = valueMatch;\n          this.capture(value);\n        }\n      }\n\n      var decodedKey = decodeQuery(key);\n      var decodedVal = decodeQuery(value);\n\n      if (params.hasOwnProperty(decodedKey)) {\n        // Append to existing values\n        var currentVal = params[decodedKey];\n\n        if (!Array.isArray(currentVal)) {\n          currentVal = [currentVal];\n          params[decodedKey] = currentVal;\n        }\n\n        currentVal.push(decodedVal);\n      } else {\n        // Create a new value\n        params[decodedKey] = decodedVal;\n      }\n    } // parse `(a/b//outlet_name:c/d)`\n\n  }, {\n    key: \"parseParens\",\n    value: function parseParens(allowPrimary) {\n      var segments = {};\n      this.capture('(');\n\n      while (!this.consumeOptional(')') && this.remaining.length > 0) {\n        var path = matchSegments(this.remaining);\n        var next = this.remaining[path.length]; // if is is not one of these characters, then the segment was unescaped\n        // or the group was not closed\n\n        if (next !== '/' && next !== ')' && next !== ';') {\n          throw new Error(\"Cannot parse url '\".concat(this.url, \"'\"));\n        }\n\n        var outletName = undefined;\n\n        if (path.indexOf(':') > -1) {\n          outletName = path.substr(0, path.indexOf(':'));\n          this.capture(outletName);\n          this.capture(':');\n        } else if (allowPrimary) {\n          outletName = PRIMARY_OUTLET;\n        }\n\n        var children = this.parseChildren();\n        segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] : new UrlSegmentGroup([], children);\n        this.consumeOptional('//');\n      }\n\n      return segments;\n    }\n  }, {\n    key: \"peekStartsWith\",\n    value: function peekStartsWith(str) {\n      return this.remaining.startsWith(str);\n    } // Consumes the prefix when it is present and returns whether it has been consumed\n\n  }, {\n    key: \"consumeOptional\",\n    value: function consumeOptional(str) {\n      if (this.peekStartsWith(str)) {\n        this.remaining = this.remaining.substring(str.length);\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"capture\",\n    value: function capture(str) {\n      if (!this.consumeOptional(str)) {\n        throw new Error(\"Expected \\\"\".concat(str, \"\\\".\"));\n      }\n    }\n  }]);\n\n  return UrlParser;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar Tree = /*#__PURE__*/function () {\n  function Tree(root) {\n    _classCallCheck(this, Tree);\n\n    this._root = root;\n  }\n\n  _createClass(Tree, [{\n    key: \"root\",\n    get: function get() {\n      return this._root.value;\n    }\n    /**\n     * @internal\n     */\n\n  }, {\n    key: \"parent\",\n    value: function parent(t) {\n      var p = this.pathFromRoot(t);\n      return p.length > 1 ? p[p.length - 2] : null;\n    }\n    /**\n     * @internal\n     */\n\n  }, {\n    key: \"children\",\n    value: function children(t) {\n      var n = findNode(t, this._root);\n      return n ? n.children.map(function (t) {\n        return t.value;\n      }) : [];\n    }\n    /**\n     * @internal\n     */\n\n  }, {\n    key: \"firstChild\",\n    value: function firstChild(t) {\n      var n = findNode(t, this._root);\n      return n && n.children.length > 0 ? n.children[0].value : null;\n    }\n    /**\n     * @internal\n     */\n\n  }, {\n    key: \"siblings\",\n    value: function siblings(t) {\n      var p = findPath(t, this._root);\n      if (p.length < 2) return [];\n      var c = p[p.length - 2].children.map(function (c) {\n        return c.value;\n      });\n      return c.filter(function (cc) {\n        return cc !== t;\n      });\n    }\n    /**\n     * @internal\n     */\n\n  }, {\n    key: \"pathFromRoot\",\n    value: function pathFromRoot(t) {\n      return findPath(t, this._root).map(function (s) {\n        return s.value;\n      });\n    }\n  }]);\n\n  return Tree;\n}(); // DFS for the node matching the value\n\n\nfunction findNode(value, node) {\n  if (value === node.value) return node;\n\n  var _iterator = _createForOfIteratorHelper(node.children),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var child = _step.value;\n\n      var _node = findNode(value, child);\n\n      if (_node) return _node;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return null;\n} // Return the path to the node with the given value using DFS\n\n\nfunction findPath(value, node) {\n  if (value === node.value) return [node];\n\n  var _iterator2 = _createForOfIteratorHelper(node.children),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var child = _step2.value;\n      var path = findPath(value, child);\n\n      if (path.length) {\n        path.unshift(node);\n        return path;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return [];\n}\n\nvar TreeNode = /*#__PURE__*/function () {\n  function TreeNode(value, children) {\n    _classCallCheck(this, TreeNode);\n\n    this.value = value;\n    this.children = children;\n  }\n\n  _createClass(TreeNode, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"TreeNode(\".concat(this.value, \")\");\n    }\n  }]);\n\n  return TreeNode;\n}(); // Return the list of T indexed by outlet name\n\n\nfunction nodeChildrenAsMap(node) {\n  var map = {};\n\n  if (node) {\n    node.children.forEach(function (child) {\n      return map[child.value.outlet] = child;\n    });\n  }\n\n  return map;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Represents the state of the router as a tree of activated routes.\n *\n * @usageNotes\n *\n * Every node in the route tree is an `ActivatedRoute` instance\n * that knows about the \"consumed\" URL segments, the extracted parameters,\n * and the resolved data.\n * Use the `ActivatedRoute` properties to traverse the tree from any node.\n *\n * The following fragment shows how a component gets the root node\n * of the current state to establish its own route tree:\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @see `ActivatedRoute`\n * @see [Getting route information](guide/router#getting-route-information)\n *\n * @publicApi\n */\n\n\nvar RouterState = /*#__PURE__*/function (_Tree) {\n  _inherits(RouterState, _Tree);\n\n  var _super10 = _createSuper(RouterState);\n\n  /** @internal */\n  function RouterState(root,\n  /** The current snapshot of the router state */\n  snapshot) {\n    var _this11;\n\n    _classCallCheck(this, RouterState);\n\n    _this11 = _super10.call(this, root);\n    _this11.snapshot = snapshot;\n    setRouterState(_assertThisInitialized(_this11), root);\n    return _this11;\n  }\n\n  _createClass(RouterState, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.snapshot.toString();\n    }\n  }]);\n\n  return RouterState;\n}(Tree);\n\nfunction createEmptyState(urlTree, rootComponent) {\n  var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n  var emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n  var emptyParams = new BehaviorSubject({});\n  var emptyData = new BehaviorSubject({});\n  var emptyQueryParams = new BehaviorSubject({});\n  var fragment = new BehaviorSubject('');\n  var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n  activated.snapshot = snapshot.root;\n  return new RouterState(new TreeNode(activated, []), snapshot);\n}\n\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n  var emptyParams = {};\n  var emptyData = {};\n  var emptyQueryParams = {};\n  var fragment = '';\n  var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n  return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * Provides access to information about a route associated with a component\n * that is loaded in an outlet.\n * Use to traverse the `RouterState` tree and extract information from nodes.\n *\n * The following example shows how to construct a component using information from a\n * currently activated route.\n *\n * {@example router/activated-route/module.ts region=\"activated-route\"\n *     header=\"activated-route.component.ts\"}\n *\n * @see [Getting route information](guide/router#getting-route-information)\n *\n * @publicApi\n */\n\n\nvar ActivatedRoute = /*#__PURE__*/function () {\n  /** @internal */\n  function ActivatedRoute(\n  /** An observable of the URL segments matched by this route. */\n  url,\n  /** An observable of the matrix parameters scoped to this route. */\n  params,\n  /** An observable of the query parameters shared by all the routes. */\n  queryParams,\n  /** An observable of the URL fragment shared by all the routes. */\n  fragment,\n  /** An observable of the static and resolved data of this route. */\n  data,\n  /** The outlet name of the route, a constant. */\n  outlet,\n  /** The component of the route, a constant. */\n  // TODO(vsavkin): remove |string\n  component, futureSnapshot) {\n    _classCallCheck(this, ActivatedRoute);\n\n    this.url = url;\n    this.params = params;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    this.data = data;\n    this.outlet = outlet;\n    this.component = component;\n    this._futureSnapshot = futureSnapshot;\n  }\n  /** The configuration used to match this route. */\n\n\n  _createClass(ActivatedRoute, [{\n    key: \"routeConfig\",\n    get: function get() {\n      return this._futureSnapshot.routeConfig;\n    }\n    /** The root of the router state. */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this._routerState.root;\n    }\n    /** The parent of this route in the router state tree. */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this._routerState.parent(this);\n    }\n    /** The first child of this route in the router state tree. */\n\n  }, {\n    key: \"firstChild\",\n    get: function get() {\n      return this._routerState.firstChild(this);\n    }\n    /** The children of this route in the router state tree. */\n\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this._routerState.children(this);\n    }\n    /** The path from the root of the router state tree to this route. */\n\n  }, {\n    key: \"pathFromRoot\",\n    get: function get() {\n      return this._routerState.pathFromRoot(this);\n    }\n    /**\n     * An Observable that contains a map of the required and optional parameters\n     * specific to the route.\n     * The map supports retrieving single and multiple values from the same parameter.\n     */\n\n  }, {\n    key: \"paramMap\",\n    get: function get() {\n      if (!this._paramMap) {\n        this._paramMap = this.params.pipe(map(function (p) {\n          return convertToParamMap(p);\n        }));\n      }\n\n      return this._paramMap;\n    }\n    /**\n     * An Observable that contains a map of the query parameters available to all routes.\n     * The map supports retrieving single and multiple values from the query parameter.\n     */\n\n  }, {\n    key: \"queryParamMap\",\n    get: function get() {\n      if (!this._queryParamMap) {\n        this._queryParamMap = this.queryParams.pipe(map(function (p) {\n          return convertToParamMap(p);\n        }));\n      }\n\n      return this._queryParamMap;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.snapshot ? this.snapshot.toString() : \"Future(\".concat(this._futureSnapshot, \")\");\n    }\n  }]);\n\n  return ActivatedRoute;\n}();\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * @internal\n */\n\n\nfunction inheritedParamsDataResolve(route) {\n  var paramsInheritanceStrategy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'emptyOnly';\n  var pathFromRoot = route.pathFromRoot;\n  var inheritingStartingFrom = 0;\n\n  if (paramsInheritanceStrategy !== 'always') {\n    inheritingStartingFrom = pathFromRoot.length - 1;\n\n    while (inheritingStartingFrom >= 1) {\n      var current = pathFromRoot[inheritingStartingFrom];\n      var parent = pathFromRoot[inheritingStartingFrom - 1]; // current route is an empty path => inherits its parent's params and data\n\n      if (current.routeConfig && current.routeConfig.path === '') {\n        inheritingStartingFrom--; // parent is componentless => current route should inherit its params and data\n      } else if (!parent.component) {\n        inheritingStartingFrom--;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/** @internal */\n\n\nfunction flattenInherited(pathFromRoot) {\n  return pathFromRoot.reduce(function (res, curr) {\n    var params = Object.assign(Object.assign({}, res.params), curr.params);\n    var data = Object.assign(Object.assign({}, res.data), curr.data);\n    var resolve = Object.assign(Object.assign({}, res.resolve), curr._resolvedData);\n    return {\n      params: params,\n      data: data,\n      resolve: resolve\n    };\n  }, {\n    params: {},\n    data: {},\n    resolve: {}\n  });\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * The following example initializes a component with route information extracted\n * from the snapshot of the root node at the time of creation.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * @publicApi\n */\n\n\nvar ActivatedRouteSnapshot = /*#__PURE__*/function () {\n  /** @internal */\n  function ActivatedRouteSnapshot(\n  /** The URL segments matched by this route */\n  url,\n  /** The matrix parameters scoped to this route */\n  params,\n  /** The query parameters shared by all the routes */\n  queryParams,\n  /** The URL fragment shared by all the routes */\n  fragment,\n  /** The static and resolved data of this route */\n  data,\n  /** The outlet name of the route */\n  outlet,\n  /** The component of the route */\n  component, routeConfig, urlSegment, lastPathIndex, resolve) {\n    _classCallCheck(this, ActivatedRouteSnapshot);\n\n    this.url = url;\n    this.params = params;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    this.data = data;\n    this.outlet = outlet;\n    this.component = component;\n    this.routeConfig = routeConfig;\n    this._urlSegment = urlSegment;\n    this._lastPathIndex = lastPathIndex;\n    this._resolve = resolve;\n  }\n  /** The root of the router state */\n\n\n  _createClass(ActivatedRouteSnapshot, [{\n    key: \"root\",\n    get: function get() {\n      return this._routerState.root;\n    }\n    /** The parent of this route in the router state tree */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this._routerState.parent(this);\n    }\n    /** The first child of this route in the router state tree */\n\n  }, {\n    key: \"firstChild\",\n    get: function get() {\n      return this._routerState.firstChild(this);\n    }\n    /** The children of this route in the router state tree */\n\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this._routerState.children(this);\n    }\n    /** The path from the root of the router state tree to this route */\n\n  }, {\n    key: \"pathFromRoot\",\n    get: function get() {\n      return this._routerState.pathFromRoot(this);\n    }\n  }, {\n    key: \"paramMap\",\n    get: function get() {\n      if (!this._paramMap) {\n        this._paramMap = convertToParamMap(this.params);\n      }\n\n      return this._paramMap;\n    }\n  }, {\n    key: \"queryParamMap\",\n    get: function get() {\n      if (!this._queryParamMap) {\n        this._queryParamMap = convertToParamMap(this.queryParams);\n      }\n\n      return this._queryParamMap;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var url = this.url.map(function (segment) {\n        return segment.toString();\n      }).join('/');\n      var matched = this.routeConfig ? this.routeConfig.path : '';\n      return \"Route(url:'\".concat(url, \"', path:'\").concat(matched, \"')\");\n    }\n  }]);\n\n  return ActivatedRouteSnapshot;\n}();\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * The following example shows how a component is initialized with information\n * from the snapshot of the root node's state at the time of creation.\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @publicApi\n */\n\n\nvar RouterStateSnapshot = /*#__PURE__*/function (_Tree2) {\n  _inherits(RouterStateSnapshot, _Tree2);\n\n  var _super11 = _createSuper(RouterStateSnapshot);\n\n  /** @internal */\n  function RouterStateSnapshot(\n  /** The url from which this snapshot was created */\n  url, root) {\n    var _this12;\n\n    _classCallCheck(this, RouterStateSnapshot);\n\n    _this12 = _super11.call(this, root);\n    _this12.url = url;\n    setRouterState(_assertThisInitialized(_this12), root);\n    return _this12;\n  }\n\n  _createClass(RouterStateSnapshot, [{\n    key: \"toString\",\n    value: function toString() {\n      return serializeNode(this._root);\n    }\n  }]);\n\n  return RouterStateSnapshot;\n}(Tree);\n\nfunction setRouterState(state, node) {\n  node.value._routerState = state;\n  node.children.forEach(function (c) {\n    return setRouterState(state, c);\n  });\n}\n\nfunction serializeNode(node) {\n  var c = node.children.length > 0 ? \" { \".concat(node.children.map(serializeNode).join(', '), \" } \") : '';\n  return \"\".concat(node.value).concat(c);\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\n\n\nfunction advanceActivatedRoute(route) {\n  if (route.snapshot) {\n    var currentSnapshot = route.snapshot;\n    var nextSnapshot = route._futureSnapshot;\n    route.snapshot = nextSnapshot;\n\n    if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n      route.queryParams.next(nextSnapshot.queryParams);\n    }\n\n    if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n      route.fragment.next(nextSnapshot.fragment);\n    }\n\n    if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n      route.params.next(nextSnapshot.params);\n    }\n\n    if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n      route.url.next(nextSnapshot.url);\n    }\n\n    if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n      route.data.next(nextSnapshot.data);\n    }\n  } else {\n    route.snapshot = route._futureSnapshot; // this is for resolved data\n\n    route.data.next(route._futureSnapshot.data);\n  }\n}\n\nfunction equalParamsAndUrlSegments(a, b) {\n  var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n  var parentsMismatch = !a.parent !== !b.parent;\n  return equalUrlParams && !parentsMismatch && (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n  var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n  return new RouterState(root, curr);\n}\n\nfunction createNode(routeReuseStrategy, curr, prevState) {\n  // reuse an activated route that is currently displayed on the screen\n  if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n    var value = prevState.value;\n    value._futureSnapshot = curr.value;\n    var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n    return new TreeNode(value, children); // retrieve an activated route that is used to be displayed, but is not currently displayed\n  } else {\n    var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n\n    if (detachedRouteHandle) {\n      var _tree = detachedRouteHandle.route;\n      setFutureSnapshotsOfActivatedRoutes(curr, _tree);\n      return _tree;\n    } else {\n      var _value = createActivatedRoute(curr.value);\n\n      var _children2 = curr.children.map(function (c) {\n        return createNode(routeReuseStrategy, c);\n      });\n\n      return new TreeNode(_value, _children2);\n    }\n  }\n}\n\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n  if (curr.value.routeConfig !== result.value.routeConfig) {\n    throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n  }\n\n  if (curr.children.length !== result.children.length) {\n    throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n  }\n\n  result.value._futureSnapshot = curr.value;\n\n  for (var i = 0; i < curr.children.length; ++i) {\n    setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n  }\n}\n\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n  return curr.children.map(function (child) {\n    var _iterator3 = _createForOfIteratorHelper(prevState.children),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var p = _step3.value;\n\n        if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n          return createNode(routeReuseStrategy, child, p);\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    return createNode(routeReuseStrategy, child);\n  });\n}\n\nfunction createActivatedRoute(c) {\n  return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction _createUrlTree(route, urlTree, commands, queryParams, fragment) {\n  if (commands.length === 0) {\n    return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n  }\n\n  var nav = computeNavigation(commands);\n\n  if (nav.toRoot()) {\n    return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n  }\n\n  var startingPosition = findStartingPosition(nav, urlTree, route);\n  var segmentGroup = startingPosition.processChildren ? updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) : updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n  return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n\nfunction isMatrixParams(command) {\n  return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n  var qp = {};\n\n  if (queryParams) {\n    forEach(queryParams, function (value, name) {\n      qp[name] = Array.isArray(value) ? value.map(function (v) {\n        return \"\".concat(v);\n      }) : \"\".concat(value);\n    });\n  }\n\n  if (urlTree.root === oldSegmentGroup) {\n    return new UrlTree(newSegmentGroup, qp, fragment);\n  }\n\n  return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n\nfunction replaceSegment(current, oldSegment, newSegment) {\n  var children = {};\n  forEach(current.children, function (c, outletName) {\n    if (c === oldSegment) {\n      children[outletName] = newSegment;\n    } else {\n      children[outletName] = replaceSegment(c, oldSegment, newSegment);\n    }\n  });\n  return new UrlSegmentGroup(current.segments, children);\n}\n\nvar Navigation = /*#__PURE__*/function () {\n  function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n    _classCallCheck(this, Navigation);\n\n    this.isAbsolute = isAbsolute;\n    this.numberOfDoubleDots = numberOfDoubleDots;\n    this.commands = commands;\n\n    if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n      throw new Error('Root segment cannot have matrix parameters');\n    }\n\n    var cmdWithOutlet = commands.find(function (c) {\n      return typeof c === 'object' && c != null && c.outlets;\n    });\n\n    if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n      throw new Error('{outlets:{}} has to be the last command');\n    }\n  }\n\n  _createClass(Navigation, [{\n    key: \"toRoot\",\n    value: function toRoot() {\n      return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    }\n  }]);\n\n  return Navigation;\n}();\n/** Transforms commands to a normalized `Navigation` */\n\n\nfunction computeNavigation(commands) {\n  if (typeof commands[0] === 'string' && commands.length === 1 && commands[0] === '/') {\n    return new Navigation(true, 0, commands);\n  }\n\n  var numberOfDoubleDots = 0;\n  var isAbsolute = false;\n  var res = commands.reduce(function (res, cmd, cmdIdx) {\n    if (typeof cmd === 'object' && cmd != null) {\n      if (cmd.outlets) {\n        var outlets = {};\n        forEach(cmd.outlets, function (commands, name) {\n          outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n        });\n        return [].concat(_toConsumableArray(res), [{\n          outlets: outlets\n        }]);\n      }\n\n      if (cmd.segmentPath) {\n        return [].concat(_toConsumableArray(res), [cmd.segmentPath]);\n      }\n    }\n\n    if (!(typeof cmd === 'string')) {\n      return [].concat(_toConsumableArray(res), [cmd]);\n    }\n\n    if (cmdIdx === 0) {\n      cmd.split('/').forEach(function (urlPart, partIndex) {\n        if (partIndex == 0 && urlPart === '.') {// skip './a'\n        } else if (partIndex == 0 && urlPart === '') {\n          //  '/a'\n          isAbsolute = true;\n        } else if (urlPart === '..') {\n          //  '../a'\n          numberOfDoubleDots++;\n        } else if (urlPart != '') {\n          res.push(urlPart);\n        }\n      });\n      return res;\n    }\n\n    return [].concat(_toConsumableArray(res), [cmd]);\n  }, []);\n  return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\n\nvar Position = function Position(segmentGroup, processChildren, index) {\n  _classCallCheck(this, Position);\n\n  this.segmentGroup = segmentGroup;\n  this.processChildren = processChildren;\n  this.index = index;\n};\n\nfunction findStartingPosition(nav, tree, route) {\n  if (nav.isAbsolute) {\n    return new Position(tree.root, true, 0);\n  }\n\n  if (route.snapshot._lastPathIndex === -1) {\n    var segmentGroup = route.snapshot._urlSegment; // Pathless ActivatedRoute has _lastPathIndex === -1 but should not process children\n    // see issue #26224, #13011, #35687\n    // However, if the ActivatedRoute is the root we should process children like above.\n\n    var processChildren = segmentGroup === tree.root;\n    return new Position(segmentGroup, processChildren, 0);\n  }\n\n  var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n  var index = route.snapshot._lastPathIndex + modifier;\n  return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n  var g = group;\n  var ci = index;\n  var dd = numberOfDoubleDots;\n\n  while (dd > ci) {\n    dd -= ci;\n    g = g.parent;\n\n    if (!g) {\n      throw new Error('Invalid number of \\'../\\'');\n    }\n\n    ci = g.segments.length;\n  }\n\n  return new Position(g, false, ci - dd);\n}\n\nfunction getPath(command) {\n  if (typeof command === 'object' && command != null && command.outlets) {\n    return command.outlets[PRIMARY_OUTLET];\n  }\n\n  return \"\".concat(command);\n}\n\nfunction getOutlets(commands) {\n  if (typeof commands[0] === 'object' && commands[0] !== null && commands[0].outlets) {\n    return commands[0].outlets;\n  }\n\n  return _defineProperty({}, PRIMARY_OUTLET, commands);\n}\n\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n  if (!segmentGroup) {\n    segmentGroup = new UrlSegmentGroup([], {});\n  }\n\n  if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n    return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n  }\n\n  var m = prefixedWith(segmentGroup, startIndex, commands);\n  var slicedCommands = commands.slice(m.commandIndex);\n\n  if (m.match && m.pathIndex < segmentGroup.segments.length) {\n    var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n    g.children[PRIMARY_OUTLET] = new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n    return updateSegmentGroupChildren(g, 0, slicedCommands);\n  } else if (m.match && slicedCommands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else if (m.match && !segmentGroup.hasChildren()) {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  } else if (m.match) {\n    return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n  } else {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  }\n}\n\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n  if (commands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else {\n    var outlets = getOutlets(commands);\n    var children = {};\n    forEach(outlets, function (commands, outlet) {\n      if (commands !== null) {\n        children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n      }\n    });\n    forEach(segmentGroup.children, function (child, childOutlet) {\n      if (outlets[childOutlet] === undefined) {\n        children[childOutlet] = child;\n      }\n    });\n    return new UrlSegmentGroup(segmentGroup.segments, children);\n  }\n}\n\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n  var currentCommandIndex = 0;\n  var currentPathIndex = startIndex;\n  var noMatch = {\n    match: false,\n    pathIndex: 0,\n    commandIndex: 0\n  };\n\n  while (currentPathIndex < segmentGroup.segments.length) {\n    if (currentCommandIndex >= commands.length) return noMatch;\n    var path = segmentGroup.segments[currentPathIndex];\n    var curr = getPath(commands[currentCommandIndex]);\n    var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n    if (currentPathIndex > 0 && curr === undefined) break;\n\n    if (curr && next && typeof next === 'object' && next.outlets === undefined) {\n      if (!compare(curr, next, path)) return noMatch;\n      currentCommandIndex += 2;\n    } else {\n      if (!compare(curr, {}, path)) return noMatch;\n      currentCommandIndex++;\n    }\n\n    currentPathIndex++;\n  }\n\n  return {\n    match: true,\n    pathIndex: currentPathIndex,\n    commandIndex: currentCommandIndex\n  };\n}\n\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n  var paths = segmentGroup.segments.slice(0, startIndex);\n  var i = 0;\n\n  while (i < commands.length) {\n    if (typeof commands[i] === 'object' && commands[i] !== null && commands[i].outlets !== undefined) {\n      var children = createNewSegmentChildren(commands[i].outlets);\n      return new UrlSegmentGroup(paths, children);\n    } // if we start with an object literal, we need to reuse the path part from the segment\n\n\n    if (i === 0 && isMatrixParams(commands[0])) {\n      var p = segmentGroup.segments[startIndex];\n      paths.push(new UrlSegment(p.path, commands[0]));\n      i++;\n      continue;\n    }\n\n    var curr = getPath(commands[i]);\n    var next = i < commands.length - 1 ? commands[i + 1] : null;\n\n    if (curr && next && isMatrixParams(next)) {\n      paths.push(new UrlSegment(curr, stringify(next)));\n      i += 2;\n    } else {\n      paths.push(new UrlSegment(curr, {}));\n      i++;\n    }\n  }\n\n  return new UrlSegmentGroup(paths, {});\n}\n\nfunction createNewSegmentChildren(outlets) {\n  var children = {};\n  forEach(outlets, function (commands, outlet) {\n    if (commands !== null) {\n      children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n    }\n  });\n  return children;\n}\n\nfunction stringify(params) {\n  var res = {};\n  forEach(params, function (v, k) {\n    return res[k] = \"\".concat(v);\n  });\n  return res;\n}\n\nfunction compare(path, params, segment) {\n  return path == segment.path && shallowEqual(params, segment.parameters);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar activateRoutes = function activateRoutes(rootContexts, routeReuseStrategy, forwardEvent) {\n  return map(function (t) {\n    new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent).activate(rootContexts);\n    return t;\n  });\n};\n\nvar ActivateRoutes = /*#__PURE__*/function () {\n  function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n    _classCallCheck(this, ActivateRoutes);\n\n    this.routeReuseStrategy = routeReuseStrategy;\n    this.futureState = futureState;\n    this.currState = currState;\n    this.forwardEvent = forwardEvent;\n  }\n\n  _createClass(ActivateRoutes, [{\n    key: \"activate\",\n    value: function activate(parentContexts) {\n      var futureRoot = this.futureState._root;\n      var currRoot = this.currState ? this.currState._root : null;\n      this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n      advanceActivatedRoute(this.futureState.root);\n      this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    } // De-activate the child route that are not re-used for the future state\n\n  }, {\n    key: \"deactivateChildRoutes\",\n    value: function deactivateChildRoutes(futureNode, currNode, contexts) {\n      var _this13 = this;\n\n      var children = nodeChildrenAsMap(currNode); // Recurse on the routes active in the future state to de-activate deeper children\n\n      futureNode.children.forEach(function (futureChild) {\n        var childOutletName = futureChild.value.outlet;\n\n        _this13.deactivateRoutes(futureChild, children[childOutletName], contexts);\n\n        delete children[childOutletName];\n      }); // De-activate the routes that will not be re-used\n\n      forEach(children, function (v, childName) {\n        _this13.deactivateRouteAndItsChildren(v, contexts);\n      });\n    }\n  }, {\n    key: \"deactivateRoutes\",\n    value: function deactivateRoutes(futureNode, currNode, parentContext) {\n      var future = futureNode.value;\n      var curr = currNode ? currNode.value : null;\n\n      if (future === curr) {\n        // Reusing the node, check to see if the children need to be de-activated\n        if (future.component) {\n          // If we have a normal route, we need to go through an outlet.\n          var context = parentContext.getContext(future.outlet);\n\n          if (context) {\n            this.deactivateChildRoutes(futureNode, currNode, context.children);\n          }\n        } else {\n          // if we have a componentless route, we recurse but keep the same outlet map.\n          this.deactivateChildRoutes(futureNode, currNode, parentContext);\n        }\n      } else {\n        if (curr) {\n          // Deactivate the current route which will not be re-used\n          this.deactivateRouteAndItsChildren(currNode, parentContext);\n        }\n      }\n    }\n  }, {\n    key: \"deactivateRouteAndItsChildren\",\n    value: function deactivateRouteAndItsChildren(route, parentContexts) {\n      if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n        this.detachAndStoreRouteSubtree(route, parentContexts);\n      } else {\n        this.deactivateRouteAndOutlet(route, parentContexts);\n      }\n    }\n  }, {\n    key: \"detachAndStoreRouteSubtree\",\n    value: function detachAndStoreRouteSubtree(route, parentContexts) {\n      var context = parentContexts.getContext(route.value.outlet);\n\n      if (context && context.outlet) {\n        var componentRef = context.outlet.detach();\n        var contexts = context.children.onOutletDeactivated();\n        this.routeReuseStrategy.store(route.value.snapshot, {\n          componentRef: componentRef,\n          route: route,\n          contexts: contexts\n        });\n      }\n    }\n  }, {\n    key: \"deactivateRouteAndOutlet\",\n    value: function deactivateRouteAndOutlet(route, parentContexts) {\n      var _this14 = this;\n\n      var context = parentContexts.getContext(route.value.outlet);\n\n      if (context) {\n        var children = nodeChildrenAsMap(route);\n        var contexts = route.value.component ? context.children : parentContexts;\n        forEach(children, function (v, k) {\n          return _this14.deactivateRouteAndItsChildren(v, contexts);\n        });\n\n        if (context.outlet) {\n          // Destroy the component\n          context.outlet.deactivate(); // Destroy the contexts for all the outlets that were in the component\n\n          context.children.onOutletDeactivated();\n        }\n      }\n    }\n  }, {\n    key: \"activateChildRoutes\",\n    value: function activateChildRoutes(futureNode, currNode, contexts) {\n      var _this15 = this;\n\n      var children = nodeChildrenAsMap(currNode);\n      futureNode.children.forEach(function (c) {\n        _this15.activateRoutes(c, children[c.value.outlet], contexts);\n\n        _this15.forwardEvent(new ActivationEnd(c.value.snapshot));\n      });\n\n      if (futureNode.children.length) {\n        this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n      }\n    }\n  }, {\n    key: \"activateRoutes\",\n    value: function activateRoutes(futureNode, currNode, parentContexts) {\n      var future = futureNode.value;\n      var curr = currNode ? currNode.value : null;\n      advanceActivatedRoute(future); // reusing the node\n\n      if (future === curr) {\n        if (future.component) {\n          // If we have a normal route, we need to go through an outlet.\n          var context = parentContexts.getOrCreateContext(future.outlet);\n          this.activateChildRoutes(futureNode, currNode, context.children);\n        } else {\n          // if we have a componentless route, we recurse but keep the same outlet map.\n          this.activateChildRoutes(futureNode, currNode, parentContexts);\n        }\n      } else {\n        if (future.component) {\n          // if we have a normal route, we need to place the component into the outlet and recurse.\n          var _context = parentContexts.getOrCreateContext(future.outlet);\n\n          if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n            var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n            this.routeReuseStrategy.store(future.snapshot, null);\n\n            _context.children.onOutletReAttached(stored.contexts);\n\n            _context.attachRef = stored.componentRef;\n            _context.route = stored.route.value;\n\n            if (_context.outlet) {\n              // Attach right away when the outlet has already been instantiated\n              // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n              _context.outlet.attach(stored.componentRef, stored.route.value);\n            }\n\n            advanceActivatedRouteNodeAndItsChildren(stored.route);\n          } else {\n            var config = parentLoadedConfig(future.snapshot);\n            var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n            _context.attachRef = null;\n            _context.route = future;\n            _context.resolver = cmpFactoryResolver;\n\n            if (_context.outlet) {\n              // Activate the outlet when it has already been instantiated\n              // Otherwise it will get activated from its `ngOnInit` when instantiated\n              _context.outlet.activateWith(future, cmpFactoryResolver);\n            }\n\n            this.activateChildRoutes(futureNode, null, _context.children);\n          }\n        } else {\n          // if we have a componentless route, we recurse but keep the same outlet map.\n          this.activateChildRoutes(futureNode, null, parentContexts);\n        }\n      }\n    }\n  }]);\n\n  return ActivateRoutes;\n}();\n\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n  advanceActivatedRoute(node.value);\n  node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n\nfunction parentLoadedConfig(snapshot) {\n  for (var s = snapshot.parent; s; s = s.parent) {\n    var route = s.routeConfig;\n    if (route && route._loadedConfig) return route._loadedConfig;\n    if (route && route.component) return null;\n  }\n\n  return null;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar LoadedRouterConfig = function LoadedRouterConfig(routes, module) {\n  _classCallCheck(this, LoadedRouterConfig);\n\n  this.routes = routes;\n  this.module = module;\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Simple function check, but generic so type inference will flow. Example:\n *\n * function product(a: number, b: number) {\n *   return a * b;\n * }\n *\n * if (isFunction<product>(fn)) {\n *   return fn(1, 2);\n * } else {\n *   throw \"Must provide the `product` function\";\n * }\n */\n\n\nfunction isFunction(v) {\n  return typeof v === 'function';\n}\n\nfunction isBoolean(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isUrlTree(v) {\n  return v instanceof UrlTree;\n}\n\nfunction isCanLoad(guard) {\n  return guard && isFunction(guard.canLoad);\n}\n\nfunction isCanActivate(guard) {\n  return guard && isFunction(guard.canActivate);\n}\n\nfunction isCanActivateChild(guard) {\n  return guard && isFunction(guard.canActivateChild);\n}\n\nfunction isCanDeactivate(guard) {\n  return guard && isFunction(guard.canDeactivate);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar INITIAL_VALUE = Symbol('INITIAL_VALUE');\n\nfunction prioritizedGuardValue() {\n  return switchMap(function (obs) {\n    return combineLatest.apply(void 0, _toConsumableArray(obs.map(function (o) {\n      return o.pipe(take(1), startWith(INITIAL_VALUE));\n    }))).pipe(scan(function (acc, list) {\n      var isPending = false;\n      return list.reduce(function (innerAcc, val, i) {\n        if (innerAcc !== INITIAL_VALUE) return innerAcc; // Toggle pending flag if any values haven't been set yet\n\n        if (val === INITIAL_VALUE) isPending = true; // Any other return values are only valid if we haven't yet hit a pending\n        // call. This guarantees that in the case of a guard at the bottom of the\n        // tree that returns a redirect, we will wait for the higher priority\n        // guard at the top to finish before performing the redirect.\n\n        if (!isPending) {\n          // Early return when we hit a `false` value as that should always\n          // cancel navigation\n          if (val === false) return val;\n\n          if (i === list.length - 1 || isUrlTree(val)) {\n            return val;\n          }\n        }\n\n        return innerAcc;\n      }, acc);\n    }, INITIAL_VALUE), filter(function (item) {\n      return item !== INITIAL_VALUE;\n    }), map(function (item) {\n      return isUrlTree(item) ? item : item === true;\n    }), //\n    take(1));\n  });\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar NoMatch = function NoMatch(segmentGroup) {\n  _classCallCheck(this, NoMatch);\n\n  this.segmentGroup = segmentGroup || null;\n};\n\nvar AbsoluteRedirect = function AbsoluteRedirect(urlTree) {\n  _classCallCheck(this, AbsoluteRedirect);\n\n  this.urlTree = urlTree;\n};\n\nfunction noMatch(segmentGroup) {\n  return new Observable(function (obs) {\n    return obs.error(new NoMatch(segmentGroup));\n  });\n}\n\nfunction absoluteRedirect(newTree) {\n  return new Observable(function (obs) {\n    return obs.error(new AbsoluteRedirect(newTree));\n  });\n}\n\nfunction namedOutletsRedirect(redirectTo) {\n  return new Observable(function (obs) {\n    return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\".concat(redirectTo, \"'\")));\n  });\n}\n\nfunction canLoadFails(route) {\n  return new Observable(function (obs) {\n    return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\".concat(route.path, \"'\\\" returned false\")));\n  });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n */\n\n\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n  return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\n\nvar ApplyRedirects = /*#__PURE__*/function () {\n  function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    _classCallCheck(this, ApplyRedirects);\n\n    this.configLoader = configLoader;\n    this.urlSerializer = urlSerializer;\n    this.urlTree = urlTree;\n    this.config = config;\n    this.allowRedirects = true;\n    this.ngModule = moduleInjector.get(NgModuleRef);\n  }\n\n  _createClass(ApplyRedirects, [{\n    key: \"apply\",\n    value: function apply() {\n      var _this16 = this;\n\n      var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n      var urlTrees$ = expanded$.pipe(map(function (rootSegmentGroup) {\n        return _this16.createUrlTree(rootSegmentGroup, _this16.urlTree.queryParams, _this16.urlTree.fragment);\n      }));\n      return urlTrees$.pipe(catchError(function (e) {\n        if (e instanceof AbsoluteRedirect) {\n          // after an absolute redirect we do not apply any more redirects!\n          _this16.allowRedirects = false; // we need to run matching, so we can fetch all lazy-loaded modules\n\n          return _this16.match(e.urlTree);\n        }\n\n        if (e instanceof NoMatch) {\n          throw _this16.noMatchError(e);\n        }\n\n        throw e;\n      }));\n    }\n  }, {\n    key: \"match\",\n    value: function match(tree) {\n      var _this17 = this;\n\n      var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n      var mapped$ = expanded$.pipe(map(function (rootSegmentGroup) {\n        return _this17.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n      }));\n      return mapped$.pipe(catchError(function (e) {\n        if (e instanceof NoMatch) {\n          throw _this17.noMatchError(e);\n        }\n\n        throw e;\n      }));\n    }\n  }, {\n    key: \"noMatchError\",\n    value: function noMatchError(e) {\n      return new Error(\"Cannot match any routes. URL Segment: '\".concat(e.segmentGroup, \"'\"));\n    }\n  }, {\n    key: \"createUrlTree\",\n    value: function createUrlTree(rootCandidate, queryParams, fragment) {\n      var root = rootCandidate.segments.length > 0 ? new UrlSegmentGroup([], _defineProperty({}, PRIMARY_OUTLET, rootCandidate)) : rootCandidate;\n      return new UrlTree(root, queryParams, fragment);\n    }\n  }, {\n    key: \"expandSegmentGroup\",\n    value: function expandSegmentGroup(ngModule, routes, segmentGroup, outlet) {\n      if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return this.expandChildren(ngModule, routes, segmentGroup).pipe(map(function (children) {\n          return new UrlSegmentGroup([], children);\n        }));\n      }\n\n      return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    } // Recursively expand segment groups for all the child outlets\n\n  }, {\n    key: \"expandChildren\",\n    value: function expandChildren(ngModule, routes, segmentGroup) {\n      var _this18 = this;\n\n      return waitForMap(segmentGroup.children, function (childOutlet, child) {\n        return _this18.expandSegmentGroup(ngModule, routes, child, childOutlet);\n      });\n    }\n  }, {\n    key: \"expandSegment\",\n    value: function expandSegment(ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n      var _this19 = this;\n\n      return of.apply(void 0, _toConsumableArray(routes)).pipe(concatMap(function (r) {\n        var expanded$ = _this19.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n\n        return expanded$.pipe(catchError(function (e) {\n          if (e instanceof NoMatch) {\n            // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n            // talk to Jason\n            return of(null);\n          }\n\n          throw e;\n        }));\n      }), first(function (s) {\n        return !!s;\n      }), catchError(function (e, _) {\n        if (e instanceof EmptyError || e.name === 'EmptyError') {\n          if (_this19.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return of(new UrlSegmentGroup([], {}));\n          }\n\n          throw new NoMatch(segmentGroup);\n        }\n\n        throw e;\n      }));\n    }\n  }, {\n    key: \"noLeftoversInUrl\",\n    value: function noLeftoversInUrl(segmentGroup, segments, outlet) {\n      return segments.length === 0 && !segmentGroup.children[outlet];\n    }\n  }, {\n    key: \"expandSegmentAgainstRoute\",\n    value: function expandSegmentAgainstRoute(ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n      if (getOutlet(route) !== outlet) {\n        return noMatch(segmentGroup);\n      }\n\n      if (route.redirectTo === undefined) {\n        return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n      }\n\n      if (allowRedirects && this.allowRedirects) {\n        return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n      }\n\n      return noMatch(segmentGroup);\n    }\n  }, {\n    key: \"expandSegmentAgainstRouteUsingRedirect\",\n    value: function expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {\n      if (route.path === '**') {\n        return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n      }\n\n      return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    }\n  }, {\n    key: \"expandWildCardWithParamsAgainstRouteUsingRedirect\",\n    value: function expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet) {\n      var _this20 = this;\n\n      var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n\n      if (route.redirectTo.startsWith('/')) {\n        return absoluteRedirect(newTree);\n      }\n\n      return this.lineralizeSegments(route, newTree).pipe(mergeMap(function (newSegments) {\n        var group = new UrlSegmentGroup(newSegments, {});\n        return _this20.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n      }));\n    }\n  }, {\n    key: \"expandRegularSegmentAgainstRouteUsingRedirect\",\n    value: function expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {\n      var _this21 = this;\n\n      var _match = match(segmentGroup, route, segments),\n          matched = _match.matched,\n          consumedSegments = _match.consumedSegments,\n          lastChild = _match.lastChild,\n          positionalParamSegments = _match.positionalParamSegments;\n\n      if (!matched) return noMatch(segmentGroup);\n      var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n\n      if (route.redirectTo.startsWith('/')) {\n        return absoluteRedirect(newTree);\n      }\n\n      return this.lineralizeSegments(route, newTree).pipe(mergeMap(function (newSegments) {\n        return _this21.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n      }));\n    }\n  }, {\n    key: \"matchSegmentAgainstRoute\",\n    value: function matchSegmentAgainstRoute(ngModule, rawSegmentGroup, route, segments) {\n      var _this22 = this;\n\n      if (route.path === '**') {\n        if (route.loadChildren) {\n          return this.configLoader.load(ngModule.injector, route).pipe(map(function (cfg) {\n            route._loadedConfig = cfg;\n            return new UrlSegmentGroup(segments, {});\n          }));\n        }\n\n        return of(new UrlSegmentGroup(segments, {}));\n      }\n\n      var _match2 = match(rawSegmentGroup, route, segments),\n          matched = _match2.matched,\n          consumedSegments = _match2.consumedSegments,\n          lastChild = _match2.lastChild;\n\n      if (!matched) return noMatch(rawSegmentGroup);\n      var rawSlicedSegments = segments.slice(lastChild);\n      var childConfig$ = this.getChildConfig(ngModule, route, segments);\n      return childConfig$.pipe(mergeMap(function (routerConfig) {\n        var childModule = routerConfig.module;\n        var childConfig = routerConfig.routes;\n\n        var _split = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig),\n            segmentGroup = _split.segmentGroup,\n            slicedSegments = _split.slicedSegments;\n\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n          var _expanded$ = _this22.expandChildren(childModule, childConfig, segmentGroup);\n\n          return _expanded$.pipe(map(function (children) {\n            return new UrlSegmentGroup(consumedSegments, children);\n          }));\n        }\n\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n          return of(new UrlSegmentGroup(consumedSegments, {}));\n        }\n\n        var expanded$ = _this22.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n\n        return expanded$.pipe(map(function (cs) {\n          return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n        }));\n      }));\n    }\n  }, {\n    key: \"getChildConfig\",\n    value: function getChildConfig(ngModule, route, segments) {\n      var _this23 = this;\n\n      if (route.children) {\n        // The children belong to the same module\n        return of(new LoadedRouterConfig(route.children, ngModule));\n      }\n\n      if (route.loadChildren) {\n        // lazy children belong to the loaded module\n        if (route._loadedConfig !== undefined) {\n          return of(route._loadedConfig);\n        }\n\n        return this.runCanLoadGuards(ngModule.injector, route, segments).pipe(mergeMap(function (shouldLoadResult) {\n          if (shouldLoadResult) {\n            return _this23.configLoader.load(ngModule.injector, route).pipe(map(function (cfg) {\n              route._loadedConfig = cfg;\n              return cfg;\n            }));\n          }\n\n          return canLoadFails(route);\n        }));\n      }\n\n      return of(new LoadedRouterConfig([], ngModule));\n    }\n  }, {\n    key: \"runCanLoadGuards\",\n    value: function runCanLoadGuards(moduleInjector, route, segments) {\n      var _this24 = this;\n\n      var canLoad = route.canLoad;\n      if (!canLoad || canLoad.length === 0) return of(true);\n      var canLoadObservables = canLoad.map(function (injectionToken) {\n        var guard = moduleInjector.get(injectionToken);\n        var guardVal;\n\n        if (isCanLoad(guard)) {\n          guardVal = guard.canLoad(route, segments);\n        } else if (isFunction(guard)) {\n          guardVal = guard(route, segments);\n        } else {\n          throw new Error('Invalid CanLoad guard');\n        }\n\n        return wrapIntoObservable(guardVal);\n      });\n      return of(canLoadObservables).pipe(prioritizedGuardValue(), tap(function (result) {\n        if (!isUrlTree(result)) return;\n        var error = navigationCancelingError(\"Redirecting to \\\"\".concat(_this24.urlSerializer.serialize(result), \"\\\"\"));\n        error.url = result;\n        throw error;\n      }), map(function (result) {\n        return result === true;\n      }));\n    }\n  }, {\n    key: \"lineralizeSegments\",\n    value: function lineralizeSegments(route, urlTree) {\n      var res = [];\n      var c = urlTree.root;\n\n      while (true) {\n        res = res.concat(c.segments);\n\n        if (c.numberOfChildren === 0) {\n          return of(res);\n        }\n\n        if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n          return namedOutletsRedirect(route.redirectTo);\n        }\n\n        c = c.children[PRIMARY_OUTLET];\n      }\n    }\n  }, {\n    key: \"applyRedirectCommands\",\n    value: function applyRedirectCommands(segments, redirectTo, posParams) {\n      return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    }\n  }, {\n    key: \"applyRedirectCreatreUrlTree\",\n    value: function applyRedirectCreatreUrlTree(redirectTo, urlTree, segments, posParams) {\n      var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n      return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    }\n  }, {\n    key: \"createQueryParams\",\n    value: function createQueryParams(redirectToParams, actualParams) {\n      var res = {};\n      forEach(redirectToParams, function (v, k) {\n        var copySourceValue = typeof v === 'string' && v.startsWith(':');\n\n        if (copySourceValue) {\n          var sourceName = v.substring(1);\n          res[k] = actualParams[sourceName];\n        } else {\n          res[k] = v;\n        }\n      });\n      return res;\n    }\n  }, {\n    key: \"createSegmentGroup\",\n    value: function createSegmentGroup(redirectTo, group, segments, posParams) {\n      var _this25 = this;\n\n      var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n      var children = {};\n      forEach(group.children, function (child, name) {\n        children[name] = _this25.createSegmentGroup(redirectTo, child, segments, posParams);\n      });\n      return new UrlSegmentGroup(updatedSegments, children);\n    }\n  }, {\n    key: \"createSegments\",\n    value: function createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {\n      var _this26 = this;\n\n      return redirectToSegments.map(function (s) {\n        return s.path.startsWith(':') ? _this26.findPosParam(redirectTo, s, posParams) : _this26.findOrReturn(s, actualSegments);\n      });\n    }\n  }, {\n    key: \"findPosParam\",\n    value: function findPosParam(redirectTo, redirectToUrlSegment, posParams) {\n      var pos = posParams[redirectToUrlSegment.path.substring(1)];\n      if (!pos) throw new Error(\"Cannot redirect to '\".concat(redirectTo, \"'. Cannot find '\").concat(redirectToUrlSegment.path, \"'.\"));\n      return pos;\n    }\n  }, {\n    key: \"findOrReturn\",\n    value: function findOrReturn(redirectToUrlSegment, actualSegments) {\n      var idx = 0;\n\n      var _iterator4 = _createForOfIteratorHelper(actualSegments),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var s = _step4.value;\n\n          if (s.path === redirectToUrlSegment.path) {\n            actualSegments.splice(idx);\n            return s;\n          }\n\n          idx++;\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return redirectToUrlSegment;\n    }\n  }]);\n\n  return ApplyRedirects;\n}();\n\nfunction match(segmentGroup, route, segments) {\n  if (route.path === '') {\n    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n      return {\n        matched: false,\n        consumedSegments: [],\n        lastChild: 0,\n        positionalParamSegments: {}\n      };\n    }\n\n    return {\n      matched: true,\n      consumedSegments: [],\n      lastChild: 0,\n      positionalParamSegments: {}\n    };\n  }\n\n  var matcher = route.matcher || defaultUrlMatcher;\n  var res = matcher(segments, segmentGroup, route);\n\n  if (!res) {\n    return {\n      matched: false,\n      consumedSegments: [],\n      lastChild: 0,\n      positionalParamSegments: {}\n    };\n  }\n\n  return {\n    matched: true,\n    consumedSegments: res.consumed,\n    lastChild: res.consumed.length,\n    positionalParamSegments: res.posParams\n  };\n}\n\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n  if (slicedSegments.length > 0 && containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n    var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n    return {\n      segmentGroup: mergeTrivialChildren(s),\n      slicedSegments: []\n    };\n  }\n\n  if (slicedSegments.length === 0 && containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n    var _s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n\n    return {\n      segmentGroup: mergeTrivialChildren(_s),\n      slicedSegments: slicedSegments\n    };\n  }\n\n  return {\n    segmentGroup: segmentGroup,\n    slicedSegments: slicedSegments\n  };\n}\n\nfunction mergeTrivialChildren(s) {\n  if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n    var c = s.children[PRIMARY_OUTLET];\n    return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n  }\n\n  return s;\n}\n\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n  var res = {};\n\n  var _iterator5 = _createForOfIteratorHelper(routes),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var r = _step5.value;\n\n      if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n        res[getOutlet(r)] = new UrlSegmentGroup([], {});\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  return Object.assign(Object.assign({}, children), res);\n}\n\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n  var res = {};\n  res[PRIMARY_OUTLET] = primarySegmentGroup;\n\n  var _iterator6 = _createForOfIteratorHelper(routes),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var r = _step6.value;\n\n      if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n        res[getOutlet(r)] = new UrlSegmentGroup([], {});\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  return res;\n}\n\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n  return routes.some(function (r) {\n    return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET;\n  });\n}\n\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n  return routes.some(function (r) {\n    return isEmptyPathRedirect(segmentGroup, segments, r);\n  });\n}\n\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n  if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n    return false;\n  }\n\n  return r.path === '' && r.redirectTo !== undefined;\n}\n\nfunction getOutlet(route) {\n  return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction applyRedirects$1(moduleInjector, configLoader, urlSerializer, config) {\n  return function (source) {\n    return source.pipe(switchMap(function (t) {\n      return applyRedirects(moduleInjector, configLoader, urlSerializer, t.extractedUrl, config).pipe(map(function (urlAfterRedirects) {\n        return Object.assign(Object.assign({}, t), {\n          urlAfterRedirects: urlAfterRedirects\n        });\n      }));\n    }));\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar CanActivate = function CanActivate(path) {\n  _classCallCheck(this, CanActivate);\n\n  this.path = path;\n  this.route = this.path[this.path.length - 1];\n};\n\nvar CanDeactivate = function CanDeactivate(component, route) {\n  _classCallCheck(this, CanDeactivate);\n\n  this.component = component;\n  this.route = route;\n};\n\nfunction getAllRouteGuards(future, curr, parentContexts) {\n  var futureRoot = future._root;\n  var currRoot = curr ? curr._root : null;\n  return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n}\n\nfunction getCanActivateChild(p) {\n  var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n  if (!canActivateChild || canActivateChild.length === 0) return null;\n  return {\n    node: p,\n    guards: canActivateChild\n  };\n}\n\nfunction getToken(token, snapshot, moduleInjector) {\n  var config = getClosestLoadedConfig(snapshot);\n  var injector = config ? config.module.injector : moduleInjector;\n  return injector.get(token);\n}\n\nfunction getClosestLoadedConfig(snapshot) {\n  if (!snapshot) return null;\n\n  for (var s = snapshot.parent; s; s = s.parent) {\n    var route = s.routeConfig;\n    if (route && route._loadedConfig) return route._loadedConfig;\n  }\n\n  return null;\n}\n\nfunction getChildRouteGuards(futureNode, currNode, contexts, futurePath) {\n  var checks = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n    canDeactivateChecks: [],\n    canActivateChecks: []\n  };\n  var prevChildren = nodeChildrenAsMap(currNode); // Process the children of the future route\n\n  futureNode.children.forEach(function (c) {\n    getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n    delete prevChildren[c.value.outlet];\n  }); // Process any children left from the current route (not active for the future route)\n\n  forEach(prevChildren, function (v, k) {\n    return deactivateRouteAndItsChildren(v, contexts.getContext(k), checks);\n  });\n  return checks;\n}\n\nfunction getRouteGuards(futureNode, currNode, parentContexts, futurePath) {\n  var checks = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n    canDeactivateChecks: [],\n    canActivateChecks: []\n  };\n  var future = futureNode.value;\n  var curr = currNode ? currNode.value : null;\n  var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null; // reusing the node\n\n  if (curr && future.routeConfig === curr.routeConfig) {\n    var shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n\n    if (shouldRun) {\n      checks.canActivateChecks.push(new CanActivate(futurePath));\n    } else {\n      // we need to set the data\n      future.data = curr.data;\n      future._resolvedData = curr._resolvedData;\n    } // If we have a component, we need to go through an outlet.\n\n\n    if (future.component) {\n      getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks); // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n    }\n\n    if (shouldRun) {\n      var component = context && context.outlet && context.outlet.component || null;\n      checks.canDeactivateChecks.push(new CanDeactivate(component, curr));\n    }\n  } else {\n    if (curr) {\n      deactivateRouteAndItsChildren(currNode, context, checks);\n    }\n\n    checks.canActivateChecks.push(new CanActivate(futurePath)); // If we have a component, we need to go through an outlet.\n\n    if (future.component) {\n      getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks); // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n    }\n  }\n\n  return checks;\n}\n\nfunction shouldRunGuardsAndResolvers(curr, future, mode) {\n  if (typeof mode === 'function') {\n    return mode(curr, future);\n  }\n\n  switch (mode) {\n    case 'pathParamsChange':\n      return !equalPath(curr.url, future.url);\n\n    case 'pathParamsOrQueryParamsChange':\n      return !equalPath(curr.url, future.url) || !shallowEqual(curr.queryParams, future.queryParams);\n\n    case 'always':\n      return true;\n\n    case 'paramsOrQueryParamsChange':\n      return !equalParamsAndUrlSegments(curr, future) || !shallowEqual(curr.queryParams, future.queryParams);\n\n    case 'paramsChange':\n    default:\n      return !equalParamsAndUrlSegments(curr, future);\n  }\n}\n\nfunction deactivateRouteAndItsChildren(route, context, checks) {\n  var children = nodeChildrenAsMap(route);\n  var r = route.value;\n  forEach(children, function (node, childName) {\n    if (!r.component) {\n      deactivateRouteAndItsChildren(node, context, checks);\n    } else if (context) {\n      deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n    } else {\n      deactivateRouteAndItsChildren(node, null, checks);\n    }\n  });\n\n  if (!r.component) {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  } else if (context && context.outlet && context.outlet.isActivated) {\n    checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n  } else {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction checkGuards(moduleInjector, forwardEvent) {\n  return function (source) {\n    return source.pipe(mergeMap(function (t) {\n      var targetSnapshot = t.targetSnapshot,\n          currentSnapshot = t.currentSnapshot,\n          _t$guards = t.guards,\n          canActivateChecks = _t$guards.canActivateChecks,\n          canDeactivateChecks = _t$guards.canDeactivateChecks;\n\n      if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n        return of(Object.assign(Object.assign({}, t), {\n          guardsResult: true\n        }));\n      }\n\n      return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, moduleInjector).pipe(mergeMap(function (canDeactivate) {\n        return canDeactivate && isBoolean(canDeactivate) ? runCanActivateChecks(targetSnapshot, canActivateChecks, moduleInjector, forwardEvent) : of(canDeactivate);\n      }), map(function (guardsResult) {\n        return Object.assign(Object.assign({}, t), {\n          guardsResult: guardsResult\n        });\n      }));\n    }));\n  };\n}\n\nfunction runCanDeactivateChecks(checks, futureRSS, currRSS, moduleInjector) {\n  return from(checks).pipe(mergeMap(function (check) {\n    return runCanDeactivate(check.component, check.route, currRSS, futureRSS, moduleInjector);\n  }), first(function (result) {\n    return result !== true;\n  }, true));\n}\n\nfunction runCanActivateChecks(futureSnapshot, checks, moduleInjector, forwardEvent) {\n  return from(checks).pipe(concatMap(function (check) {\n    return from([fireChildActivationStart(check.route.parent, forwardEvent), fireActivationStart(check.route, forwardEvent), runCanActivateChild(futureSnapshot, check.path, moduleInjector), runCanActivate(futureSnapshot, check.route, moduleInjector)]).pipe(concatAll(), first(function (result) {\n      return result !== true;\n    }, true));\n  }), first(function (result) {\n    return result !== true;\n  }, true));\n}\n/**\n * This should fire off `ActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\n\n\nfunction fireActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ActivationStart(snapshot));\n  }\n\n  return of(true);\n}\n/**\n * This should fire off `ChildActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\n\n\nfunction fireChildActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ChildActivationStart(snapshot));\n  }\n\n  return of(true);\n}\n\nfunction runCanActivate(futureRSS, futureARS, moduleInjector) {\n  var canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n  if (!canActivate || canActivate.length === 0) return of(true);\n  var canActivateObservables = canActivate.map(function (c) {\n    return defer(function () {\n      var guard = getToken(c, futureARS, moduleInjector);\n      var observable;\n\n      if (isCanActivate(guard)) {\n        observable = wrapIntoObservable(guard.canActivate(futureARS, futureRSS));\n      } else if (isFunction(guard)) {\n        observable = wrapIntoObservable(guard(futureARS, futureRSS));\n      } else {\n        throw new Error('Invalid CanActivate guard');\n      }\n\n      return observable.pipe(first());\n    });\n  });\n  return of(canActivateObservables).pipe(prioritizedGuardValue());\n}\n\nfunction runCanActivateChild(futureRSS, path, moduleInjector) {\n  var futureARS = path[path.length - 1];\n  var canActivateChildGuards = path.slice(0, path.length - 1).reverse().map(function (p) {\n    return getCanActivateChild(p);\n  }).filter(function (_) {\n    return _ !== null;\n  });\n  var canActivateChildGuardsMapped = canActivateChildGuards.map(function (d) {\n    return defer(function () {\n      var guardsMapped = d.guards.map(function (c) {\n        var guard = getToken(c, d.node, moduleInjector);\n        var observable;\n\n        if (isCanActivateChild(guard)) {\n          observable = wrapIntoObservable(guard.canActivateChild(futureARS, futureRSS));\n        } else if (isFunction(guard)) {\n          observable = wrapIntoObservable(guard(futureARS, futureRSS));\n        } else {\n          throw new Error('Invalid CanActivateChild guard');\n        }\n\n        return observable.pipe(first());\n      });\n      return of(guardsMapped).pipe(prioritizedGuardValue());\n    });\n  });\n  return of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n}\n\nfunction runCanDeactivate(component, currARS, currRSS, futureRSS, moduleInjector) {\n  var canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n  if (!canDeactivate || canDeactivate.length === 0) return of(true);\n  var canDeactivateObservables = canDeactivate.map(function (c) {\n    var guard = getToken(c, currARS, moduleInjector);\n    var observable;\n\n    if (isCanDeactivate(guard)) {\n      observable = wrapIntoObservable(guard.canDeactivate(component, currARS, currRSS, futureRSS));\n    } else if (isFunction(guard)) {\n      observable = wrapIntoObservable(guard(component, currARS, currRSS, futureRSS));\n    } else {\n      throw new Error('Invalid CanDeactivate guard');\n    }\n\n    return observable.pipe(first());\n  });\n  return of(canDeactivateObservables).pipe(prioritizedGuardValue());\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar NoMatch$1 = function NoMatch$1() {\n  _classCallCheck(this, NoMatch$1);\n};\n\nfunction recognize(rootComponentType, config, urlTree, url) {\n  var paramsInheritanceStrategy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'emptyOnly';\n  var relativeLinkResolution = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'legacy';\n  return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution).recognize();\n}\n\nvar Recognizer = /*#__PURE__*/function () {\n  function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n    _classCallCheck(this, Recognizer);\n\n    this.rootComponentType = rootComponentType;\n    this.config = config;\n    this.urlTree = urlTree;\n    this.url = url;\n    this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    this.relativeLinkResolution = relativeLinkResolution;\n  }\n\n  _createClass(Recognizer, [{\n    key: \"recognize\",\n    value: function recognize() {\n      try {\n        var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;\n        var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n        var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n        var rootNode = new TreeNode(root, children);\n        var routeState = new RouterStateSnapshot(this.url, rootNode);\n        this.inheritParamsAndData(routeState._root);\n        return of(routeState);\n      } catch (e) {\n        return new Observable(function (obs) {\n          return obs.error(e);\n        });\n      }\n    }\n  }, {\n    key: \"inheritParamsAndData\",\n    value: function inheritParamsAndData(routeNode) {\n      var _this27 = this;\n\n      var route = routeNode.value;\n      var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n      route.params = Object.freeze(i.params);\n      route.data = Object.freeze(i.data);\n      routeNode.children.forEach(function (n) {\n        return _this27.inheritParamsAndData(n);\n      });\n    }\n  }, {\n    key: \"processSegmentGroup\",\n    value: function processSegmentGroup(config, segmentGroup, outlet) {\n      if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return this.processChildren(config, segmentGroup);\n      }\n\n      return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    }\n  }, {\n    key: \"processChildren\",\n    value: function processChildren(config, segmentGroup) {\n      var _this28 = this;\n\n      var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) {\n        return _this28.processSegmentGroup(config, child, childOutlet);\n      });\n      checkOutletNameUniqueness(children);\n      sortActivatedRouteSnapshots(children);\n      return children;\n    }\n  }, {\n    key: \"processSegment\",\n    value: function processSegment(config, segmentGroup, segments, outlet) {\n      var _iterator7 = _createForOfIteratorHelper(config),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var r = _step7.value;\n\n          try {\n            return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n          } catch (e) {\n            if (!(e instanceof NoMatch$1)) throw e;\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n        return [];\n      }\n\n      throw new NoMatch$1();\n    }\n  }, {\n    key: \"noLeftoversInUrl\",\n    value: function noLeftoversInUrl(segmentGroup, segments, outlet) {\n      return segments.length === 0 && !segmentGroup.children[outlet];\n    }\n  }, {\n    key: \"processSegmentAgainstRoute\",\n    value: function processSegmentAgainstRoute(route, rawSegment, segments, outlet) {\n      if (route.redirectTo) throw new NoMatch$1();\n      if ((route.outlet || PRIMARY_OUTLET) !== outlet) throw new NoMatch$1();\n      var snapshot;\n      var consumedSegments = [];\n      var rawSlicedSegments = [];\n\n      if (route.path === '**') {\n        var params = segments.length > 0 ? last(segments).parameters : {};\n        snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n      } else {\n        var result = match$1(rawSegment, route, segments);\n        consumedSegments = result.consumedSegments;\n        rawSlicedSegments = segments.slice(result.lastChild);\n        snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n      }\n\n      var childConfig = getChildConfig(route);\n\n      var _split$ = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution),\n          segmentGroup = _split$.segmentGroup,\n          slicedSegments = _split$.slicedSegments;\n\n      if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n        var _children3 = this.processChildren(childConfig, segmentGroup);\n\n        return [new TreeNode(snapshot, _children3)];\n      }\n\n      if (childConfig.length === 0 && slicedSegments.length === 0) {\n        return [new TreeNode(snapshot, [])];\n      }\n\n      var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n      return [new TreeNode(snapshot, children)];\n    }\n  }]);\n\n  return Recognizer;\n}();\n\nfunction sortActivatedRouteSnapshots(nodes) {\n  nodes.sort(function (a, b) {\n    if (a.value.outlet === PRIMARY_OUTLET) return -1;\n    if (b.value.outlet === PRIMARY_OUTLET) return 1;\n    return a.value.outlet.localeCompare(b.value.outlet);\n  });\n}\n\nfunction getChildConfig(route) {\n  if (route.children) {\n    return route.children;\n  }\n\n  if (route.loadChildren) {\n    return route._loadedConfig.routes;\n  }\n\n  return [];\n}\n\nfunction match$1(segmentGroup, route, segments) {\n  if (route.path === '') {\n    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n      throw new NoMatch$1();\n    }\n\n    return {\n      consumedSegments: [],\n      lastChild: 0,\n      parameters: {}\n    };\n  }\n\n  var matcher = route.matcher || defaultUrlMatcher;\n  var res = matcher(segments, segmentGroup, route);\n  if (!res) throw new NoMatch$1();\n  var posParams = {};\n  forEach(res.posParams, function (v, k) {\n    posParams[k] = v.path;\n  });\n  var parameters = res.consumed.length > 0 ? Object.assign(Object.assign({}, posParams), res.consumed[res.consumed.length - 1].parameters) : posParams;\n  return {\n    consumedSegments: res.consumed,\n    lastChild: res.consumed.length,\n    parameters: parameters\n  };\n}\n\nfunction checkOutletNameUniqueness(nodes) {\n  var names = {};\n  nodes.forEach(function (n) {\n    var routeWithSameOutletName = names[n.value.outlet];\n\n    if (routeWithSameOutletName) {\n      var p = routeWithSameOutletName.url.map(function (s) {\n        return s.toString();\n      }).join('/');\n      var c = n.value.url.map(function (s) {\n        return s.toString();\n      }).join('/');\n      throw new Error(\"Two segments cannot have the same outlet name: '\".concat(p, \"' and '\").concat(c, \"'.\"));\n    }\n\n    names[n.value.outlet] = n.value;\n  });\n}\n\nfunction getSourceSegmentGroup(segmentGroup) {\n  var s = segmentGroup;\n\n  while (s._sourceSegment) {\n    s = s._sourceSegment;\n  }\n\n  return s;\n}\n\nfunction getPathIndexShift(segmentGroup) {\n  var s = segmentGroup;\n  var res = s._segmentIndexShift ? s._segmentIndexShift : 0;\n\n  while (s._sourceSegment) {\n    s = s._sourceSegment;\n    res += s._segmentIndexShift ? s._segmentIndexShift : 0;\n  }\n\n  return res - 1;\n}\n\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {\n  if (slicedSegments.length > 0 && containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n    var _s2 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n\n    _s2._sourceSegment = segmentGroup;\n    _s2._segmentIndexShift = consumedSegments.length;\n    return {\n      segmentGroup: _s2,\n      slicedSegments: []\n    };\n  }\n\n  if (slicedSegments.length === 0 && containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n    var _s3 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));\n\n    _s3._sourceSegment = segmentGroup;\n    _s3._segmentIndexShift = consumedSegments.length;\n    return {\n      segmentGroup: _s3,\n      slicedSegments: slicedSegments\n    };\n  }\n\n  var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n  s._sourceSegment = segmentGroup;\n  s._segmentIndexShift = consumedSegments.length;\n  return {\n    segmentGroup: s,\n    slicedSegments: slicedSegments\n  };\n}\n\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {\n  var res = {};\n\n  var _iterator8 = _createForOfIteratorHelper(routes),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var r = _step8.value;\n\n      if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n        var s = new UrlSegmentGroup([], {});\n        s._sourceSegment = segmentGroup;\n\n        if (relativeLinkResolution === 'legacy') {\n          s._segmentIndexShift = segmentGroup.segments.length;\n        } else {\n          s._segmentIndexShift = consumedSegments.length;\n        }\n\n        res[getOutlet$1(r)] = s;\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  return Object.assign(Object.assign({}, children), res);\n}\n\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n  var res = {};\n  res[PRIMARY_OUTLET] = primarySegment;\n  primarySegment._sourceSegment = segmentGroup;\n  primarySegment._segmentIndexShift = consumedSegments.length;\n\n  var _iterator9 = _createForOfIteratorHelper(routes),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var r = _step9.value;\n\n      if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n        var s = new UrlSegmentGroup([], {});\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        res[getOutlet$1(r)] = s;\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  return res;\n}\n\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n  return routes.some(function (r) {\n    return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET;\n  });\n}\n\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n  return routes.some(function (r) {\n    return emptyPathMatch(segmentGroup, slicedSegments, r);\n  });\n}\n\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n  if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n    return false;\n  }\n\n  return r.path === '' && r.redirectTo === undefined;\n}\n\nfunction getOutlet$1(route) {\n  return route.outlet || PRIMARY_OUTLET;\n}\n\nfunction getData(route) {\n  return route.data || {};\n}\n\nfunction getResolve(route) {\n  return route.resolve || {};\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction recognize$1(rootComponentType, config, serializer, paramsInheritanceStrategy, relativeLinkResolution) {\n  return function (source) {\n    return source.pipe(mergeMap(function (t) {\n      return recognize(rootComponentType, config, t.urlAfterRedirects, serializer(t.urlAfterRedirects), paramsInheritanceStrategy, relativeLinkResolution).pipe(map(function (targetSnapshot) {\n        return Object.assign(Object.assign({}, t), {\n          targetSnapshot: targetSnapshot\n        });\n      }));\n    }));\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction resolveData(paramsInheritanceStrategy, moduleInjector) {\n  return function (source) {\n    return source.pipe(mergeMap(function (t) {\n      var targetSnapshot = t.targetSnapshot,\n          canActivateChecks = t.guards.canActivateChecks;\n\n      if (!canActivateChecks.length) {\n        return of(t);\n      }\n\n      var canActivateChecksResolved = 0;\n      return from(canActivateChecks).pipe(concatMap(function (check) {\n        return runResolve(check.route, targetSnapshot, paramsInheritanceStrategy, moduleInjector);\n      }), tap(function () {\n        return canActivateChecksResolved++;\n      }), takeLast(1), mergeMap(function (_) {\n        return canActivateChecksResolved === canActivateChecks.length ? of(t) : EMPTY;\n      }));\n    }));\n  };\n}\n\nfunction runResolve(futureARS, futureRSS, paramsInheritanceStrategy, moduleInjector) {\n  var resolve = futureARS._resolve;\n  return resolveNode(resolve, futureARS, futureRSS, moduleInjector).pipe(map(function (resolvedData) {\n    futureARS._resolvedData = resolvedData;\n    futureARS.data = Object.assign(Object.assign({}, futureARS.data), inheritedParamsDataResolve(futureARS, paramsInheritanceStrategy).resolve);\n    return null;\n  }));\n}\n\nfunction resolveNode(resolve, futureARS, futureRSS, moduleInjector) {\n  var keys = Object.keys(resolve);\n\n  if (keys.length === 0) {\n    return of({});\n  }\n\n  var data = {};\n  return from(keys).pipe(mergeMap(function (key) {\n    return getResolver(resolve[key], futureARS, futureRSS, moduleInjector).pipe(tap(function (value) {\n      data[key] = value;\n    }));\n  }), takeLast(1), mergeMap(function () {\n    // Ensure all resolvers returned values, otherwise don't emit any \"next\" and just complete\n    // the chain which will cancel navigation\n    if (Object.keys(data).length === keys.length) {\n      return of(data);\n    }\n\n    return EMPTY;\n  }));\n}\n\nfunction getResolver(injectionToken, futureARS, futureRSS, moduleInjector) {\n  var resolver = getToken(injectionToken, futureARS, moduleInjector);\n  return resolver.resolve ? wrapIntoObservable(resolver.resolve(futureARS, futureRSS)) : wrapIntoObservable(resolver(futureARS, futureRSS));\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Perform a side effect through a switchMap for every emission on the source Observable,\n * but return an Observable that is identical to the source. It's essentially the same as\n * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n * it will wait before continuing with the original value.\n */\n\n\nfunction switchTap(next) {\n  return function (source) {\n    return source.pipe(switchMap(function (v) {\n      var nextResult = next(v);\n\n      if (nextResult) {\n        return from(nextResult).pipe(map(function () {\n          return v;\n        }));\n      }\n\n      return from([v]);\n    }));\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @publicApi\n */\n\n\nvar RouteReuseStrategy = function RouteReuseStrategy() {\n  _classCallCheck(this, RouteReuseStrategy);\n};\n/**\n * @description\n *\n * This base route reuse strategy only reuses routes when the matched router configs are\n * identical. This prevents components from being destroyed and recreated\n * when just the fragment or query parameters change\n * (that is, the existing component is _reused_).\n *\n * This strategy does not store any routes for later reuse.\n *\n * Angular uses this strategy by default.\n *\n *\n * It can be used as a base class for custom route reuse strategies, i.e. you can create your own\n * class that extends the `BaseRouteReuseStrategy` one.\n * @publicApi\n */\n\n\nvar BaseRouteReuseStrategy = /*#__PURE__*/function () {\n  function BaseRouteReuseStrategy() {\n    _classCallCheck(this, BaseRouteReuseStrategy);\n  }\n\n  _createClass(BaseRouteReuseStrategy, [{\n    key: \"shouldDetach\",\n    value:\n    /**\n     * Whether the given route should detach for later reuse.\n     * Always returns false for `BaseRouteReuseStrategy`.\n     * */\n    function shouldDetach(route) {\n      return false;\n    }\n    /**\n     * A no-op; the route is never stored since this strategy never detaches routes for later re-use.\n     */\n\n  }, {\n    key: \"store\",\n    value: function store(route, detachedTree) {}\n    /** Returns `false`, meaning the route (and its subtree) is never reattached */\n\n  }, {\n    key: \"shouldAttach\",\n    value: function shouldAttach(route) {\n      return false;\n    }\n    /** Returns `null` because this strategy does not store routes for later re-use. */\n\n  }, {\n    key: \"retrieve\",\n    value: function retrieve(route) {\n      return null;\n    }\n    /**\n     * Determines if a route should be reused.\n     * This strategy returns `true` when the future route config and current route config are\n     * identical.\n     */\n\n  }, {\n    key: \"shouldReuseRoute\",\n    value: function shouldReuseRoute(future, curr) {\n      return future.routeConfig === curr.routeConfig;\n    }\n  }]);\n\n  return BaseRouteReuseStrategy;\n}();\n\nvar DefaultRouteReuseStrategy = /*#__PURE__*/function (_BaseRouteReuseStrate) {\n  _inherits(DefaultRouteReuseStrategy, _BaseRouteReuseStrate);\n\n  var _super12 = _createSuper(DefaultRouteReuseStrategy);\n\n  function DefaultRouteReuseStrategy() {\n    _classCallCheck(this, DefaultRouteReuseStrategy);\n\n    return _super12.apply(this, arguments);\n  }\n\n  return DefaultRouteReuseStrategy;\n}(BaseRouteReuseStrategy);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\n\n\nvar ɵEmptyOutletComponent = function ɵEmptyOutletComponent() {\n  _classCallCheck(this, ɵEmptyOutletComponent);\n};\n\nɵEmptyOutletComponent.ɵfac = function ɵEmptyOutletComponent_Factory(t) {\n  return new (t || ɵEmptyOutletComponent)();\n};\n\nɵEmptyOutletComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ɵEmptyOutletComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 1,\n  vars: 0,\n  template: function ɵEmptyOutletComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"router-outlet\");\n    }\n  },\n  directives: function directives() {\n    return [RouterOutlet];\n  },\n  encapsulation: 2\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ɵEmptyOutletComponent, [{\n    type: Component,\n    args: [{\n      template: \"<router-outlet></router-outlet>\"\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction validateConfig(config) {\n  var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  // forEach doesn't iterate undefined values\n  for (var i = 0; i < config.length; i++) {\n    var route = config[i];\n    var fullPath = getFullPath(parentPath, route);\n    validateNode(route, fullPath);\n  }\n}\n\nfunction validateNode(route, fullPath) {\n  if (!route) {\n    throw new Error(\"\\n      Invalid configuration of route '\".concat(fullPath, \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \"));\n  }\n\n  if (Array.isArray(route)) {\n    throw new Error(\"Invalid configuration of route '\".concat(fullPath, \"': Array cannot be specified\"));\n  }\n\n  if (!route.component && !route.children && !route.loadChildren && route.outlet && route.outlet !== PRIMARY_OUTLET) {\n    throw new Error(\"Invalid configuration of route '\".concat(fullPath, \"': a componentless route without children or loadChildren cannot have a named outlet set\"));\n  }\n\n  if (route.redirectTo && route.children) {\n    throw new Error(\"Invalid configuration of route '\".concat(fullPath, \"': redirectTo and children cannot be used together\"));\n  }\n\n  if (route.redirectTo && route.loadChildren) {\n    throw new Error(\"Invalid configuration of route '\".concat(fullPath, \"': redirectTo and loadChildren cannot be used together\"));\n  }\n\n  if (route.children && route.loadChildren) {\n    throw new Error(\"Invalid configuration of route '\".concat(fullPath, \"': children and loadChildren cannot be used together\"));\n  }\n\n  if (route.redirectTo && route.component) {\n    throw new Error(\"Invalid configuration of route '\".concat(fullPath, \"': redirectTo and component cannot be used together\"));\n  }\n\n  if (route.path && route.matcher) {\n    throw new Error(\"Invalid configuration of route '\".concat(fullPath, \"': path and matcher cannot be used together\"));\n  }\n\n  if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n    throw new Error(\"Invalid configuration of route '\".concat(fullPath, \"'. One of the following must be provided: component, redirectTo, children or loadChildren\"));\n  }\n\n  if (route.path === void 0 && route.matcher === void 0) {\n    throw new Error(\"Invalid configuration of route '\".concat(fullPath, \"': routes must have either a path or a matcher specified\"));\n  }\n\n  if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n    throw new Error(\"Invalid configuration of route '\".concat(fullPath, \"': path cannot start with a slash\"));\n  }\n\n  if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n    var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n    throw new Error(\"Invalid configuration of route '{path: \\\"\".concat(fullPath, \"\\\", redirectTo: \\\"\").concat(route.redirectTo, \"\\\"}': please provide 'pathMatch'. \").concat(exp));\n  }\n\n  if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n    throw new Error(\"Invalid configuration of route '\".concat(fullPath, \"': pathMatch can only be set to 'prefix' or 'full'\"));\n  }\n\n  if (route.children) {\n    validateConfig(route.children, fullPath);\n  }\n}\n\nfunction getFullPath(parentPath, currentRoute) {\n  if (!currentRoute) {\n    return parentPath;\n  }\n\n  if (!parentPath && !currentRoute.path) {\n    return '';\n  } else if (parentPath && !currentRoute.path) {\n    return \"\".concat(parentPath, \"/\");\n  } else if (!parentPath && currentRoute.path) {\n    return currentRoute.path;\n  } else {\n    return \"\".concat(parentPath, \"/\").concat(currentRoute.path);\n  }\n}\n/**\n * Makes a copy of the config and adds any default required properties.\n */\n\n\nfunction standardizeConfig(r) {\n  var children = r.children && r.children.map(standardizeConfig);\n  var c = children ? Object.assign(Object.assign({}, r), {\n    children: children\n  }) : Object.assign({}, r);\n\n  if (!c.component && (children || c.loadChildren) && c.outlet && c.outlet !== PRIMARY_OUTLET) {\n    c.component = ɵEmptyOutletComponent;\n  }\n\n  return c;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The [DI token](guide/glossary/#di-token) for a router configuration.\n * @see `ROUTES`\n * @publicApi\n */\n\n\nvar ROUTES = new InjectionToken('ROUTES');\n\nvar RouterConfigLoader = /*#__PURE__*/function () {\n  function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n    _classCallCheck(this, RouterConfigLoader);\n\n    this.loader = loader;\n    this.compiler = compiler;\n    this.onLoadStartListener = onLoadStartListener;\n    this.onLoadEndListener = onLoadEndListener;\n  }\n\n  _createClass(RouterConfigLoader, [{\n    key: \"load\",\n    value: function load(parentInjector, route) {\n      var _this29 = this;\n\n      if (this.onLoadStartListener) {\n        this.onLoadStartListener(route);\n      }\n\n      var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n      return moduleFactory$.pipe(map(function (factory) {\n        if (_this29.onLoadEndListener) {\n          _this29.onLoadEndListener(route);\n        }\n\n        var module = factory.create(parentInjector);\n        return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n      }));\n    }\n  }, {\n    key: \"loadModuleFactory\",\n    value: function loadModuleFactory(loadChildren) {\n      var _this30 = this;\n\n      if (typeof loadChildren === 'string') {\n        return from(this.loader.load(loadChildren));\n      } else {\n        return wrapIntoObservable(loadChildren()).pipe(mergeMap(function (t) {\n          if (t instanceof NgModuleFactory) {\n            return of(t);\n          } else {\n            return from(_this30.compiler.compileModuleAsync(t));\n          }\n        }));\n      }\n    }\n  }]);\n\n  return RouterConfigLoader;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Store contextual information about a `RouterOutlet`\n *\n * @publicApi\n */\n\n\nvar OutletContext = function OutletContext() {\n  _classCallCheck(this, OutletContext);\n\n  this.outlet = null;\n  this.route = null;\n  this.resolver = null;\n  this.children = new ChildrenOutletContexts();\n  this.attachRef = null;\n};\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n * @publicApi\n */\n\n\nvar ChildrenOutletContexts = /*#__PURE__*/function () {\n  function ChildrenOutletContexts() {\n    _classCallCheck(this, ChildrenOutletContexts);\n\n    // contexts for child outlets, by name.\n    this.contexts = new Map();\n  }\n  /** Called when a `RouterOutlet` directive is instantiated */\n\n\n  _createClass(ChildrenOutletContexts, [{\n    key: \"onChildOutletCreated\",\n    value: function onChildOutletCreated(childName, outlet) {\n      var context = this.getOrCreateContext(childName);\n      context.outlet = outlet;\n      this.contexts.set(childName, context);\n    }\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n\n  }, {\n    key: \"onChildOutletDestroyed\",\n    value: function onChildOutletDestroyed(childName) {\n      var context = this.getContext(childName);\n\n      if (context) {\n        context.outlet = null;\n      }\n    }\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n\n  }, {\n    key: \"onOutletDeactivated\",\n    value: function onOutletDeactivated() {\n      var contexts = this.contexts;\n      this.contexts = new Map();\n      return contexts;\n    }\n  }, {\n    key: \"onOutletReAttached\",\n    value: function onOutletReAttached(contexts) {\n      this.contexts = contexts;\n    }\n  }, {\n    key: \"getOrCreateContext\",\n    value: function getOrCreateContext(childName) {\n      var context = this.getContext(childName);\n\n      if (!context) {\n        context = new OutletContext();\n        this.contexts.set(childName, context);\n      }\n\n      return context;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(childName) {\n      return this.contexts.get(childName) || null;\n    }\n  }]);\n\n  return ChildrenOutletContexts;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @publicApi\n */\n\n\nvar UrlHandlingStrategy = function UrlHandlingStrategy() {\n  _classCallCheck(this, UrlHandlingStrategy);\n};\n/**\n * @publicApi\n */\n\n\nvar DefaultUrlHandlingStrategy = /*#__PURE__*/function () {\n  function DefaultUrlHandlingStrategy() {\n    _classCallCheck(this, DefaultUrlHandlingStrategy);\n  }\n\n  _createClass(DefaultUrlHandlingStrategy, [{\n    key: \"shouldProcessUrl\",\n    value: function shouldProcessUrl(url) {\n      return true;\n    }\n  }, {\n    key: \"extract\",\n    value: function extract(url) {\n      return url;\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(newUrlPart, wholeUrl) {\n      return newUrlPart;\n    }\n  }]);\n\n  return DefaultUrlHandlingStrategy;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction defaultErrorHandler(error) {\n  throw error;\n}\n\nfunction defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n  return urlSerializer.parse('/');\n}\n/**\n * @internal\n */\n\n\nfunction defaultRouterHook(snapshot, runExtras) {\n  return of(null);\n}\n/**\n * @description\n *\n * A service that provides navigation among views and URL manipulation capabilities.\n *\n * @see `Route`.\n * @see [Routing and Navigation Guide](guide/router).\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\n\n\nvar Router = /*#__PURE__*/function () {\n  /**\n   * Creates the router service.\n   */\n  // TODO: vsavkin make internal after the final is out.\n  function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n    var _this31 = this;\n\n    _classCallCheck(this, Router);\n\n    this.rootComponentType = rootComponentType;\n    this.urlSerializer = urlSerializer;\n    this.rootContexts = rootContexts;\n    this.location = location;\n    this.config = config;\n    this.lastSuccessfulNavigation = null;\n    this.currentNavigation = null;\n    /**\n     * Tracks the previously seen location change from the location subscription so we can compare\n     * the two latest to see if they are duplicates. See setUpLocationChangeListener.\n     */\n\n    this.lastLocationChangeInfo = null;\n    this.navigationId = 0;\n    this.isNgZoneEnabled = false;\n    /**\n     * An event stream for routing events in this NgModule.\n     */\n\n    this.events = new Subject();\n    /**\n     * A handler for navigation errors in this NgModule.\n     */\n\n    this.errorHandler = defaultErrorHandler;\n    /**\n     * A handler for errors thrown by `Router.parseUrl(url)`\n     * when `url` contains an invalid character.\n     * The most common case is a `%` sign\n     * that's not encoded and is not part of a percent encoded sequence.\n     */\n\n    this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n    /**\n     * True if at least one navigation event has occurred,\n     * false otherwise.\n     */\n\n    this.navigated = false;\n    this.lastSuccessfulId = -1;\n    /**\n     * Hooks that enable you to pause navigation,\n     * either before or after the preactivation phase.\n     * Used by `RouterModule`.\n     *\n     * @internal\n     */\n\n    this.hooks = {\n      beforePreactivation: defaultRouterHook,\n      afterPreactivation: defaultRouterHook\n    };\n    /**\n     * A strategy for extracting and merging URLs.\n     * Used for AngularJS to Angular migrations.\n     */\n\n    this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n    /**\n     * A strategy for re-using routes.\n     */\n\n    this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n    /**\n     * How to handle a navigation request to the current URL. One of:\n     * - `'ignore'` :  The router ignores the request.\n     * - `'reload'` : The router reloads the URL. Use to implement a \"refresh\" feature.\n     */\n\n    this.onSameUrlNavigation = 'ignore';\n    /**\n     * How to merge parameters, data, and resolved data from parent to child\n     * routes. One of:\n     *\n     * - `'emptyOnly'` : Inherit parent parameters, data, and resolved data\n     * for path-less or component-less routes.\n     * - `'always'` : Inherit parent parameters, data, and resolved data\n     * for all child routes.\n     */\n\n    this.paramsInheritanceStrategy = 'emptyOnly';\n    /**\n     * Determines when the router updates the browser URL.\n     * By default (`\"deferred\"`), updates the browser URL after navigation has finished.\n     * Set to `'eager'` to update the browser URL at the beginning of navigation.\n     * You can choose to update early so that, if navigation fails,\n     * you can show an error message with the URL that failed.\n     */\n\n    this.urlUpdateStrategy = 'deferred';\n    /**\n     * Enables a bug fix that corrects relative link resolution in components with empty paths.\n     * @see `RouterModule`\n     */\n\n    this.relativeLinkResolution = 'legacy';\n\n    var onLoadStart = function onLoadStart(r) {\n      return _this31.triggerEvent(new RouteConfigLoadStart(r));\n    };\n\n    var onLoadEnd = function onLoadEnd(r) {\n      return _this31.triggerEvent(new RouteConfigLoadEnd(r));\n    };\n\n    this.ngModule = injector.get(NgModuleRef);\n    this.console = injector.get(ɵConsole);\n    var ngZone = injector.get(NgZone);\n    this.isNgZoneEnabled = ngZone instanceof NgZone;\n    this.resetConfig(config);\n    this.currentUrlTree = createEmptyUrlTree();\n    this.rawUrlTree = this.currentUrlTree;\n    this.browserUrlTree = this.currentUrlTree;\n    this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n    this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n    this.transitions = new BehaviorSubject({\n      id: 0,\n      currentUrlTree: this.currentUrlTree,\n      currentRawUrl: this.currentUrlTree,\n      extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),\n      urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),\n      rawUrl: this.currentUrlTree,\n      extras: {},\n      resolve: null,\n      reject: null,\n      promise: Promise.resolve(true),\n      source: 'imperative',\n      restoredState: null,\n      currentSnapshot: this.routerState.snapshot,\n      targetSnapshot: null,\n      currentRouterState: this.routerState,\n      targetRouterState: null,\n      guards: {\n        canActivateChecks: [],\n        canDeactivateChecks: []\n      },\n      guardsResult: null\n    });\n    this.navigations = this.setupNavigations(this.transitions);\n    this.processNavigations();\n  }\n\n  _createClass(Router, [{\n    key: \"setupNavigations\",\n    value: function setupNavigations(transitions) {\n      var _this32 = this;\n\n      var eventsSubject = this.events;\n      return transitions.pipe(filter(function (t) {\n        return t.id !== 0;\n      }), // Extract URL\n      map(function (t) {\n        return Object.assign(Object.assign({}, t), {\n          extractedUrl: _this32.urlHandlingStrategy.extract(t.rawUrl)\n        });\n      }), // Using switchMap so we cancel executing navigations when a new one comes in\n      switchMap(function (t) {\n        var completed = false;\n        var errored = false;\n        return of(t).pipe( // Store the Navigation object\n        tap(function (t) {\n          _this32.currentNavigation = {\n            id: t.id,\n            initialUrl: t.currentRawUrl,\n            extractedUrl: t.extractedUrl,\n            trigger: t.source,\n            extras: t.extras,\n            previousNavigation: _this32.lastSuccessfulNavigation ? Object.assign(Object.assign({}, _this32.lastSuccessfulNavigation), {\n              previousNavigation: null\n            }) : null\n          };\n        }), switchMap(function (t) {\n          var urlTransition = !_this32.navigated || t.extractedUrl.toString() !== _this32.browserUrlTree.toString();\n\n          var processCurrentUrl = (_this32.onSameUrlNavigation === 'reload' ? true : urlTransition) && _this32.urlHandlingStrategy.shouldProcessUrl(t.rawUrl);\n\n          if (processCurrentUrl) {\n            return of(t).pipe( // Fire NavigationStart event\n            switchMap(function (t) {\n              var transition = _this32.transitions.getValue();\n\n              eventsSubject.next(new NavigationStart(t.id, _this32.serializeUrl(t.extractedUrl), t.source, t.restoredState));\n\n              if (transition !== _this32.transitions.getValue()) {\n                return EMPTY;\n              }\n\n              return [t];\n            }), // This delay is required to match old behavior that forced navigation\n            // to always be async\n            switchMap(function (t) {\n              return Promise.resolve(t);\n            }), // ApplyRedirects\n            applyRedirects$1(_this32.ngModule.injector, _this32.configLoader, _this32.urlSerializer, _this32.config), // Update the currentNavigation\n            tap(function (t) {\n              _this32.currentNavigation = Object.assign(Object.assign({}, _this32.currentNavigation), {\n                finalUrl: t.urlAfterRedirects\n              });\n            }), // Recognize\n            recognize$1(_this32.rootComponentType, _this32.config, function (url) {\n              return _this32.serializeUrl(url);\n            }, _this32.paramsInheritanceStrategy, _this32.relativeLinkResolution), // Update URL if in `eager` update mode\n            tap(function (t) {\n              if (_this32.urlUpdateStrategy === 'eager') {\n                if (!t.extras.skipLocationChange) {\n                  _this32.setBrowserUrl(t.urlAfterRedirects, !!t.extras.replaceUrl, t.id, t.extras.state);\n                }\n\n                _this32.browserUrlTree = t.urlAfterRedirects;\n              }\n            }), // Fire RoutesRecognized\n            tap(function (t) {\n              var routesRecognized = new RoutesRecognized(t.id, _this32.serializeUrl(t.extractedUrl), _this32.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n              eventsSubject.next(routesRecognized);\n            }));\n          } else {\n            var processPreviousUrl = urlTransition && _this32.rawUrlTree && _this32.urlHandlingStrategy.shouldProcessUrl(_this32.rawUrlTree);\n            /* When the current URL shouldn't be processed, but the previous one was,\n             * we handle this \"error condition\" by navigating to the previously\n             * successful URL, but leaving the URL intact.*/\n\n\n            if (processPreviousUrl) {\n              var id = t.id,\n                  extractedUrl = t.extractedUrl,\n                  source = t.source,\n                  restoredState = t.restoredState,\n                  extras = t.extras;\n              var navStart = new NavigationStart(id, _this32.serializeUrl(extractedUrl), source, restoredState);\n              eventsSubject.next(navStart);\n              var targetSnapshot = createEmptyState(extractedUrl, _this32.rootComponentType).snapshot;\n              return of(Object.assign(Object.assign({}, t), {\n                targetSnapshot: targetSnapshot,\n                urlAfterRedirects: extractedUrl,\n                extras: Object.assign(Object.assign({}, extras), {\n                  skipLocationChange: false,\n                  replaceUrl: false\n                })\n              }));\n            } else {\n              /* When neither the current or previous URL can be processed, do nothing\n               * other than update router's internal reference to the current \"settled\"\n               * URL. This way the next navigation will be coming from the current URL\n               * in the browser.\n               */\n              _this32.rawUrlTree = t.rawUrl;\n              _this32.browserUrlTree = t.urlAfterRedirects;\n              t.resolve(null);\n              return EMPTY;\n            }\n          }\n        }), // Before Preactivation\n        switchTap(function (t) {\n          var targetSnapshot = t.targetSnapshot,\n              navigationId = t.id,\n              appliedUrlTree = t.extractedUrl,\n              rawUrlTree = t.rawUrl,\n              _t$extras = t.extras,\n              skipLocationChange = _t$extras.skipLocationChange,\n              replaceUrl = _t$extras.replaceUrl;\n          return _this32.hooks.beforePreactivation(targetSnapshot, {\n            navigationId: navigationId,\n            appliedUrlTree: appliedUrlTree,\n            rawUrlTree: rawUrlTree,\n            skipLocationChange: !!skipLocationChange,\n            replaceUrl: !!replaceUrl\n          });\n        }), // --- GUARDS ---\n        tap(function (t) {\n          var guardsStart = new GuardsCheckStart(t.id, _this32.serializeUrl(t.extractedUrl), _this32.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n\n          _this32.triggerEvent(guardsStart);\n        }), map(function (t) {\n          return Object.assign(Object.assign({}, t), {\n            guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, _this32.rootContexts)\n          });\n        }), checkGuards(_this32.ngModule.injector, function (evt) {\n          return _this32.triggerEvent(evt);\n        }), tap(function (t) {\n          if (isUrlTree(t.guardsResult)) {\n            var error = navigationCancelingError(\"Redirecting to \\\"\".concat(_this32.serializeUrl(t.guardsResult), \"\\\"\"));\n            error.url = t.guardsResult;\n            throw error;\n          }\n        }), tap(function (t) {\n          var guardsEnd = new GuardsCheckEnd(t.id, _this32.serializeUrl(t.extractedUrl), _this32.serializeUrl(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n\n          _this32.triggerEvent(guardsEnd);\n        }), filter(function (t) {\n          if (!t.guardsResult) {\n            _this32.resetUrlToCurrentUrlTree();\n\n            var navCancel = new NavigationCancel(t.id, _this32.serializeUrl(t.extractedUrl), '');\n            eventsSubject.next(navCancel);\n            t.resolve(false);\n            return false;\n          }\n\n          return true;\n        }), // --- RESOLVE ---\n        switchTap(function (t) {\n          if (t.guards.canActivateChecks.length) {\n            return of(t).pipe(tap(function (t) {\n              var resolveStart = new ResolveStart(t.id, _this32.serializeUrl(t.extractedUrl), _this32.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n\n              _this32.triggerEvent(resolveStart);\n            }), switchMap(function (t) {\n              var dataResolved = false;\n              return of(t).pipe(resolveData(_this32.paramsInheritanceStrategy, _this32.ngModule.injector), tap({\n                next: function next() {\n                  return dataResolved = true;\n                },\n                complete: function complete() {\n                  if (!dataResolved) {\n                    var navCancel = new NavigationCancel(t.id, _this32.serializeUrl(t.extractedUrl), \"At least one route resolver didn't emit any value.\");\n                    eventsSubject.next(navCancel);\n                    t.resolve(false);\n                  }\n                }\n              }));\n            }), tap(function (t) {\n              var resolveEnd = new ResolveEnd(t.id, _this32.serializeUrl(t.extractedUrl), _this32.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n\n              _this32.triggerEvent(resolveEnd);\n            }));\n          }\n\n          return undefined;\n        }), // --- AFTER PREACTIVATION ---\n        switchTap(function (t) {\n          var targetSnapshot = t.targetSnapshot,\n              navigationId = t.id,\n              appliedUrlTree = t.extractedUrl,\n              rawUrlTree = t.rawUrl,\n              _t$extras2 = t.extras,\n              skipLocationChange = _t$extras2.skipLocationChange,\n              replaceUrl = _t$extras2.replaceUrl;\n          return _this32.hooks.afterPreactivation(targetSnapshot, {\n            navigationId: navigationId,\n            appliedUrlTree: appliedUrlTree,\n            rawUrlTree: rawUrlTree,\n            skipLocationChange: !!skipLocationChange,\n            replaceUrl: !!replaceUrl\n          });\n        }), map(function (t) {\n          var targetRouterState = createRouterState(_this32.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n          return Object.assign(Object.assign({}, t), {\n            targetRouterState: targetRouterState\n          });\n        }),\n        /* Once here, we are about to activate syncronously. The assumption is this\n           will succeed, and user code may read from the Router service. Therefore\n           before activation, we need to update router properties storing the current\n           URL and the RouterState, as well as updated the browser URL. All this should\n           happen *before* activating. */\n        tap(function (t) {\n          _this32.currentUrlTree = t.urlAfterRedirects;\n          _this32.rawUrlTree = _this32.urlHandlingStrategy.merge(_this32.currentUrlTree, t.rawUrl);\n          _this32.routerState = t.targetRouterState;\n\n          if (_this32.urlUpdateStrategy === 'deferred') {\n            if (!t.extras.skipLocationChange) {\n              _this32.setBrowserUrl(_this32.rawUrlTree, !!t.extras.replaceUrl, t.id, t.extras.state);\n            }\n\n            _this32.browserUrlTree = t.urlAfterRedirects;\n          }\n        }), activateRoutes(_this32.rootContexts, _this32.routeReuseStrategy, function (evt) {\n          return _this32.triggerEvent(evt);\n        }), tap({\n          next: function next() {\n            completed = true;\n          },\n          complete: function complete() {\n            completed = true;\n          }\n        }), finalize(function () {\n          /* When the navigation stream finishes either through error or success, we\n           * set the `completed` or `errored` flag. However, there are some situations\n           * where we could get here without either of those being set. For instance, a\n           * redirect during NavigationStart. Therefore, this is a catch-all to make\n           * sure the NavigationCancel\n           * event is fired when a navigation gets cancelled but not caught by other\n           * means. */\n          if (!completed && !errored) {\n            // Must reset to current URL tree here to ensure history.state is set. On a\n            // fresh page load, if a new navigation comes in before a successful\n            // navigation completes, there will be nothing in\n            // history.state.navigationId. This can cause sync problems with AngularJS\n            // sync code which looks for a value here in order to determine whether or\n            // not to handle a given popstate event or to leave it to the Angualr\n            // router.\n            _this32.resetUrlToCurrentUrlTree();\n\n            var navCancel = new NavigationCancel(t.id, _this32.serializeUrl(t.extractedUrl), \"Navigation ID \".concat(t.id, \" is not equal to the current navigation id \").concat(_this32.navigationId));\n            eventsSubject.next(navCancel);\n            t.resolve(false);\n          } // currentNavigation should always be reset to null here. If navigation was\n          // successful, lastSuccessfulTransition will have already been set. Therefore\n          // we can safely set currentNavigation to null here.\n\n\n          _this32.currentNavigation = null;\n        }), catchError(function (e) {\n          errored = true;\n          /* This error type is issued during Redirect, and is handled as a\n           * cancellation rather than an error. */\n\n          if (isNavigationCancelingError(e)) {\n            var redirecting = isUrlTree(e.url);\n\n            if (!redirecting) {\n              // Set property only if we're not redirecting. If we landed on a page and\n              // redirect to `/` route, the new navigation is going to see the `/`\n              // isn't a change from the default currentUrlTree and won't navigate.\n              // This is only applicable with initial navigation, so setting\n              // `navigated` only when not redirecting resolves this scenario.\n              _this32.navigated = true;\n\n              _this32.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n            }\n\n            var navCancel = new NavigationCancel(t.id, _this32.serializeUrl(t.extractedUrl), e.message);\n            eventsSubject.next(navCancel); // When redirecting, we need to delay resolving the navigation\n            // promise and push it to the redirect navigation\n\n            if (!redirecting) {\n              t.resolve(false);\n            } else {\n              // setTimeout is required so this navigation finishes with\n              // the return EMPTY below. If it isn't allowed to finish\n              // processing, there can be multiple navigations to the same\n              // URL.\n              setTimeout(function () {\n                var mergedTree = _this32.urlHandlingStrategy.merge(e.url, _this32.rawUrlTree);\n\n                var extras = {\n                  skipLocationChange: t.extras.skipLocationChange,\n                  replaceUrl: _this32.urlUpdateStrategy === 'eager'\n                };\n                return _this32.scheduleNavigation(mergedTree, 'imperative', null, extras, {\n                  resolve: t.resolve,\n                  reject: t.reject,\n                  promise: t.promise\n                });\n              }, 0);\n            }\n            /* All other errors should reset to the router's internal URL reference to\n             * the pre-error state. */\n\n          } else {\n            _this32.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n\n            var navError = new NavigationError(t.id, _this32.serializeUrl(t.extractedUrl), e);\n            eventsSubject.next(navError);\n\n            try {\n              t.resolve(_this32.errorHandler(e));\n            } catch (ee) {\n              t.reject(ee);\n            }\n          }\n\n          return EMPTY;\n        })); // TODO(jasonaden): remove cast once g3 is on updated TypeScript\n      }));\n    }\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n\n  }, {\n    key: \"resetRootComponentType\",\n    value: function resetRootComponentType(rootComponentType) {\n      this.rootComponentType = rootComponentType; // TODO: vsavkin router 4.0 should make the root component set to null\n      // this will simplify the lifecycle of the router.\n\n      this.routerState.root.component = this.rootComponentType;\n    }\n  }, {\n    key: \"getTransition\",\n    value: function getTransition() {\n      var transition = this.transitions.value; // This value needs to be set. Other values such as extractedUrl are set on initial navigation\n      // but the urlAfterRedirects may not get set if we aren't processing the new URL *and* not\n      // processing the previous URL.\n\n      transition.urlAfterRedirects = this.browserUrlTree;\n      return transition;\n    }\n  }, {\n    key: \"setTransition\",\n    value: function setTransition(t) {\n      this.transitions.next(Object.assign(Object.assign({}, this.getTransition()), t));\n    }\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n\n  }, {\n    key: \"initialNavigation\",\n    value: function initialNavigation() {\n      this.setUpLocationChangeListener();\n\n      if (this.navigationId === 0) {\n        this.navigateByUrl(this.location.path(true), {\n          replaceUrl: true\n        });\n      }\n    }\n    /**\n     * Sets up the location change listener. This listener detects navigations triggered from outside\n     * the Router (the browser back/forward buttons, for example) and schedules a corresponding Router\n     * navigation so that the correct events, guards, etc. are triggered.\n     */\n\n  }, {\n    key: \"setUpLocationChangeListener\",\n    value: function setUpLocationChangeListener() {\n      var _this33 = this;\n\n      // Don't need to use Zone.wrap any more, because zone.js\n      // already patch onPopState, so location change callback will\n      // run into ngZone\n      if (!this.locationSubscription) {\n        this.locationSubscription = this.location.subscribe(function (event) {\n          var currentChange = _this33.extractLocationChangeInfoFromEvent(event);\n\n          if (_this33.shouldScheduleNavigation(_this33.lastLocationChangeInfo, currentChange)) {\n            // The `setTimeout` was added in #12160 and is likely to support Angular/AngularJS\n            // hybrid apps.\n            setTimeout(function () {\n              var source = currentChange.source,\n                  state = currentChange.state,\n                  urlTree = currentChange.urlTree;\n              var extras = {\n                replaceUrl: true\n              };\n\n              if (state) {\n                var stateCopy = Object.assign({}, state);\n                delete stateCopy.navigationId;\n\n                if (Object.keys(stateCopy).length !== 0) {\n                  extras.state = stateCopy;\n                }\n              }\n\n              _this33.scheduleNavigation(urlTree, source, state, extras);\n            }, 0);\n          }\n\n          _this33.lastLocationChangeInfo = currentChange;\n        });\n      }\n    }\n    /** Extracts router-related information from a `PopStateEvent`. */\n\n  }, {\n    key: \"extractLocationChangeInfoFromEvent\",\n    value: function extractLocationChangeInfoFromEvent(change) {\n      var _a;\n\n      return {\n        source: change['type'] === 'popstate' ? 'popstate' : 'hashchange',\n        urlTree: this.parseUrl(change['url']),\n        // Navigations coming from Angular router have a navigationId state\n        // property. When this exists, restore the state.\n        state: ((_a = change.state) === null || _a === void 0 ? void 0 : _a.navigationId) ? change.state : null,\n        transitionId: this.getTransition().id\n      };\n    }\n    /**\n     * Determines whether two events triggered by the Location subscription are due to the same\n     * navigation. The location subscription can fire two events (popstate and hashchange) for a\n     * single navigation. The second one should be ignored, that is, we should not schedule another\n     * navigation in the Router.\n     */\n\n  }, {\n    key: \"shouldScheduleNavigation\",\n    value: function shouldScheduleNavigation(previous, current) {\n      if (!previous) return true;\n      var sameDestination = current.urlTree.toString() === previous.urlTree.toString();\n      var eventsOccurredAtSameTime = current.transitionId === previous.transitionId;\n\n      if (!eventsOccurredAtSameTime || !sameDestination) {\n        return true;\n      }\n\n      if (current.source === 'hashchange' && previous.source === 'popstate' || current.source === 'popstate' && previous.source === 'hashchange') {\n        return false;\n      }\n\n      return true;\n    }\n    /** The current URL. */\n\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this.serializeUrl(this.currentUrlTree);\n    }\n    /** The current Navigation object if one exists */\n\n  }, {\n    key: \"getCurrentNavigation\",\n    value: function getCurrentNavigation() {\n      return this.currentNavigation;\n    }\n    /** @internal */\n\n  }, {\n    key: \"triggerEvent\",\n    value: function triggerEvent(event) {\n      this.events.next(event);\n    }\n    /**\n     * Resets the route configuration used for navigation and generating links.\n     *\n     * @param config The route array for the new configuration.\n     *\n     * @usageNotes\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig(config) {\n      validateConfig(config);\n      this.config = config.map(standardizeConfig);\n      this.navigated = false;\n      this.lastSuccessfulId = -1;\n    }\n    /** @nodoc */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.dispose();\n    }\n    /** Disposes of the router. */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.locationSubscription) {\n        this.locationSubscription.unsubscribe();\n        this.locationSubscription = undefined;\n      }\n    }\n    /**\n     * Appends URL segments to the current URL tree to create a new URL tree.\n     *\n     * @param commands An array of URL fragments with which to construct the new URL tree.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL tree or the one provided  in the `relativeTo`\n     * property of the options object, if supplied.\n     * @param navigationExtras Options that control the navigation strategy. This function\n     * only uses properties in `NavigationExtras` that would change the provided URL.\n     * @returns The new URL tree.\n     *\n     * @usageNotes\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it,\n     * // you can do the following:\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n\n  }, {\n    key: \"createUrlTree\",\n    value: function createUrlTree(commands) {\n      var navigationExtras = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var relativeTo = navigationExtras.relativeTo,\n          queryParams = navigationExtras.queryParams,\n          fragment = navigationExtras.fragment,\n          preserveQueryParams = navigationExtras.preserveQueryParams,\n          queryParamsHandling = navigationExtras.queryParamsHandling,\n          preserveFragment = navigationExtras.preserveFragment;\n\n      if (isDevMode() && preserveQueryParams && console && console.warn) {\n        console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n      }\n\n      var a = relativeTo || this.routerState.root;\n      var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n      var q = null;\n\n      if (queryParamsHandling) {\n        switch (queryParamsHandling) {\n          case 'merge':\n            q = Object.assign(Object.assign({}, this.currentUrlTree.queryParams), queryParams);\n            break;\n\n          case 'preserve':\n            q = this.currentUrlTree.queryParams;\n            break;\n\n          default:\n            q = queryParams || null;\n        }\n      } else {\n        q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n      }\n\n      if (q !== null) {\n        q = this.removeEmptyProps(q);\n      }\n\n      return _createUrlTree(a, this.currentUrlTree, commands, q, f);\n    }\n    /**\n     * Navigates to a view using an absolute route path.\n     *\n     * @param url An absolute path for a defined route. The function does not apply any delta to the\n     *     current URL.\n     * @param extras An object containing properties that modify the navigation strategy.\n     * The function ignores any properties in the `NavigationExtras` that would change the\n     * provided URL.\n     *\n     * @returns A Promise that resolves to 'true' when navigation succeeds,\n     * to 'false' when navigation fails, or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to an absolute path.\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/router)\n     *\n     */\n\n  }, {\n    key: \"navigateByUrl\",\n    value: function navigateByUrl(url) {\n      var extras = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        skipLocationChange: false\n      };\n\n      if (isDevMode() && this.isNgZoneEnabled && !NgZone.isInAngularZone()) {\n        this.console.warn(\"Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?\");\n      }\n\n      var urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n      var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n      return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n    }\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * @param commands An array of URL fragments with which to construct the target URL.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL or the one provided  in the `relativeTo` property\n     * of the options object, if supplied.\n     * @param extras An options object that determines how the URL should be constructed or\n     *     interpreted.\n     *\n     * @returns A Promise that resolves to `true` when navigation succeeds, to `false` when navigation\n     *     fails,\n     * or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to a dynamic route path relative to the current URL.\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL, overriding the default behavior\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/router)\n     *\n     */\n\n  }, {\n    key: \"navigate\",\n    value: function navigate(commands) {\n      var extras = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        skipLocationChange: false\n      };\n      validateCommands(commands);\n      return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    }\n    /** Serializes a `UrlTree` into a string */\n\n  }, {\n    key: \"serializeUrl\",\n    value: function serializeUrl(url) {\n      return this.urlSerializer.serialize(url);\n    }\n    /** Parses a string into a `UrlTree` */\n\n  }, {\n    key: \"parseUrl\",\n    value: function parseUrl(url) {\n      var urlTree;\n\n      try {\n        urlTree = this.urlSerializer.parse(url);\n      } catch (e) {\n        urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n      }\n\n      return urlTree;\n    }\n    /** Returns whether the url is activated */\n\n  }, {\n    key: \"isActive\",\n    value: function isActive(url, exact) {\n      if (isUrlTree(url)) {\n        return containsTree(this.currentUrlTree, url, exact);\n      }\n\n      var urlTree = this.parseUrl(url);\n      return containsTree(this.currentUrlTree, urlTree, exact);\n    }\n  }, {\n    key: \"removeEmptyProps\",\n    value: function removeEmptyProps(params) {\n      return Object.keys(params).reduce(function (result, key) {\n        var value = params[key];\n\n        if (value !== null && value !== undefined) {\n          result[key] = value;\n        }\n\n        return result;\n      }, {});\n    }\n  }, {\n    key: \"processNavigations\",\n    value: function processNavigations() {\n      var _this34 = this;\n\n      this.navigations.subscribe(function (t) {\n        _this34.navigated = true;\n        _this34.lastSuccessfulId = t.id;\n\n        _this34.events.next(new NavigationEnd(t.id, _this34.serializeUrl(t.extractedUrl), _this34.serializeUrl(_this34.currentUrlTree)));\n\n        _this34.lastSuccessfulNavigation = _this34.currentNavigation;\n        _this34.currentNavigation = null;\n        t.resolve(true);\n      }, function (e) {\n        _this34.console.warn(\"Unhandled Navigation Error: \");\n      });\n    }\n  }, {\n    key: \"scheduleNavigation\",\n    value: function scheduleNavigation(rawUrl, source, restoredState, extras, priorPromise) {\n      // * Imperative navigations (router.navigate) might trigger additional navigations to the same\n      //   URL via a popstate event and the locationChangeListener. We should skip these duplicate\n      //   navs. Duplicates may also be triggered by attempts to sync AngularJS and Angular router\n      //   states.\n      // * Imperative navigations can be cancelled by router guards, meaning the URL won't change. If\n      //   the user follows that with a navigation using the back/forward button or manual URL change,\n      //   the destination may be the same as the previous imperative attempt. We should not skip\n      //   these navigations because it's a separate case from the one above -- it's not a duplicate\n      //   navigation.\n      var lastNavigation = this.getTransition(); // We don't want to skip duplicate successful navs if they're imperative because\n      // onSameUrlNavigation could be 'reload' (so the duplicate is intended).\n\n      var browserNavPrecededByRouterNav = source !== 'imperative' && (lastNavigation === null || lastNavigation === void 0 ? void 0 : lastNavigation.source) === 'imperative';\n      var lastNavigationSucceeded = this.lastSuccessfulId === lastNavigation.id; // If the last navigation succeeded or is in flight, we can use the rawUrl as the comparison.\n      // However, if it failed, we should compare to the final result (urlAfterRedirects).\n\n      var lastNavigationUrl = lastNavigationSucceeded || this.currentNavigation ? lastNavigation.rawUrl : lastNavigation.urlAfterRedirects;\n      var duplicateNav = lastNavigationUrl.toString() === rawUrl.toString();\n\n      if (browserNavPrecededByRouterNav && duplicateNav) {\n        return Promise.resolve(true); // return value is not used\n      }\n\n      var resolve;\n      var reject;\n      var promise;\n\n      if (priorPromise) {\n        resolve = priorPromise.resolve;\n        reject = priorPromise.reject;\n        promise = priorPromise.promise;\n      } else {\n        promise = new Promise(function (res, rej) {\n          resolve = res;\n          reject = rej;\n        });\n      }\n\n      var id = ++this.navigationId;\n      this.setTransition({\n        id: id,\n        source: source,\n        restoredState: restoredState,\n        currentUrlTree: this.currentUrlTree,\n        currentRawUrl: this.rawUrlTree,\n        rawUrl: rawUrl,\n        extras: extras,\n        resolve: resolve,\n        reject: reject,\n        promise: promise,\n        currentSnapshot: this.routerState.snapshot,\n        currentRouterState: this.routerState\n      }); // Make sure that the error is propagated even though `processNavigations` catch\n      // handler does not rethrow\n\n      return promise.catch(function (e) {\n        return Promise.reject(e);\n      });\n    }\n  }, {\n    key: \"setBrowserUrl\",\n    value: function setBrowserUrl(url, replaceUrl, id, state) {\n      var path = this.urlSerializer.serialize(url);\n      state = state || {};\n\n      if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n        // TODO(jasonaden): Remove first `navigationId` and rely on `ng` namespace.\n        this.location.replaceState(path, '', Object.assign(Object.assign({}, state), {\n          navigationId: id\n        }));\n      } else {\n        this.location.go(path, '', Object.assign(Object.assign({}, state), {\n          navigationId: id\n        }));\n      }\n    }\n  }, {\n    key: \"resetStateAndUrl\",\n    value: function resetStateAndUrl(storedState, storedUrl, rawUrl) {\n      this.routerState = storedState;\n      this.currentUrlTree = storedUrl;\n      this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n      this.resetUrlToCurrentUrlTree();\n    }\n  }, {\n    key: \"resetUrlToCurrentUrlTree\",\n    value: function resetUrlToCurrentUrlTree() {\n      this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', {\n        navigationId: this.lastSuccessfulId\n      });\n    }\n  }]);\n\n  return Router;\n}();\n\nRouter.ɵfac = function Router_Factory(t) {\n  return new (t || Router)(ɵngcc0.ɵɵinject(ɵngcc0.Type), ɵngcc0.ɵɵinject(UrlSerializer), ɵngcc0.ɵɵinject(ChildrenOutletContexts), ɵngcc0.ɵɵinject(ɵngcc1.Location), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgModuleFactoryLoader), ɵngcc0.ɵɵinject(ɵngcc0.Compiler), ɵngcc0.ɵɵinject(undefined));\n};\n\nRouter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: Router,\n  factory: Router.ɵfac\n});\n\nRouter.ctorParameters = function () {\n  return [{\n    type: Type\n  }, {\n    type: UrlSerializer\n  }, {\n    type: ChildrenOutletContexts\n  }, {\n    type: Location\n  }, {\n    type: Injector\n  }, {\n    type: NgModuleFactoryLoader\n  }, {\n    type: Compiler\n  }, {\n    type: undefined\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Router, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.Type\n    }, {\n      type: UrlSerializer\n    }, {\n      type: ChildrenOutletContexts\n    }, {\n      type: ɵngcc1.Location\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.NgModuleFactoryLoader\n    }, {\n      type: ɵngcc0.Compiler\n    }, {\n      type: undefined\n    }];\n  }, null);\n})();\n\nfunction validateCommands(commands) {\n  for (var i = 0; i < commands.length; i++) {\n    var cmd = commands[i];\n\n    if (cmd == null) {\n      throw new Error(\"The requested path contains \".concat(cmd, \" segment at index \").concat(i));\n    }\n  }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description\n *\n * When applied to an element in a template, makes that element a link\n * that initiates navigation to a route. Navigation opens one or more routed components\n * in one or more `<router-outlet>` locations on the page.\n *\n * Given a route configuration `[{ path: 'user/:name', component: UserCmp }]`,\n * the following creates a static link to the route:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * You can use dynamic values to generate the link.\n * For a dynamic link, pass an array of path segments,\n * followed by the params for each segment.\n * For example, `['/team', teamId, 'user', userName, {details: true}]`\n * generates a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one term and combined with dynamic segements.\n * For example, `['/team/11/user', userName, {details: true}]`\n *\n * The input that you provide to the link is treated as a delta to the current URL.\n * For instance, suppose the current URL is `/user/(box//aux:team)`.\n * The link `<a [routerLink]=\"['/user/jim']\">Jim</a>` creates the URL\n * `/user/(jim//aux:team)`.\n * See {@link Router#createUrlTree createUrlTree} for more information.\n *\n * @usageNotes\n *\n * You can use absolute or relative paths in a link, set query parameters,\n * control how parameters are handled, and keep a history of navigation states.\n *\n * ### Relative link paths\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * * If the first segment begins with `/`, the router looks up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router\n *   looks in the children of the current activated route.\n * * If the first segment begins with `../`, the router goes up one level in the route tree.\n *\n * ### Setting and handling query params and fragments\n *\n * The following link adds a query parameter and a fragment to the generated URL:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * By default, the directive constructs the new URL using the given query parameters.\n * The example generates the link: `/user/bob?debug=true#education`.\n *\n * You can instruct the directive to handle query parameters differently\n * by specifying the `queryParamsHandling` option in the link.\n * Allowed values are:\n *\n *  - `'merge'`: Merge the given `queryParams` into the current query params.\n *  - `'preserve'`: Preserve the current query params.\n *\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * See {@link NavigationExtras.queryParamsHandling NavigationExtras#queryParamsHandling}.\n *\n * ### Preserving navigation history\n *\n * You can provide a `state` value to be persisted to the browser's\n * [`History.state` property](https://developer.mozilla.org/en-US/docs/Web/API/History#Properties).\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n *   link to user component\n * </a>\n * ```\n *\n * Use {@link Router.getCurrentNavigation() Router#getCurrentNavigation} to retrieve a saved\n * navigation-state value. For example, to capture the `tracingId` during the `NavigationStart`\n * event:\n *\n * ```\n * // Get NavigationStart events\n * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n *   const navigation = router.getCurrentNavigation();\n *   tracingService.trace({id: navigation.extras.state.tracingId});\n * });\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\n\n\nvar RouterLink = /*#__PURE__*/function () {\n  function RouterLink(router, route, tabIndex, renderer, el) {\n    _classCallCheck(this, RouterLink);\n\n    this.router = router;\n    this.route = route;\n    this.commands = [];\n    /** @internal */\n\n    this.onChanges = new Subject();\n\n    if (tabIndex == null) {\n      renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n    }\n  }\n  /** @nodoc */\n\n\n  _createClass(RouterLink, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      // This is subscribed to by `RouterLinkActive` so that it knows to update when there are changes\n      // to the RouterLinks it's tracking.\n      this.onChanges.next(this);\n    }\n    /**\n     * Commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n     *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n     *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n     *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`\n     * @see {@link Router#createUrlTree Router#createUrlTree}\n     */\n\n  }, {\n    key: \"routerLink\",\n    set: function set(commands) {\n      if (commands != null) {\n        this.commands = Array.isArray(commands) ? commands : [commands];\n      } else {\n        this.commands = [];\n      }\n    }\n    /**\n     * @deprecated As of Angular v4.0 use `queryParamsHandling` instead.\n     */\n\n  }, {\n    key: \"preserveQueryParams\",\n    set: function set(value) {\n      if (isDevMode() && console && console.warn) {\n        console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n      }\n\n      this.preserve = value;\n    }\n    /** @nodoc */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      var extras = {\n        skipLocationChange: attrBoolValue(this.skipLocationChange),\n        replaceUrl: attrBoolValue(this.replaceUrl),\n        state: this.state\n      };\n      this.router.navigateByUrl(this.urlTree, extras);\n      return true;\n    }\n  }, {\n    key: \"urlTree\",\n    get: function get() {\n      return this.router.createUrlTree(this.commands, {\n        relativeTo: this.route,\n        queryParams: this.queryParams,\n        fragment: this.fragment,\n        preserveQueryParams: attrBoolValue(this.preserve),\n        queryParamsHandling: this.queryParamsHandling,\n        preserveFragment: attrBoolValue(this.preserveFragment)\n      });\n    }\n  }]);\n\n  return RouterLink;\n}();\n\nRouterLink.ɵfac = function RouterLink_Factory(t) {\n  return new (t || RouterLink)(ɵngcc0.ɵɵdirectiveInject(Router), ɵngcc0.ɵɵdirectiveInject(ActivatedRoute), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nRouterLink.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: RouterLink,\n  selectors: [[\"\", \"routerLink\", \"\", 5, \"a\", 5, \"area\"]],\n  hostBindings: function RouterLink_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function RouterLink_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    routerLink: \"routerLink\",\n    preserveQueryParams: \"preserveQueryParams\",\n    queryParams: \"queryParams\",\n    fragment: \"fragment\",\n    queryParamsHandling: \"queryParamsHandling\",\n    preserveFragment: \"preserveFragment\",\n    skipLocationChange: \"skipLocationChange\",\n    replaceUrl: \"replaceUrl\",\n    state: \"state\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nRouterLink.ctorParameters = function () {\n  return [{\n    type: Router\n  }, {\n    type: ActivatedRoute\n  }, {\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n\nRouterLink.propDecorators = {\n  queryParams: [{\n    type: Input\n  }],\n  fragment: [{\n    type: Input\n  }],\n  queryParamsHandling: [{\n    type: Input\n  }],\n  preserveFragment: [{\n    type: Input\n  }],\n  skipLocationChange: [{\n    type: Input\n  }],\n  replaceUrl: [{\n    type: Input\n  }],\n  state: [{\n    type: Input\n  }],\n  routerLink: [{\n    type: Input\n  }],\n  preserveQueryParams: [{\n    type: Input\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RouterLink, [{\n    type: Directive,\n    args: [{\n      selector: ':not(a):not(area)[routerLink]'\n    }]\n  }], function () {\n    return [{\n      type: Router\n    }, {\n      type: ActivatedRoute\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    routerLink: [{\n      type: Input\n    }],\n    preserveQueryParams: [{\n      type: Input\n    }],\n\n    /** @nodoc */\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    queryParams: [{\n      type: Input\n    }],\n    fragment: [{\n      type: Input\n    }],\n    queryParamsHandling: [{\n      type: Input\n    }],\n    preserveFragment: [{\n      type: Input\n    }],\n    skipLocationChange: [{\n      type: Input\n    }],\n    replaceUrl: [{\n      type: Input\n    }],\n    state: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\n\n\nvar RouterLinkWithHref = /*#__PURE__*/function () {\n  function RouterLinkWithHref(router, route, locationStrategy) {\n    var _this35 = this;\n\n    _classCallCheck(this, RouterLinkWithHref);\n\n    this.router = router;\n    this.route = route;\n    this.locationStrategy = locationStrategy;\n    this.commands = [];\n    /** @internal */\n\n    this.onChanges = new Subject();\n    this.subscription = router.events.subscribe(function (s) {\n      if (s instanceof NavigationEnd) {\n        _this35.updateTargetUrlAndHref();\n      }\n    });\n  }\n  /**\n   * Commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n   *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n   *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n   *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`\n   * @see {@link Router#createUrlTree Router#createUrlTree}\n   */\n\n\n  _createClass(RouterLinkWithHref, [{\n    key: \"routerLink\",\n    set: function set(commands) {\n      if (commands != null) {\n        this.commands = Array.isArray(commands) ? commands : [commands];\n      } else {\n        this.commands = [];\n      }\n    }\n    /**\n     * @deprecated As of Angular v4.0 use `queryParamsHandling` instead.\n     */\n\n  }, {\n    key: \"preserveQueryParams\",\n    set: function set(value) {\n      if (isDevMode() && console && console.warn) {\n        console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n      }\n\n      this.preserve = value;\n    }\n    /** @nodoc */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.updateTargetUrlAndHref();\n      this.onChanges.next(this);\n    }\n    /** @nodoc */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n    /** @nodoc */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(button, ctrlKey, shiftKey, altKey, metaKey) {\n      if (button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {\n        return true;\n      }\n\n      if (typeof this.target === 'string' && this.target != '_self') {\n        return true;\n      }\n\n      var extras = {\n        skipLocationChange: attrBoolValue(this.skipLocationChange),\n        replaceUrl: attrBoolValue(this.replaceUrl),\n        state: this.state\n      };\n      this.router.navigateByUrl(this.urlTree, extras);\n      return false;\n    }\n  }, {\n    key: \"updateTargetUrlAndHref\",\n    value: function updateTargetUrlAndHref() {\n      this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    }\n  }, {\n    key: \"urlTree\",\n    get: function get() {\n      return this.router.createUrlTree(this.commands, {\n        relativeTo: this.route,\n        queryParams: this.queryParams,\n        fragment: this.fragment,\n        preserveQueryParams: attrBoolValue(this.preserve),\n        queryParamsHandling: this.queryParamsHandling,\n        preserveFragment: attrBoolValue(this.preserveFragment)\n      });\n    }\n  }]);\n\n  return RouterLinkWithHref;\n}();\n\nRouterLinkWithHref.ɵfac = function RouterLinkWithHref_Factory(t) {\n  return new (t || RouterLinkWithHref)(ɵngcc0.ɵɵdirectiveInject(Router), ɵngcc0.ɵɵdirectiveInject(ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocationStrategy));\n};\n\nRouterLinkWithHref.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: RouterLinkWithHref,\n  selectors: [[\"a\", \"routerLink\", \"\"], [\"area\", \"routerLink\", \"\"]],\n  hostVars: 2,\n  hostBindings: function RouterLinkWithHref_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function RouterLinkWithHref_click_HostBindingHandler($event) {\n        return ctx.onClick($event.button, $event.ctrlKey, $event.shiftKey, $event.altKey, $event.metaKey);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"href\", ctx.href, ɵngcc0.ɵɵsanitizeUrl);\n      ɵngcc0.ɵɵattribute(\"target\", ctx.target);\n    }\n  },\n  inputs: {\n    routerLink: \"routerLink\",\n    preserveQueryParams: \"preserveQueryParams\",\n    target: \"target\",\n    queryParams: \"queryParams\",\n    fragment: \"fragment\",\n    queryParamsHandling: \"queryParamsHandling\",\n    preserveFragment: \"preserveFragment\",\n    skipLocationChange: \"skipLocationChange\",\n    replaceUrl: \"replaceUrl\",\n    state: \"state\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nRouterLinkWithHref.ctorParameters = function () {\n  return [{\n    type: Router\n  }, {\n    type: ActivatedRoute\n  }, {\n    type: LocationStrategy\n  }];\n};\n\nRouterLinkWithHref.propDecorators = {\n  target: [{\n    type: HostBinding,\n    args: ['attr.target']\n  }, {\n    type: Input\n  }],\n  queryParams: [{\n    type: Input\n  }],\n  fragment: [{\n    type: Input\n  }],\n  queryParamsHandling: [{\n    type: Input\n  }],\n  preserveFragment: [{\n    type: Input\n  }],\n  skipLocationChange: [{\n    type: Input\n  }],\n  replaceUrl: [{\n    type: Input\n  }],\n  state: [{\n    type: Input\n  }],\n  href: [{\n    type: HostBinding\n  }],\n  routerLink: [{\n    type: Input\n  }],\n  preserveQueryParams: [{\n    type: Input\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event.button', '$event.ctrlKey', '$event.shiftKey', '$event.altKey', '$event.metaKey']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RouterLinkWithHref, [{\n    type: Directive,\n    args: [{\n      selector: 'a[routerLink],area[routerLink]'\n    }]\n  }], function () {\n    return [{\n      type: Router\n    }, {\n      type: ActivatedRoute\n    }, {\n      type: ɵngcc1.LocationStrategy\n    }];\n  }, {\n    routerLink: [{\n      type: Input\n    }],\n    preserveQueryParams: [{\n      type: Input\n    }],\n\n    /** @nodoc */\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event.button', '$event.ctrlKey', '$event.shiftKey', '$event.altKey', '$event.metaKey']]\n    }],\n    href: [{\n      type: HostBinding\n    }],\n    target: [{\n      type: HostBinding,\n      args: ['attr.target']\n    }, {\n      type: Input\n    }],\n    queryParams: [{\n      type: Input\n    }],\n    fragment: [{\n      type: Input\n    }],\n    queryParamsHandling: [{\n      type: Input\n    }],\n    preserveFragment: [{\n      type: Input\n    }],\n    skipLocationChange: [{\n      type: Input\n    }],\n    replaceUrl: [{\n      type: Input\n    }],\n    state: [{\n      type: Input\n    }]\n  });\n})();\n\nfunction attrBoolValue(s) {\n  return s === '' || !!s;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n *\n * @description\n *\n * Tracks whether the linked route of an element is currently active, and allows you\n * to specify one or more CSS classes to add to the element when the linked route\n * is active.\n *\n * Use this directive to create a visual distinction for elements associated with an active route.\n * For example, the following code highlights the word \"Bob\" when the the router\n * activates the associated route:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * Whenever the URL is either '/user' or '/user/bob', the \"active-link\" class is\n * added to the anchor tag. If the URL changes, the class is removed.\n *\n * You can set more than one class using a space-separated string or an array.\n * For example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * To add the classes only when the URL matches the link exactly, add the option `exact: true`:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * To directly check the `isActive` status of the link, assign the `RouterLinkActive`\n * instance to a template variable.\n * For example, the following checks the status without assigning any CSS classes:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * You can apply the `RouterLinkActive` directive to an ancestor of linked elements.\n * For example, the following sets the active-link class on the `<div>`  parent tag\n * when the URL is either '/user/jim' or '/user/bob'.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\n\n\nvar RouterLinkActive = /*#__PURE__*/function () {\n  function RouterLinkActive(router, element, renderer, cdr, link, linkWithHref) {\n    var _this36 = this;\n\n    _classCallCheck(this, RouterLinkActive);\n\n    this.router = router;\n    this.element = element;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.link = link;\n    this.linkWithHref = linkWithHref;\n    this.classes = [];\n    this.isActive = false;\n    this.routerLinkActiveOptions = {\n      exact: false\n    };\n    this.routerEventsSubscription = router.events.subscribe(function (s) {\n      if (s instanceof NavigationEnd) {\n        _this36.update();\n      }\n    });\n  }\n  /** @nodoc */\n\n\n  _createClass(RouterLinkActive, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this37 = this;\n\n      // `of(null)` is used to force subscribe body to execute once immediately (like `startWith`).\n      from([this.links.changes, this.linksWithHrefs.changes, of(null)]).pipe(mergeAll()).subscribe(function (_) {\n        _this37.update();\n\n        _this37.subscribeToEachLinkOnChanges();\n      });\n    }\n  }, {\n    key: \"subscribeToEachLinkOnChanges\",\n    value: function subscribeToEachLinkOnChanges() {\n      var _this38 = this;\n\n      var _a;\n\n      (_a = this.linkInputChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n      var allLinkChanges = [].concat(_toConsumableArray(this.links.toArray()), _toConsumableArray(this.linksWithHrefs.toArray()), [this.link, this.linkWithHref]).filter(function (link) {\n        return !!link;\n      }).map(function (link) {\n        return link.onChanges;\n      });\n      this.linkInputChangesSubscription = from(allLinkChanges).pipe(mergeAll()).subscribe(function (link) {\n        if (_this38.isActive !== _this38.isLinkActive(_this38.router)(link)) {\n          _this38.update();\n        }\n      });\n    }\n  }, {\n    key: \"routerLinkActive\",\n    set: function set(data) {\n      var classes = Array.isArray(data) ? data : data.split(' ');\n      this.classes = classes.filter(function (c) {\n        return !!c;\n      });\n    }\n    /** @nodoc */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n    /** @nodoc */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var _a;\n\n      this.routerEventsSubscription.unsubscribe();\n      (_a = this.linkInputChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this39 = this;\n\n      if (!this.links || !this.linksWithHrefs || !this.router.navigated) return;\n      Promise.resolve().then(function () {\n        var hasActiveLinks = _this39.hasActiveLinks();\n\n        if (_this39.isActive !== hasActiveLinks) {\n          _this39.isActive = hasActiveLinks;\n\n          _this39.cdr.markForCheck();\n\n          _this39.classes.forEach(function (c) {\n            if (hasActiveLinks) {\n              _this39.renderer.addClass(_this39.element.nativeElement, c);\n            } else {\n              _this39.renderer.removeClass(_this39.element.nativeElement, c);\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"isLinkActive\",\n    value: function isLinkActive(router) {\n      var _this40 = this;\n\n      return function (link) {\n        return router.isActive(link.urlTree, _this40.routerLinkActiveOptions.exact);\n      };\n    }\n  }, {\n    key: \"hasActiveLinks\",\n    value: function hasActiveLinks() {\n      var isActiveCheckFn = this.isLinkActive(this.router);\n      return this.link && isActiveCheckFn(this.link) || this.linkWithHref && isActiveCheckFn(this.linkWithHref) || this.links.some(isActiveCheckFn) || this.linksWithHrefs.some(isActiveCheckFn);\n    }\n  }]);\n\n  return RouterLinkActive;\n}();\n\nRouterLinkActive.ɵfac = function RouterLinkActive_Factory(t) {\n  return new (t || RouterLinkActive)(ɵngcc0.ɵɵdirectiveInject(Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(RouterLink, 8), ɵngcc0.ɵɵdirectiveInject(RouterLinkWithHref, 8));\n};\n\nRouterLinkActive.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: RouterLinkActive,\n  selectors: [[\"\", \"routerLinkActive\", \"\"]],\n  contentQueries: function RouterLinkActive_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, RouterLink, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, RouterLinkWithHref, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.links = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.linksWithHrefs = _t);\n    }\n  },\n  inputs: {\n    routerLinkActiveOptions: \"routerLinkActiveOptions\",\n    routerLinkActive: \"routerLinkActive\"\n  },\n  exportAs: [\"routerLinkActive\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nRouterLinkActive.ctorParameters = function () {\n  return [{\n    type: Router\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: RouterLink,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: RouterLinkWithHref,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nRouterLinkActive.propDecorators = {\n  links: [{\n    type: ContentChildren,\n    args: [RouterLink, {\n      descendants: true\n    }]\n  }],\n  linksWithHrefs: [{\n    type: ContentChildren,\n    args: [RouterLinkWithHref, {\n      descendants: true\n    }]\n  }],\n  routerLinkActiveOptions: [{\n    type: Input\n  }],\n  routerLinkActive: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RouterLinkActive, [{\n    type: Directive,\n    args: [{\n      selector: '[routerLinkActive]',\n      exportAs: 'routerLinkActive'\n    }]\n  }], function () {\n    return [{\n      type: Router\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: RouterLink,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: RouterLinkWithHref,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    routerLinkActiveOptions: [{\n      type: Input\n    }],\n    routerLinkActive: [{\n      type: Input\n    }],\n    links: [{\n      type: ContentChildren,\n      args: [RouterLink, {\n        descendants: true\n      }]\n    }],\n    linksWithHrefs: [{\n      type: ContentChildren,\n      args: [RouterLinkWithHref, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * Each outlet can have a unique name, determined by the optional `name` attribute.\n * The name cannot be set or changed dynamically. If not set, default value is \"primary\".\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * Named outlets can be the targets of secondary routes.\n * The `Route` object for a secondary route has an `outlet` property to identify the target outlet:\n *\n * `{path: <base-path>, component: <component>, outlet: <target_outlet_name>}`\n *\n * Using named outlets and secondary routes, you can target multiple outlets in\n * the same `RouterLink` directive.\n *\n * The router keeps track of separate branches in a navigation tree for each named outlet and\n * generates a representation of that tree in the URL.\n * The URL for a secondary route uses the following syntax to specify both the primary and secondary\n * routes at the same time:\n *\n * `http://base-path/primary-route-path(outlet-name:route-path)`\n *\n * A router outlet emits an activate event when a new component is instantiated,\n * and a deactivate event when a component is destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n *\n * @see [Routing tutorial](guide/router-tutorial-toh#named-outlets \"Example of a named\n * outlet and secondary route configuration\").\n * @see `RouterLink`\n * @see `Route`\n * @ngModule RouterModule\n *\n * @publicApi\n */\n\n\nvar RouterOutlet = /*#__PURE__*/function () {\n  function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n    _classCallCheck(this, RouterOutlet);\n\n    this.parentContexts = parentContexts;\n    this.location = location;\n    this.resolver = resolver;\n    this.changeDetector = changeDetector;\n    this.activated = null;\n    this._activatedRoute = null;\n    this.activateEvents = new EventEmitter();\n    this.deactivateEvents = new EventEmitter();\n    this.name = name || PRIMARY_OUTLET;\n    parentContexts.onChildOutletCreated(this.name, this);\n  }\n  /** @nodoc */\n\n\n  _createClass(RouterOutlet, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.parentContexts.onChildOutletDestroyed(this.name);\n    }\n    /** @nodoc */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (!this.activated) {\n        // If the outlet was not instantiated at the time the route got activated we need to populate\n        // the outlet when it is initialized (ie inside a NgIf)\n        var context = this.parentContexts.getContext(this.name);\n\n        if (context && context.route) {\n          if (context.attachRef) {\n            // `attachRef` is populated when there is an existing component to mount\n            this.attach(context.attachRef, context.route);\n          } else {\n            // otherwise the component defined in the configuration is created\n            this.activateWith(context.route, context.resolver || null);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isActivated\",\n    get: function get() {\n      return !!this.activated;\n    }\n  }, {\n    key: \"component\",\n    get: function get() {\n      if (!this.activated) throw new Error('Outlet is not activated');\n      return this.activated.instance;\n    }\n  }, {\n    key: \"activatedRoute\",\n    get: function get() {\n      if (!this.activated) throw new Error('Outlet is not activated');\n      return this._activatedRoute;\n    }\n  }, {\n    key: \"activatedRouteData\",\n    get: function get() {\n      if (this._activatedRoute) {\n        return this._activatedRoute.snapshot.data;\n      }\n\n      return {};\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      if (!this.activated) throw new Error('Outlet is not activated');\n      this.location.detach();\n      var cmp = this.activated;\n      this.activated = null;\n      this._activatedRoute = null;\n      return cmp;\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n\n  }, {\n    key: \"attach\",\n    value: function attach(ref, activatedRoute) {\n      this.activated = ref;\n      this._activatedRoute = activatedRoute;\n      this.location.insert(ref.hostView);\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      if (this.activated) {\n        var c = this.component;\n        this.activated.destroy();\n        this.activated = null;\n        this._activatedRoute = null;\n        this.deactivateEvents.emit(c);\n      }\n    }\n  }, {\n    key: \"activateWith\",\n    value: function activateWith(activatedRoute, resolver) {\n      if (this.isActivated) {\n        throw new Error('Cannot activate an already activated outlet');\n      }\n\n      this._activatedRoute = activatedRoute;\n      var snapshot = activatedRoute._futureSnapshot;\n      var component = snapshot.routeConfig.component;\n      resolver = resolver || this.resolver;\n      var factory = resolver.resolveComponentFactory(component);\n      var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n      var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n      this.activated = this.location.createComponent(factory, this.location.length, injector); // Calling `markForCheck` to make sure we will run the change detection when the\n      // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n\n      this.changeDetector.markForCheck();\n      this.activateEvents.emit(this.activated.instance);\n    }\n  }]);\n\n  return RouterOutlet;\n}();\n\nRouterOutlet.ɵfac = function RouterOutlet_Factory(t) {\n  return new (t || RouterOutlet)(ɵngcc0.ɵɵdirectiveInject(ChildrenOutletContexts), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinjectAttribute('name'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nRouterOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: RouterOutlet,\n  selectors: [[\"router-outlet\"]],\n  outputs: {\n    activateEvents: \"activate\",\n    deactivateEvents: \"deactivate\"\n  },\n  exportAs: [\"outlet\"]\n});\n\nRouterOutlet.ctorParameters = function () {\n  return [{\n    type: ChildrenOutletContexts\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['name']\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nRouterOutlet.propDecorators = {\n  activateEvents: [{\n    type: Output,\n    args: ['activate']\n  }],\n  deactivateEvents: [{\n    type: Output,\n    args: ['deactivate']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RouterOutlet, [{\n    type: Directive,\n    args: [{\n      selector: 'router-outlet',\n      exportAs: 'outlet'\n    }]\n  }], function () {\n    return [{\n      type: ChildrenOutletContexts\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['name']\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    activateEvents: [{\n      type: Output,\n      args: ['activate']\n    }],\n    deactivateEvents: [{\n      type: Output,\n      args: ['deactivate']\n    }]\n  });\n})();\n\nvar OutletInjector = /*#__PURE__*/function () {\n  function OutletInjector(route, childContexts, parent) {\n    _classCallCheck(this, OutletInjector);\n\n    this.route = route;\n    this.childContexts = childContexts;\n    this.parent = parent;\n  }\n\n  _createClass(OutletInjector, [{\n    key: \"get\",\n    value: function get(token, notFoundValue) {\n      if (token === ActivatedRoute) {\n        return this.route;\n      }\n\n      if (token === ChildrenOutletContexts) {\n        return this.childContexts;\n      }\n\n      return this.parent.get(token, notFoundValue);\n    }\n  }]);\n\n  return OutletInjector;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @publicApi\n */\n\n\nvar PreloadingStrategy = function PreloadingStrategy() {\n  _classCallCheck(this, PreloadingStrategy);\n};\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouterModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @publicApi\n */\n\n\nvar PreloadAllModules = /*#__PURE__*/function () {\n  function PreloadAllModules() {\n    _classCallCheck(this, PreloadAllModules);\n  }\n\n  _createClass(PreloadAllModules, [{\n    key: \"preload\",\n    value: function preload(route, fn) {\n      return fn().pipe(catchError(function () {\n        return of(null);\n      }));\n    }\n  }]);\n\n  return PreloadAllModules;\n}();\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @publicApi\n */\n\n\nvar NoPreloading = /*#__PURE__*/function () {\n  function NoPreloading() {\n    _classCallCheck(this, NoPreloading);\n  }\n\n  _createClass(NoPreloading, [{\n    key: \"preload\",\n    value: function preload(route, fn) {\n      return of(null);\n    }\n  }]);\n\n  return NoPreloading;\n}();\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * @publicApi\n */\n\n\nvar RouterPreloader = /*#__PURE__*/function () {\n  function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n    _classCallCheck(this, RouterPreloader);\n\n    this.router = router;\n    this.injector = injector;\n    this.preloadingStrategy = preloadingStrategy;\n\n    var onStartLoad = function onStartLoad(r) {\n      return router.triggerEvent(new RouteConfigLoadStart(r));\n    };\n\n    var onEndLoad = function onEndLoad(r) {\n      return router.triggerEvent(new RouteConfigLoadEnd(r));\n    };\n\n    this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n  }\n\n  _createClass(RouterPreloader, [{\n    key: \"setUpPreloading\",\n    value: function setUpPreloading() {\n      var _this41 = this;\n\n      this.subscription = this.router.events.pipe(filter(function (e) {\n        return e instanceof NavigationEnd;\n      }), concatMap(function () {\n        return _this41.preload();\n      })).subscribe(function () {});\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      var ngModule = this.injector.get(NgModuleRef);\n      return this.processRoutes(ngModule, this.router.config);\n    }\n    /** @nodoc */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"processRoutes\",\n    value: function processRoutes(ngModule, routes) {\n      var res = [];\n\n      var _iterator10 = _createForOfIteratorHelper(routes),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var route = _step10.value;\n\n          // we already have the config loaded, just recurse\n          if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n            var childConfig = route._loadedConfig;\n            res.push(this.processRoutes(childConfig.module, childConfig.routes)); // no config loaded, fetch the config\n          } else if (route.loadChildren && !route.canLoad) {\n            res.push(this.preloadConfig(ngModule, route)); // recurse into children\n          } else if (route.children) {\n            res.push(this.processRoutes(ngModule, route.children));\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      return from(res).pipe(mergeAll(), map(function (_) {\n        return void 0;\n      }));\n    }\n  }, {\n    key: \"preloadConfig\",\n    value: function preloadConfig(ngModule, route) {\n      var _this42 = this;\n\n      return this.preloadingStrategy.preload(route, function () {\n        var loaded$ = _this42.loader.load(ngModule.injector, route);\n\n        return loaded$.pipe(mergeMap(function (config) {\n          route._loadedConfig = config;\n          return _this42.processRoutes(config.module, config.routes);\n        }));\n      });\n    }\n  }]);\n\n  return RouterPreloader;\n}();\n\nRouterPreloader.ɵfac = function RouterPreloader_Factory(t) {\n  return new (t || RouterPreloader)(ɵngcc0.ɵɵinject(Router), ɵngcc0.ɵɵinject(ɵngcc0.NgModuleFactoryLoader), ɵngcc0.ɵɵinject(ɵngcc0.Compiler), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(PreloadingStrategy));\n};\n\nRouterPreloader.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: RouterPreloader,\n  factory: RouterPreloader.ɵfac\n});\n\nRouterPreloader.ctorParameters = function () {\n  return [{\n    type: Router\n  }, {\n    type: NgModuleFactoryLoader\n  }, {\n    type: Compiler\n  }, {\n    type: Injector\n  }, {\n    type: PreloadingStrategy\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RouterPreloader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Router\n    }, {\n      type: ɵngcc0.NgModuleFactoryLoader\n    }, {\n      type: ɵngcc0.Compiler\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: PreloadingStrategy\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar RouterScroller = /*#__PURE__*/function () {\n  function RouterScroller(router,\n  /** @docsNotRequired */\n  viewportScroller) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, RouterScroller);\n\n    this.router = router;\n    this.viewportScroller = viewportScroller;\n    this.options = options;\n    this.lastId = 0;\n    this.lastSource = 'imperative';\n    this.restoredId = 0;\n    this.store = {}; // Default both options to 'disabled'\n\n    options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';\n    options.anchorScrolling = options.anchorScrolling || 'disabled';\n  }\n\n  _createClass(RouterScroller, [{\n    key: \"init\",\n    value: function init() {\n      // we want to disable the automatic scrolling because having two places\n      // responsible for scrolling results race conditions, especially given\n      // that browser don't implement this behavior consistently\n      if (this.options.scrollPositionRestoration !== 'disabled') {\n        this.viewportScroller.setHistoryScrollRestoration('manual');\n      }\n\n      this.routerEventsSubscription = this.createScrollEvents();\n      this.scrollEventsSubscription = this.consumeScrollEvents();\n    }\n  }, {\n    key: \"createScrollEvents\",\n    value: function createScrollEvents() {\n      var _this43 = this;\n\n      return this.router.events.subscribe(function (e) {\n        if (e instanceof NavigationStart) {\n          // store the scroll position of the current stable navigations.\n          _this43.store[_this43.lastId] = _this43.viewportScroller.getScrollPosition();\n          _this43.lastSource = e.navigationTrigger;\n          _this43.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n        } else if (e instanceof NavigationEnd) {\n          _this43.lastId = e.id;\n\n          _this43.scheduleScrollEvent(e, _this43.router.parseUrl(e.urlAfterRedirects).fragment);\n        }\n      });\n    }\n  }, {\n    key: \"consumeScrollEvents\",\n    value: function consumeScrollEvents() {\n      var _this44 = this;\n\n      return this.router.events.subscribe(function (e) {\n        if (!(e instanceof Scroll)) return; // a popstate event. The pop state event will always ignore anchor scrolling.\n\n        if (e.position) {\n          if (_this44.options.scrollPositionRestoration === 'top') {\n            _this44.viewportScroller.scrollToPosition([0, 0]);\n          } else if (_this44.options.scrollPositionRestoration === 'enabled') {\n            _this44.viewportScroller.scrollToPosition(e.position);\n          } // imperative navigation \"forward\"\n\n        } else {\n          if (e.anchor && _this44.options.anchorScrolling === 'enabled') {\n            _this44.viewportScroller.scrollToAnchor(e.anchor);\n          } else if (_this44.options.scrollPositionRestoration !== 'disabled') {\n            _this44.viewportScroller.scrollToPosition([0, 0]);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"scheduleScrollEvent\",\n    value: function scheduleScrollEvent(routerEvent, anchor) {\n      this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n    }\n    /** @nodoc */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.routerEventsSubscription) {\n        this.routerEventsSubscription.unsubscribe();\n      }\n\n      if (this.scrollEventsSubscription) {\n        this.scrollEventsSubscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return RouterScroller;\n}();\n\nRouterScroller.ɵfac = function RouterScroller_Factory(t) {\n  return new (t || RouterScroller)(ɵngcc0.ɵɵinject(Router), ɵngcc0.ɵɵinject(ɵngcc1.ViewportScroller), ɵngcc0.ɵɵinject(undefined));\n};\n\nRouterScroller.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: RouterScroller,\n  factory: RouterScroller.ɵfac\n});\n\nRouterScroller.ctorParameters = function () {\n  return [{\n    type: Router\n  }, {\n    type: ViewportScroller\n  }, {\n    type: undefined\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RouterScroller, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Router\n    }, {\n      type: ɵngcc1.ViewportScroller\n    }, {\n      type: undefined\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The directives defined in the `RouterModule`.\n */\n\n\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent];\n/**\n * A [DI token](guide/glossary/#di-token) for the router service.\n *\n * @publicApi\n */\n\nvar ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/**\n * @docsNotRequired\n */\n\nvar ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\nvar ɵ0 = {\n  enableTracing: false\n};\nvar ROUTER_PROVIDERS = [Location, {\n  provide: UrlSerializer,\n  useClass: DefaultUrlSerializer\n}, {\n  provide: Router,\n  useFactory: setupRouter,\n  deps: [UrlSerializer, ChildrenOutletContexts, Location, Injector, NgModuleFactoryLoader, Compiler, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]]\n}, ChildrenOutletContexts, {\n  provide: ActivatedRoute,\n  useFactory: rootRoute,\n  deps: [Router]\n}, {\n  provide: NgModuleFactoryLoader,\n  useClass: SystemJsNgModuleLoader\n}, RouterPreloader, NoPreloading, PreloadAllModules, {\n  provide: ROUTER_CONFIGURATION,\n  useValue: ɵ0\n}];\n\nfunction routerNgProbeToken() {\n  return new NgProbeToken('Router', Router);\n}\n/**\n * @description\n *\n * Adds directives and providers for in-app navigation among views defined in an application.\n * Use the Angular `Router` service to declaratively specify application states and manage state\n * transitions.\n *\n * You can import this NgModule multiple times, once for each lazy-loaded bundle.\n * However, only one `Router` service can be active.\n * To ensure this, there are two ways to register routes when importing this module:\n *\n * * The `forRoot()` method creates an `NgModule` that contains all the directives, the given\n * routes, and the `Router` service itself.\n * * The `forChild()` method creates an `NgModule` that contains all the directives and the given\n * routes, but does not include the `Router` service.\n *\n * @see [Routing and Navigation guide](guide/router) for an\n * overview of how the `Router` service should be used.\n *\n * @publicApi\n */\n\n\nvar RouterModule = /*#__PURE__*/function () {\n  // Note: We are injecting the Router so it gets created eagerly...\n  function RouterModule(guard, router) {\n    _classCallCheck(this, RouterModule);\n  }\n  /**\n   * Creates and configures a module with all the router providers and directives.\n   * Optionally sets up an application listener to perform an initial navigation.\n   *\n   * When registering the NgModule at the root, import as follows:\n   *\n   * ```\n   * @NgModule({\n   *   imports: [RouterModule.forRoot(ROUTES)]\n   * })\n   * class MyNgModule {}\n   * ```\n   *\n   * @param routes An array of `Route` objects that define the navigation paths for the application.\n   * @param config An `ExtraOptions` configuration object that controls how navigation is performed.\n   * @return The new `NgModule`.\n   *\n   */\n\n\n  _createClass(RouterModule, null, [{\n    key: \"forRoot\",\n    value: function forRoot(routes, config) {\n      return {\n        ngModule: RouterModule,\n        providers: [ROUTER_PROVIDERS, provideRoutes(routes), {\n          provide: ROUTER_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[Router, new Optional(), new SkipSelf()]]\n        }, {\n          provide: ROUTER_CONFIGURATION,\n          useValue: config ? config : {}\n        }, {\n          provide: LocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION]\n        }, {\n          provide: RouterScroller,\n          useFactory: createRouterScroller,\n          deps: [Router, ViewportScroller, ROUTER_CONFIGURATION]\n        }, {\n          provide: PreloadingStrategy,\n          useExisting: config && config.preloadingStrategy ? config.preloadingStrategy : NoPreloading\n        }, {\n          provide: NgProbeToken,\n          multi: true,\n          useFactory: routerNgProbeToken\n        }, provideRouterInitializer()]\n      };\n    }\n    /**\n     * Creates a module with all the router directives and a provider registering routes,\n     * without creating a new Router service.\n     * When registering for submodules and lazy-loaded submodules, create the NgModule as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the submodule.\n     * @return The new NgModule.\n     *\n     */\n\n  }, {\n    key: \"forChild\",\n    value: function forChild(routes) {\n      return {\n        ngModule: RouterModule,\n        providers: [provideRoutes(routes)]\n      };\n    }\n  }]);\n\n  return RouterModule;\n}();\n\nRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: RouterModule\n});\nRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function RouterModule_Factory(t) {\n    return new (t || RouterModule)(ɵngcc0.ɵɵinject(ROUTER_FORROOT_GUARD, 8), ɵngcc0.ɵɵinject(Router, 8));\n  }\n});\n\nRouterModule.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ROUTER_FORROOT_GUARD]\n    }]\n  }, {\n    type: Router,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RouterModule, {\n    declarations: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent],\n    exports: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RouterModule, [{\n    type: NgModule,\n    args: [{\n      declarations: ROUTER_DIRECTIVES,\n      exports: ROUTER_DIRECTIVES,\n      entryComponents: [ɵEmptyOutletComponent]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ROUTER_FORROOT_GUARD]\n      }]\n    }, {\n      type: Router,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nfunction createRouterScroller(router, viewportScroller, config) {\n  if (config.scrollOffset) {\n    viewportScroller.setOffset(config.scrollOffset);\n  }\n\n  return new RouterScroller(router, viewportScroller, config);\n}\n\nfunction provideLocationStrategy(platformLocationStrategy, baseHref) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) : new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n\nfunction provideForRootGuard(router) {\n  if (router) {\n    throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n  }\n\n  return 'guarded';\n}\n/**\n * Registers a [DI provider](guide/glossary#provider) for a set of routes.\n * @param routes The route configuration to provide.\n *\n * @usageNotes\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * @publicApi\n */\n\n\nfunction provideRoutes(routes) {\n  return [{\n    provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n    multi: true,\n    useValue: routes\n  }, {\n    provide: ROUTES,\n    multi: true,\n    useValue: routes\n  }];\n}\n\nfunction setupRouter(urlSerializer, contexts, location, injector, loader, compiler, config) {\n  var opts = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : {};\n  var urlHandlingStrategy = arguments.length > 8 ? arguments[8] : undefined;\n  var routeReuseStrategy = arguments.length > 9 ? arguments[9] : undefined;\n  var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n\n  if (urlHandlingStrategy) {\n    router.urlHandlingStrategy = urlHandlingStrategy;\n  }\n\n  if (routeReuseStrategy) {\n    router.routeReuseStrategy = routeReuseStrategy;\n  }\n\n  if (opts.errorHandler) {\n    router.errorHandler = opts.errorHandler;\n  }\n\n  if (opts.malformedUriErrorHandler) {\n    router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n  }\n\n  if (opts.enableTracing) {\n    var dom = ɵgetDOM();\n    router.events.subscribe(function (e) {\n      dom.logGroup(\"Router Event: \".concat(e.constructor.name));\n      dom.log(e.toString());\n      dom.log(e);\n      dom.logGroupEnd();\n    });\n  }\n\n  if (opts.onSameUrlNavigation) {\n    router.onSameUrlNavigation = opts.onSameUrlNavigation;\n  }\n\n  if (opts.paramsInheritanceStrategy) {\n    router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n  }\n\n  if (opts.urlUpdateStrategy) {\n    router.urlUpdateStrategy = opts.urlUpdateStrategy;\n  }\n\n  if (opts.relativeLinkResolution) {\n    router.relativeLinkResolution = opts.relativeLinkResolution;\n  }\n\n  return router;\n}\n\nfunction rootRoute(router) {\n  return router.routerState.root;\n}\n/**\n * Router initialization requires two steps:\n *\n * First, we start the navigation in a `APP_INITIALIZER` to block the bootstrap if\n * a resolver or a guard executes asynchronously.\n *\n * Next, we actually run activation in a `BOOTSTRAP_LISTENER`, using the\n * `afterPreactivation` hook provided by the router.\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\n\n\nvar RouterInitializer = /*#__PURE__*/function () {\n  function RouterInitializer(injector) {\n    _classCallCheck(this, RouterInitializer);\n\n    this.injector = injector;\n    this.initNavigation = false;\n    this.resultOfPreactivationDone = new Subject();\n  }\n\n  _createClass(RouterInitializer, [{\n    key: \"appInitializer\",\n    value: function appInitializer() {\n      var _this45 = this;\n\n      var p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n      return p.then(function () {\n        var resolve = null;\n        var res = new Promise(function (r) {\n          return resolve = r;\n        });\n\n        var router = _this45.injector.get(Router);\n\n        var opts = _this45.injector.get(ROUTER_CONFIGURATION);\n\n        if (_this45.isLegacyDisabled(opts) || _this45.isLegacyEnabled(opts)) {\n          resolve(true);\n        } else if (opts.initialNavigation === 'disabled') {\n          router.setUpLocationChangeListener();\n          resolve(true);\n        } else if (opts.initialNavigation === 'enabled') {\n          router.hooks.afterPreactivation = function () {\n            // only the initial navigation should be delayed\n            if (!_this45.initNavigation) {\n              _this45.initNavigation = true;\n              resolve(true);\n              return _this45.resultOfPreactivationDone; // subsequent navigations should not be delayed\n            } else {\n              return of(null);\n            }\n          };\n\n          router.initialNavigation();\n        } else {\n          throw new Error(\"Invalid initialNavigation options: '\".concat(opts.initialNavigation, \"'\"));\n        }\n\n        return res;\n      });\n    }\n  }, {\n    key: \"bootstrapListener\",\n    value: function bootstrapListener(bootstrappedComponentRef) {\n      var opts = this.injector.get(ROUTER_CONFIGURATION);\n      var preloader = this.injector.get(RouterPreloader);\n      var routerScroller = this.injector.get(RouterScroller);\n      var router = this.injector.get(Router);\n      var ref = this.injector.get(ApplicationRef);\n\n      if (bootstrappedComponentRef !== ref.components[0]) {\n        return;\n      }\n\n      if (this.isLegacyEnabled(opts)) {\n        router.initialNavigation();\n      } else if (this.isLegacyDisabled(opts)) {\n        router.setUpLocationChangeListener();\n      }\n\n      preloader.setUpPreloading();\n      routerScroller.init();\n      router.resetRootComponentType(ref.componentTypes[0]);\n      this.resultOfPreactivationDone.next(null);\n      this.resultOfPreactivationDone.complete();\n    }\n  }, {\n    key: \"isLegacyEnabled\",\n    value: function isLegacyEnabled(opts) {\n      return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true || opts.initialNavigation === undefined;\n    }\n  }, {\n    key: \"isLegacyDisabled\",\n    value: function isLegacyDisabled(opts) {\n      return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    }\n  }]);\n\n  return RouterInitializer;\n}();\n\nRouterInitializer.ɵfac = function RouterInitializer_Factory(t) {\n  return new (t || RouterInitializer)(ɵngcc0.ɵɵinject(ɵngcc0.Injector));\n};\n\nRouterInitializer.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: RouterInitializer,\n  factory: RouterInitializer.ɵfac\n});\n\nRouterInitializer.ctorParameters = function () {\n  return [{\n    type: Injector\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RouterInitializer, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.Injector\n    }];\n  }, null);\n})();\n\nfunction getAppInitializer(r) {\n  return r.appInitializer.bind(r);\n}\n\nfunction getBootstrapListener(r) {\n  return r.bootstrapListener.bind(r);\n}\n/**\n * A [DI token](guide/glossary/#di-token) for the router initializer that\n * is called after the app is bootstrapped.\n *\n * @publicApi\n */\n\n\nvar ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\n\nfunction provideRouterInitializer() {\n  return [RouterInitializer, {\n    provide: APP_INITIALIZER,\n    multi: true,\n    useFactory: getAppInitializer,\n    deps: [RouterInitializer]\n  }, {\n    provide: ROUTER_INITIALIZER,\n    useFactory: getBootstrapListener,\n    deps: [RouterInitializer]\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useExisting: ROUTER_INITIALIZER\n  }];\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nvar VERSION = new Version('10.1.4');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActivatedRoute, ActivatedRouteSnapshot, ActivationEnd, ActivationStart, BaseRouteReuseStrategy, ChildActivationEnd, ChildActivationStart, ChildrenOutletContexts, DefaultUrlSerializer, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, NoPreloading, OutletContext, PRIMARY_OUTLET, PreloadAllModules, PreloadingStrategy, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, ROUTES, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouteReuseStrategy, Router, RouterEvent, RouterLink, RouterLinkActive, RouterLinkWithHref, RouterModule, RouterOutlet, RouterPreloader, RouterState, RouterStateSnapshot, RoutesRecognized, Scroll, UrlHandlingStrategy, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, convertToParamMap, provideRoutes, ɵEmptyOutletComponent, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, ROUTER_FORROOT_GUARD as ɵangular_packages_router_router_a, routerNgProbeToken as ɵangular_packages_router_router_b, createRouterScroller as ɵangular_packages_router_router_c, provideLocationStrategy as ɵangular_packages_router_router_d, provideForRootGuard as ɵangular_packages_router_router_e, setupRouter as ɵangular_packages_router_router_f, rootRoute as ɵangular_packages_router_router_g, RouterInitializer as ɵangular_packages_router_router_h, getAppInitializer as ɵangular_packages_router_router_i, getBootstrapListener as ɵangular_packages_router_router_j, provideRouterInitializer as ɵangular_packages_router_router_k, ɵEmptyOutletComponent as ɵangular_packages_router_router_l, Tree as ɵangular_packages_router_router_m, TreeNode as ɵangular_packages_router_router_n, RouterScroller as ɵangular_packages_router_router_o, flatten as ɵflatten }; //# sourceMappingURL=router.js.map","map":{"version":3,"sources":["F:/FCIH/Gp/Ebda2ha-Front/node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js"],"names":["Location","LocationStrategy","ViewportScroller","PlatformLocation","APP_BASE_HREF","HashLocationStrategy","PathLocationStrategy","ɵgetDOM","LOCATION_INITIALIZED","ɵisObservable","ɵisPromise","NgModuleRef","Component","InjectionToken","NgModuleFactory","ɵConsole","NgZone","isDevMode","Injectable","Type","Injector","NgModuleFactoryLoader","Compiler","Directive","Attribute","Renderer2","ElementRef","Input","HostListener","HostBinding","ChangeDetectorRef","Optional","ContentChildren","EventEmitter","ViewContainerRef","ComponentFactoryResolver","Output","SystemJsNgModuleLoader","NgProbeToken","ANALYZE_FOR_ENTRY_COMPONENTS","SkipSelf","Inject","APP_INITIALIZER","APP_BOOTSTRAP_LISTENER","NgModule","ApplicationRef","Version","of","from","BehaviorSubject","combineLatest","Observable","EmptyError","defer","EMPTY","Subject","map","concatAll","last","last$1","switchMap","take","startWith","scan","filter","catchError","concatMap","first","mergeMap","tap","takeLast","finalize","mergeAll","ɵngcc0","ɵngcc1","RouterEvent","id","url","NavigationStart","navigationTrigger","restoredState","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","error","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","position","anchor","pos","PRIMARY_OUTLET","ParamsAsMap","params","name","Object","prototype","hasOwnProperty","call","has","v","Array","isArray","keys","convertToParamMap","NAVIGATION_CANCELING_ERROR","navigationCancelingError","message","Error","isNavigationCancelingError","defaultUrlMatcher","segments","segmentGroup","parts","split","length","pathMatch","hasChildren","posParams","index","part","segment","isParameter","startsWith","substring","consumed","slice","shallowEqualArrays","a","b","i","shallowEqual","k1","k2","key","equalArraysOrString","aSorted","sort","bSorted","every","val","flatten","arr","concat","apply","and","bools","some","forEach","callback","prop","waitForMap","obj","fn","waitHead","waitTail","res","k","mapped","pipe","r","push","wrapIntoObservable","value","Promise","resolve","createEmptyUrlTree","UrlTree","UrlSegmentGroup","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","root","containsQueryParams","containsSegmentGroup","equalPath","numberOfChildren","c","children","containsSegmentGroupHelper","containeePaths","current","next","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","parent","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","equalSegments","as","bs","mapChildrenIntoArray","child","childOutlet","UrlSerializer","DefaultUrlSerializer","p","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","query","serializeQueryParams","encodeUriFragment","join","primary","encodeUriString","s","encodeURIComponent","replace","encodeUriQuery","encodeURI","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","strParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","matchQueryParams","QUERY_PARAM_VALUE_RE","matchUrlQueryParamValue","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","outletName","undefined","indexOf","substr","Tree","_root","t","pathFromRoot","n","findNode","findPath","cc","node","unshift","TreeNode","nodeChildrenAsMap","outlet","RouterState","setRouterState","toString","createEmptyState","urlTree","rootComponent","createEmptyStateSnapshot","emptyUrl","emptyParams","emptyData","emptyQueryParams","activated","ActivatedRoute","ActivatedRouteSnapshot","RouterStateSnapshot","data","component","futureSnapshot","_futureSnapshot","_routerState","firstChild","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","flattenInherited","reduce","curr","assign","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","matched","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","equalParamsAndUrlSegments","equalUrlParams","parentsMismatch","createRouterState","routeReuseStrategy","prevState","createNode","shouldReuseRoute","createOrReuseChildren","detachedRouteHandle","retrieve","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","result","createUrlTree","commands","nav","computeNavigation","toRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","cmdWithOutlet","find","cmd","cmdIdx","urlPart","partIndex","Position","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","getPath","getOutlets","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","currentCommandIndex","currentPathIndex","noMatch","compare","paths","createNewSegmentChildren","stringify","activateRoutes","rootContexts","forwardEvent","ActivateRoutes","targetRouterState","currentRouterState","activate","futureState","currState","parentContexts","futureRoot","currRoot","deactivateChildRoutes","activateChildRoutes","futureNode","currNode","contexts","futureChild","childOutletName","deactivateRoutes","childName","deactivateRouteAndItsChildren","parentContext","future","context","getContext","shouldDetach","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","store","deactivate","getOrCreateContext","shouldAttach","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","config","parentLoadedConfig","cmpFactoryResolver","module","componentFactoryResolver","resolver","activateWith","_loadedConfig","LoadedRouterConfig","routes","isFunction","isBoolean","isUrlTree","isCanLoad","guard","canLoad","isCanActivate","canActivate","isCanActivateChild","canActivateChild","isCanDeactivate","canDeactivate","INITIAL_VALUE","Symbol","prioritizedGuardValue","obs","o","acc","list","isPending","innerAcc","item","NoMatch","AbsoluteRedirect","absoluteRedirect","newTree","namedOutletsRedirect","redirectTo","canLoadFails","applyRedirects","moduleInjector","configLoader","urlSerializer","ApplyRedirects","allowRedirects","ngModule","get","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","e","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","expandSegmentAgainstRoute","_","noLeftoversInUrl","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","newSegments","consumedSegments","lastChild","positionalParamSegments","rawSegmentGroup","loadChildren","load","injector","cfg","rawSlicedSegments","childConfig$","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","cs","runCanLoadGuards","shouldLoadResult","canLoadObservables","injectionToken","guardVal","applyRedirectCreatreUrlTree","parse","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","copySourceValue","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","idx","splice","matcher","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","isEmptyPathRedirect","primarySegmentGroup","applyRedirects$1","source","extractedUrl","CanActivate","CanDeactivate","getAllRouteGuards","getChildRouteGuards","getCanActivateChild","guards","getToken","token","getClosestLoadedConfig","futurePath","checks","canDeactivateChecks","canActivateChecks","prevChildren","getRouteGuards","shouldRun","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","isActivated","checkGuards","targetSnapshot","guardsResult","runCanDeactivateChecks","runCanActivateChecks","futureRSS","currRSS","check","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","futureARS","canActivateObservables","observable","canActivateChildGuards","reverse","canActivateChildGuardsMapped","d","guardsMapped","currARS","canDeactivateObservables","NoMatch$1","recognize","rootComponentType","relativeLinkResolution","Recognizer","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","sortActivatedRouteSnapshots","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","nodes","localeCompare","names","routeWithSameOutletName","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","createChildrenForEmptyPaths","containsEmptyPathMatches","addEmptyPathsToChildrenIfNeeded","emptyPathMatch","getOutlet$1","primarySegment","recognize$1","serializer","resolveData","canActivateChecksResolved","runResolve","resolveNode","resolvedData","getResolver","switchTap","nextResult","RouteReuseStrategy","BaseRouteReuseStrategy","detachedTree","DefaultRouteReuseStrategy","ɵEmptyOutletComponent","ɵfac","ɵEmptyOutletComponent_Factory","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","template","ɵEmptyOutletComponent_Template","rf","ctx","ɵɵelement","directives","RouterOutlet","encapsulation","ɵsetClassMetadata","args","validateConfig","parentPath","fullPath","getFullPath","validateNode","charAt","exp","currentRoute","standardizeConfig","ROUTES","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","moduleFactory$","loadModuleFactory","factory","create","compileModuleAsync","OutletContext","ChildrenOutletContexts","Map","set","UrlHandlingStrategy","DefaultUrlHandlingStrategy","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","runExtras","Router","location","lastSuccessfulNavigation","currentNavigation","lastLocationChangeInfo","navigationId","isNgZoneEnabled","events","errorHandler","malformedUriErrorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","onSameUrlNavigation","urlUpdateStrategy","onLoadStart","triggerEvent","onLoadEnd","console","ngZone","resetConfig","currentUrlTree","rawUrlTree","browserUrlTree","routerState","transitions","currentRawUrl","extract","rawUrl","extras","reject","promise","navigations","setupNavigations","processNavigations","eventsSubject","completed","errored","initialUrl","trigger","previousNavigation","urlTransition","processCurrentUrl","shouldProcessUrl","transition","getValue","serializeUrl","finalUrl","skipLocationChange","setBrowserUrl","replaceUrl","routesRecognized","processPreviousUrl","navStart","appliedUrlTree","guardsStart","evt","guardsEnd","resetUrlToCurrentUrlTree","navCancel","resolveStart","dataResolved","complete","resolveEnd","merge","redirecting","resetStateAndUrl","setTimeout","mergedTree","scheduleNavigation","navError","ee","getTransition","setUpLocationChangeListener","navigateByUrl","locationSubscription","subscribe","event","currentChange","extractLocationChangeInfoFromEvent","shouldScheduleNavigation","stateCopy","change","_a","parseUrl","transitionId","previous","sameDestination","eventsOccurredAtSameTime","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","warn","f","q","removeEmptyProps","isInAngularZone","validateCommands","priorPromise","lastNavigation","browserNavPrecededByRouterNav","lastNavigationSucceeded","lastNavigationUrl","duplicateNav","rej","setTransition","catch","isCurrentPathEqualTo","replaceState","go","storedState","storedUrl","Router_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","ctorParameters","RouterLink","router","tabIndex","renderer","el","onChanges","setAttribute","nativeElement","changes","preserve","attrBoolValue","RouterLink_Factory","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵdir","ɵɵdefineDirective","hostBindings","RouterLink_HostBindings","ɵɵlistener","RouterLink_click_HostBindingHandler","onClick","inputs","routerLink","features","ɵɵNgOnChangesFeature","String","decorators","propDecorators","selector","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","button","ctrlKey","shiftKey","altKey","metaKey","target","href","prepareExternalUrl","RouterLinkWithHref_Factory","hostVars","RouterLinkWithHref_HostBindings","RouterLinkWithHref_click_HostBindingHandler","$event","ɵɵhostProperty","ɵɵsanitizeUrl","ɵɵattribute","RouterLinkActive","element","cdr","link","linkWithHref","classes","isActive","routerLinkActiveOptions","routerEventsSubscription","update","links","linksWithHrefs","subscribeToEachLinkOnChanges","linkInputChangesSubscription","allLinkChanges","toArray","isLinkActive","then","hasActiveLinks","markForCheck","addClass","removeClass","isActiveCheckFn","RouterLinkActive_Factory","contentQueries","RouterLinkActive_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","routerLinkActive","exportAs","descendants","changeDetector","_activatedRoute","activateEvents","deactivateEvents","onChildOutletCreated","onChildOutletDestroyed","instance","cmp","ref","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","RouterOutlet_Factory","outputs","notFoundValue","PreloadingStrategy","PreloadAllModules","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","onStartLoad","onEndLoad","preload","processRoutes","preloadConfig","loaded$","RouterPreloader_Factory","RouterScroller","viewportScroller","options","lastId","lastSource","restoredId","scrollPositionRestoration","anchorScrolling","setHistoryScrollRestoration","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","scrollToAnchor","RouterScroller_Factory","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ɵ0","enableTracing","ROUTER_PROVIDERS","provide","useClass","useFactory","setupRouter","deps","rootRoute","useValue","routerNgProbeToken","RouterModule","providers","provideRoutes","provideForRootGuard","provideLocationStrategy","createRouterScroller","useExisting","multi","provideRouterInitializer","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","RouterModule_Factory","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","entryComponents","scrollOffset","setOffset","platformLocationStrategy","baseHref","useHash","opts","dom","logGroup","constructor","log","logGroupEnd","RouterInitializer","initNavigation","resultOfPreactivationDone","isLegacyDisabled","isLegacyEnabled","initialNavigation","bootstrappedComponentRef","preloader","routerScroller","components","setUpPreloading","init","resetRootComponentType","componentTypes","RouterInitializer_Factory","getAppInitializer","appInitializer","bind","getBootstrapListener","bootstrapListener","ROUTER_INITIALIZER","VERSION","ɵROUTER_PROVIDERS","ɵangular_packages_router_router_a","ɵangular_packages_router_router_b","ɵangular_packages_router_router_c","ɵangular_packages_router_router_d","ɵangular_packages_router_router_e","ɵangular_packages_router_router_f","ɵangular_packages_router_router_g","ɵangular_packages_router_router_h","ɵangular_packages_router_router_i","ɵangular_packages_router_router_j","ɵangular_packages_router_router_k","ɵangular_packages_router_router_l","ɵangular_packages_router_router_m","ɵangular_packages_router_router_n","ɵangular_packages_router_router_o","ɵflatten"],"mappings":"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","sourcesContent":["/**\n * @license Angular v10.1.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Location, LocationStrategy, ViewportScroller, PlatformLocation, APP_BASE_HREF, HashLocationStrategy, PathLocationStrategy, ɵgetDOM, LOCATION_INITIALIZED } from '@angular/common';\nimport { ɵisObservable, ɵisPromise, NgModuleRef, Component, InjectionToken, NgModuleFactory, ɵConsole, NgZone, isDevMode, Injectable, Type, Injector, NgModuleFactoryLoader, Compiler, Directive, Attribute, Renderer2, ElementRef, Input, HostListener, HostBinding, ChangeDetectorRef, Optional, ContentChildren, EventEmitter, ViewContainerRef, ComponentFactoryResolver, Output, SystemJsNgModuleLoader, NgProbeToken, ANALYZE_FOR_ENTRY_COMPONENTS, SkipSelf, Inject, APP_INITIALIZER, APP_BOOTSTRAP_LISTENER, NgModule, ApplicationRef, Version } from '@angular/core';\nimport { of, from, BehaviorSubject, combineLatest, Observable, EmptyError, defer, EMPTY, Subject } from 'rxjs';\nimport { map, concatAll, last as last$1, switchMap, take, startWith, scan, filter, catchError, concatMap, first, mergeMap, tap, takeLast, finalize, mergeAll } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base for events the router goes through, as opposed to events tied to a specific\n * route. Fired one time for any given navigation.\n *\n * The following code shows how a class subscribes to router events.\n *\n * ```ts\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.pipe(\n *        filter((e: Event): e is RouterEvent => e instanceof RouterEvent)\n *     ).subscribe((e: RouterEvent) => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * @see `Event`\n * @see [Router events summary](guide/router#router-events)\n * @publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nclass RouterEvent {\n    constructor(\n    /** A unique ID that the router assigns to every router navigation. */\n    id, \n    /** The URL that is the destination for this navigation. */\n    url) {\n        this.id = id;\n        this.url = url;\n    }\n}\n/**\n * An event triggered when a navigation starts.\n *\n * @publicApi\n */\nclass NavigationStart extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    navigationTrigger = 'imperative', \n    /** @docsNotRequired */\n    restoredState = null) {\n        super(id, url);\n        this.navigationTrigger = navigationTrigger;\n        this.restoredState = restoredState;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationStart(id: ${this.id}, url: '${this.url}')`;\n    }\n}\n/**\n * An event triggered when a navigation ends successfully.\n *\n * @see `NavigationStart`\n * @see `NavigationCancel`\n * @see `NavigationError`\n *\n * @publicApi\n */\nclass NavigationEnd extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n    }\n}\n/**\n * An event triggered when a navigation is canceled, directly or indirectly.\n * This can happen when a route guard\n * returns `false` or initiates a redirect by returning a `UrlTree`.\n *\n * @see `NavigationStart`\n * @see `NavigationEnd`\n * @see `NavigationError`\n *\n * @publicApi\n */\nclass NavigationCancel extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    reason) {\n        super(id, url);\n        this.reason = reason;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;\n    }\n}\n/**\n * An event triggered when a navigation fails due to an unexpected error.\n *\n * @see `NavigationStart`\n * @see `NavigationEnd`\n * @see `NavigationCancel`\n *\n * @publicApi\n */\nclass NavigationError extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    error) {\n        super(id, url);\n        this.error = error;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n    }\n}\n/**\n * An event triggered when routes are recognized.\n *\n * @publicApi\n */\nclass RoutesRecognized extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered at the start of the Guard phase of routing.\n *\n * @see `GuardsCheckEnd`\n *\n * @publicApi\n */\nclass GuardsCheckStart extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    toString() {\n        return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered at the end of the Guard phase of routing.\n *\n * @see `GuardsCheckStart`\n *\n * @publicApi\n */\nclass GuardsCheckEnd extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state, \n    /** @docsNotRequired */\n    shouldActivate) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    toString() {\n        return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n    }\n}\n/**\n * An event triggered at the the start of the Resolve phase of routing.\n *\n * Runs in the \"resolve\" phase whether or not there is anything to resolve.\n * In future, may change to only run when there are things to be resolved.\n *\n * @see `ResolveEnd`\n *\n * @publicApi\n */\nclass ResolveStart extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    toString() {\n        return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered at the end of the Resolve phase of routing.\n * @see `ResolveStart`.\n *\n * @publicApi\n */\nclass ResolveEnd extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    toString() {\n        return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered before lazy loading a route configuration.\n *\n * @see `RouteConfigLoadEnd`\n *\n * @publicApi\n */\nclass RouteConfigLoadStart {\n    constructor(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    toString() {\n        return `RouteConfigLoadStart(path: ${this.route.path})`;\n    }\n}\n/**\n * An event triggered when a route has been lazy loaded.\n *\n * @see `RouteConfigLoadStart`\n *\n * @publicApi\n */\nclass RouteConfigLoadEnd {\n    constructor(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    toString() {\n        return `RouteConfigLoadEnd(path: ${this.route.path})`;\n    }\n}\n/**\n * An event triggered at the start of the child-activation\n * part of the Resolve phase of routing.\n * @see  `ChildActivationEnd`\n * @see `ResolveStart`\n *\n * @publicApi\n */\nclass ChildActivationStart {\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ChildActivationStart(path: '${path}')`;\n    }\n}\n/**\n * An event triggered at the end of the child-activation part\n * of the Resolve phase of routing.\n * @see `ChildActivationStart`\n * @see `ResolveStart`\n * @publicApi\n */\nclass ChildActivationEnd {\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ChildActivationEnd(path: '${path}')`;\n    }\n}\n/**\n * An event triggered at the start of the activation part\n * of the Resolve phase of routing.\n * @see `ActivationEnd`\n * @see `ResolveStart`\n *\n * @publicApi\n */\nclass ActivationStart {\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ActivationStart(path: '${path}')`;\n    }\n}\n/**\n * An event triggered at the end of the activation part\n * of the Resolve phase of routing.\n * @see `ActivationStart`\n * @see `ResolveStart`\n *\n * @publicApi\n */\nclass ActivationEnd {\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ActivationEnd(path: '${path}')`;\n    }\n}\n/**\n * An event triggered by scrolling.\n *\n * @publicApi\n */\nclass Scroll {\n    constructor(\n    /** @docsNotRequired */\n    routerEvent, \n    /** @docsNotRequired */\n    position, \n    /** @docsNotRequired */\n    anchor) {\n        this.routerEvent = routerEvent;\n        this.position = position;\n        this.anchor = anchor;\n    }\n    toString() {\n        const pos = this.position ? `${this.position[0]}, ${this.position[1]}` : null;\n        return `Scroll(anchor: '${this.anchor}', position: '${pos}')`;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The primary routing outlet.\n *\n * @publicApi\n */\nconst PRIMARY_OUTLET = 'primary';\nclass ParamsAsMap {\n    constructor(params) {\n        this.params = params || {};\n    }\n    has(name) {\n        return Object.prototype.hasOwnProperty.call(this.params, name);\n    }\n    get(name) {\n        if (this.has(name)) {\n            const v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    }\n    getAll(name) {\n        if (this.has(name)) {\n            const v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    }\n    get keys() {\n        return Object.keys(this.params);\n    }\n}\n/**\n * Converts a `Params` instance to a `ParamMap`.\n * @param params The instance to convert.\n * @returns The new map instance.\n *\n * @publicApi\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nconst NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction navigationCancelingError(message) {\n    const error = Error('NavigationCancelingError: ' + message);\n    error[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\nfunction isNavigationCancelingError(error) {\n    return error && error[NAVIGATION_CANCELING_ERROR];\n}\n// Matches the route configuration (`route`) against the actual URL (`segments`).\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    const parts = route.path.split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    const posParams = {};\n    // Check each config part against the actual URL\n    for (let index = 0; index < parts.length; index++) {\n        const part = parts[index];\n        const segment = segments[index];\n        const isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\nfunction shallowEqual(a, b) {\n    // Casting Object.keys return values to include `undefined` as there are some cases\n    // in IE 11 where this can happen. Cannot provide a test because the behavior only\n    // exists in certain circumstances in IE 11, therefore doing this cast ensures the\n    // logic is correct for when this edge case is hit.\n    const k1 = Object.keys(a);\n    const k2 = Object.keys(b);\n    if (!k1 || !k2 || k1.length != k2.length) {\n        return false;\n    }\n    let key;\n    for (let i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (!equalArraysOrString(a[key], b[key])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Test equality for arrays of strings or a string.\n */\nfunction equalArraysOrString(a, b) {\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length)\n            return false;\n        const aSorted = [...a].sort();\n        const bSorted = [...b].sort();\n        return aSorted.every((val, index) => bSorted[index] === val);\n    }\n    else {\n        return a === b;\n    }\n}\n/**\n * Flattens single-level nested arrays.\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n */\nfunction last(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n */\nfunction and(bools) {\n    return !bools.some(v => !v);\n}\nfunction forEach(map, callback) {\n    for (const prop in map) {\n        if (map.hasOwnProperty(prop)) {\n            callback(map[prop], prop);\n        }\n    }\n}\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n    const waitHead = [];\n    const waitTail = [];\n    const res = {};\n    forEach(obj, (a, k) => {\n        const mapped = fn(k, a).pipe(map((r) => res[k] = r));\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    // Closure compiler has problem with using spread operator here. So we use \"Array.concat\".\n    // Note that we also need to cast the new promise because TypeScript cannot infer the type\n    // when calling the \"of\" function through \"Function.apply\"\n    return of.apply(null, waitHead.concat(waitTail))\n        .pipe(concatAll(), last$1(), map(() => res));\n}\nfunction wrapIntoObservable(value) {\n    if (ɵisObservable(value)) {\n        return value;\n    }\n    if (ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return from(Promise.resolve(value));\n    }\n    return of(value);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\nfunction equalQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (const c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(key => equalArraysOrString(container[key], containee[key]));\n}\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        const current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (const c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        const current = containeePaths.slice(0, container.segments.length);\n        const next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlTree {\n    /** @internal */\n    constructor(\n    /** The root segment group of the URL tree */\n    root, \n    /** The query params of the URL */\n    queryParams, \n    /** The fragment of the URL */\n    fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap = convertToParamMap(this.queryParams);\n        }\n        return this._queryParamMap;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return DEFAULT_SERIALIZER.serialize(this);\n    }\n}\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n * @publicApi\n */\nclass UrlSegmentGroup {\n    constructor(\n    /** The URL segments of this group. See `UrlSegment` for more information */\n    segments, \n    /** The list of children of this group */\n    children) {\n        this.segments = segments;\n        this.children = children;\n        /** The parent node in the url tree */\n        this.parent = null;\n        forEach(children, (v, k) => v.parent = this);\n    }\n    /** Whether the segment has child segments */\n    hasChildren() {\n        return this.numberOfChildren > 0;\n    }\n    /** Number of child segments */\n    get numberOfChildren() {\n        return Object.keys(this.children).length;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return serializePaths(this);\n    }\n}\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlSegment {\n    constructor(\n    /** The path part of a URL segment */\n    path, \n    /** The matrix parameters associated with a segment */\n    parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    get parameterMap() {\n        if (!this._parameterMap) {\n            this._parameterMap = convertToParamMap(this.parameters);\n        }\n        return this._parameterMap;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return serializePath(this);\n    }\n}\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every((a, i) => a.path === bs[i].path);\n}\nfunction mapChildrenIntoArray(segment, fn) {\n    let res = [];\n    forEach(segment.children, (child, childOutlet) => {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, (child, childOutlet) => {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n * @publicApi\n */\nclass UrlSerializer {\n}\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * @publicApi\n */\nclass DefaultUrlSerializer {\n    /** Parses a url into a `UrlTree` */\n    parse(url) {\n        const p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    }\n    /** Converts a `UrlTree` into a url */\n    serialize(tree) {\n        const segment = `/${serializeSegment(tree.root, true)}`;\n        const query = serializeQueryParams(tree.queryParams);\n        const fragment = typeof tree.fragment === `string` ? `#${encodeUriFragment(tree.fragment)}` : '';\n        return `${segment}${query}${fragment}`;\n    }\n}\nconst DEFAULT_SERIALIZER = new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n    return segment.segments.map(p => serializePath(p)).join('/');\n}\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        const primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        const children = [];\n        forEach(segment.children, (v, k) => {\n            if (k !== PRIMARY_OUTLET) {\n                children.push(`${k}:${serializeSegment(v, false)}`);\n            }\n        });\n        return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n    }\n    else {\n        const children = mapChildrenIntoArray(segment, (v, k) => {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [`${k}:${serializeSegment(v, false)}`];\n        });\n        // use no parenthesis if the only child is a primary outlet route\n        if (Object.keys(segment.children).length === 1 && segment.children[PRIMARY_OUTLET] != null) {\n            return `${serializePaths(segment)}/${children[0]}`;\n        }\n        return `${serializePaths(segment)}/(${children.join('//')})`;\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n    return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\nfunction serializeMatrixParams(params) {\n    return Object.keys(params)\n        .map(key => `;${encodeUriSegment(key)}=${encodeUriSegment(params[key])}`)\n        .join('');\n}\nfunction serializeQueryParams(params) {\n    const strParams = Object.keys(params).map((name) => {\n        const value = params[name];\n        return Array.isArray(value) ?\n            value.map(v => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&') :\n            `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n    });\n    return strParams.length ? `?${strParams.join('&')}` : '';\n}\nconst SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchSegments(str) {\n    const match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n    const match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nconst QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n    const match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nclass UrlParser {\n    constructor(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    parseRootSegment() {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    }\n    parseQueryParams() {\n        const params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    }\n    parseFragment() {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    }\n    parseChildren() {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        const segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        let children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        let res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    }\n    // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n    parseSegment() {\n        const path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    }\n    parseMatrixParams() {\n        const params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    }\n    parseParam(params) {\n        const key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        let value = '';\n        if (this.consumeOptional('=')) {\n            const valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    }\n    // Parse a single query parameter `name[=value]`\n    parseQueryParam(params) {\n        const key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        let value = '';\n        if (this.consumeOptional('=')) {\n            const valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        const decodedKey = decodeQuery(key);\n        const decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            let currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    }\n    // parse `(a/b//outlet_name:c/d)`\n    parseParens(allowPrimary) {\n        const segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            const path = matchSegments(this.remaining);\n            const next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(`Cannot parse url '${this.url}'`);\n            }\n            let outletName = undefined;\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            const children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    }\n    peekStartsWith(str) {\n        return this.remaining.startsWith(str);\n    }\n    // Consumes the prefix when it is present and returns whether it has been consumed\n    consumeOptional(str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    }\n    capture(str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(`Expected \"${str}\".`);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass Tree {\n    constructor(root) {\n        this._root = root;\n    }\n    get root() {\n        return this._root.value;\n    }\n    /**\n     * @internal\n     */\n    parent(t) {\n        const p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    }\n    /**\n     * @internal\n     */\n    children(t) {\n        const n = findNode(t, this._root);\n        return n ? n.children.map(t => t.value) : [];\n    }\n    /**\n     * @internal\n     */\n    firstChild(t) {\n        const n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    }\n    /**\n     * @internal\n     */\n    siblings(t) {\n        const p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        const c = p[p.length - 2].children.map(c => c.value);\n        return c.filter(cc => cc !== t);\n    }\n    /**\n     * @internal\n     */\n    pathFromRoot(t) {\n        return findPath(t, this._root).map(s => s.value);\n    }\n}\n// DFS for the node matching the value\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (const child of node.children) {\n        const node = findNode(value, child);\n        if (node)\n            return node;\n    }\n    return null;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (const child of node.children) {\n        const path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nclass TreeNode {\n    constructor(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    toString() {\n        return `TreeNode(${this.value})`;\n    }\n}\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n    const map = {};\n    if (node) {\n        node.children.forEach(child => map[child.value.outlet] = child);\n    }\n    return map;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents the state of the router as a tree of activated routes.\n *\n * @usageNotes\n *\n * Every node in the route tree is an `ActivatedRoute` instance\n * that knows about the \"consumed\" URL segments, the extracted parameters,\n * and the resolved data.\n * Use the `ActivatedRoute` properties to traverse the tree from any node.\n *\n * The following fragment shows how a component gets the root node\n * of the current state to establish its own route tree:\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @see `ActivatedRoute`\n * @see [Getting route information](guide/router#getting-route-information)\n *\n * @publicApi\n */\nclass RouterState extends Tree {\n    /** @internal */\n    constructor(root, \n    /** The current snapshot of the router state */\n    snapshot) {\n        super(root);\n        this.snapshot = snapshot;\n        setRouterState(this, root);\n    }\n    toString() {\n        return this.snapshot.toString();\n    }\n}\nfunction createEmptyState(urlTree, rootComponent) {\n    const snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    const emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    const emptyParams = new BehaviorSubject({});\n    const emptyData = new BehaviorSubject({});\n    const emptyQueryParams = new BehaviorSubject({});\n    const fragment = new BehaviorSubject('');\n    const activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    const emptyParams = {};\n    const emptyData = {};\n    const emptyQueryParams = {};\n    const fragment = '';\n    const activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * Provides access to information about a route associated with a component\n * that is loaded in an outlet.\n * Use to traverse the `RouterState` tree and extract information from nodes.\n *\n * The following example shows how to construct a component using information from a\n * currently activated route.\n *\n * {@example router/activated-route/module.ts region=\"activated-route\"\n *     header=\"activated-route.component.ts\"}\n *\n * @see [Getting route information](guide/router#getting-route-information)\n *\n * @publicApi\n */\nclass ActivatedRoute {\n    /** @internal */\n    constructor(\n    /** An observable of the URL segments matched by this route. */\n    url, \n    /** An observable of the matrix parameters scoped to this route. */\n    params, \n    /** An observable of the query parameters shared by all the routes. */\n    queryParams, \n    /** An observable of the URL fragment shared by all the routes. */\n    fragment, \n    /** An observable of the static and resolved data of this route. */\n    data, \n    /** The outlet name of the route, a constant. */\n    outlet, \n    /** The component of the route, a constant. */\n    // TODO(vsavkin): remove |string\n    component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    /** The configuration used to match this route. */\n    get routeConfig() {\n        return this._futureSnapshot.routeConfig;\n    }\n    /** The root of the router state. */\n    get root() {\n        return this._routerState.root;\n    }\n    /** The parent of this route in the router state tree. */\n    get parent() {\n        return this._routerState.parent(this);\n    }\n    /** The first child of this route in the router state tree. */\n    get firstChild() {\n        return this._routerState.firstChild(this);\n    }\n    /** The children of this route in the router state tree. */\n    get children() {\n        return this._routerState.children(this);\n    }\n    /** The path from the root of the router state tree to this route. */\n    get pathFromRoot() {\n        return this._routerState.pathFromRoot(this);\n    }\n    /**\n     * An Observable that contains a map of the required and optional parameters\n     * specific to the route.\n     * The map supports retrieving single and multiple values from the same parameter.\n     */\n    get paramMap() {\n        if (!this._paramMap) {\n            this._paramMap = this.params.pipe(map((p) => convertToParamMap(p)));\n        }\n        return this._paramMap;\n    }\n    /**\n     * An Observable that contains a map of the query parameters available to all routes.\n     * The map supports retrieving single and multiple values from the query parameter.\n     */\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap =\n                this.queryParams.pipe(map((p) => convertToParamMap(p)));\n        }\n        return this._queryParamMap;\n    }\n    toString() {\n        return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;\n    }\n}\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * @internal\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy = 'emptyOnly') {\n    const pathFromRoot = route.pathFromRoot;\n    let inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            const current = pathFromRoot[inheritingStartingFrom];\n            const parent = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/** @internal */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce((res, curr) => {\n        const params = Object.assign(Object.assign({}, res.params), curr.params);\n        const data = Object.assign(Object.assign({}, res.data), curr.data);\n        const resolve = Object.assign(Object.assign({}, res.resolve), curr._resolvedData);\n        return { params, data, resolve };\n    }, { params: {}, data: {}, resolve: {} });\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * The following example initializes a component with route information extracted\n * from the snapshot of the root node at the time of creation.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass ActivatedRouteSnapshot {\n    /** @internal */\n    constructor(\n    /** The URL segments matched by this route */\n    url, \n    /** The matrix parameters scoped to this route */\n    params, \n    /** The query parameters shared by all the routes */\n    queryParams, \n    /** The URL fragment shared by all the routes */\n    fragment, \n    /** The static and resolved data of this route */\n    data, \n    /** The outlet name of the route */\n    outlet, \n    /** The component of the route */\n    component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    /** The root of the router state */\n    get root() {\n        return this._routerState.root;\n    }\n    /** The parent of this route in the router state tree */\n    get parent() {\n        return this._routerState.parent(this);\n    }\n    /** The first child of this route in the router state tree */\n    get firstChild() {\n        return this._routerState.firstChild(this);\n    }\n    /** The children of this route in the router state tree */\n    get children() {\n        return this._routerState.children(this);\n    }\n    /** The path from the root of the router state tree to this route */\n    get pathFromRoot() {\n        return this._routerState.pathFromRoot(this);\n    }\n    get paramMap() {\n        if (!this._paramMap) {\n            this._paramMap = convertToParamMap(this.params);\n        }\n        return this._paramMap;\n    }\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap = convertToParamMap(this.queryParams);\n        }\n        return this._queryParamMap;\n    }\n    toString() {\n        const url = this.url.map(segment => segment.toString()).join('/');\n        const matched = this.routeConfig ? this.routeConfig.path : '';\n        return `Route(url:'${url}', path:'${matched}')`;\n    }\n}\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * The following example shows how a component is initialized with information\n * from the snapshot of the root node's state at the time of creation.\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass RouterStateSnapshot extends Tree {\n    /** @internal */\n    constructor(\n    /** The url from which this snapshot was created */\n    url, root) {\n        super(root);\n        this.url = url;\n        setRouterState(this, root);\n    }\n    toString() {\n        return serializeNode(this._root);\n    }\n}\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(c => setRouterState(state, c));\n}\nfunction serializeNode(node) {\n    const c = node.children.length > 0 ? ` { ${node.children.map(serializeNode).join(', ')} } ` : '';\n    return `${node.value}${c}`;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        const currentSnapshot = route.snapshot;\n        const nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            route.queryParams.next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            route.fragment.next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            route.params.next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            route.url.next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            route.data.next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        route.data.next(route._futureSnapshot.data);\n    }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n    const equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    const parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    const root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        const value = prevState.value;\n        value._futureSnapshot = curr.value;\n        const children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else {\n        const detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n        if (detachedRouteHandle) {\n            const tree = detachedRouteHandle.route;\n            setFutureSnapshotsOfActivatedRoutes(curr, tree);\n            return tree;\n        }\n        else {\n            const value = createActivatedRoute(curr.value);\n            const children = curr.children.map(c => createNode(routeReuseStrategy, c));\n            return new TreeNode(value, children);\n        }\n    }\n}\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (let i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(child => {\n        for (const p of prevState.children) {\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    const nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    const startingPosition = findStartingPosition(nav, urlTree, route);\n    const segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    let qp = {};\n    if (queryParams) {\n        forEach(queryParams, (value, name) => {\n            qp[name] = Array.isArray(value) ? value.map((v) => `${v}`) : `${value}`;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\nfunction replaceSegment(current, oldSegment, newSegment) {\n    const children = {};\n    forEach(current.children, (c, outletName) => {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nclass Navigation {\n    constructor(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        const cmdWithOutlet = commands.find(c => typeof c === 'object' && c != null && c.outlets);\n        if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    toRoot() {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    }\n}\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    let numberOfDoubleDots = 0;\n    let isAbsolute = false;\n    const res = commands.reduce((res, cmd, cmdIdx) => {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                const outlets = {};\n                forEach(cmd.outlets, (commands, name) => {\n                    outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return [...res, { outlets }];\n            }\n            if (cmd.segmentPath) {\n                return [...res, cmd.segmentPath];\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return [...res, cmd];\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach((urlPart, partIndex) => {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') { //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') { //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return [...res, cmd];\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nclass Position {\n    constructor(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n}\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        const segmentGroup = route.snapshot._urlSegment;\n        // Pathless ActivatedRoute has _lastPathIndex === -1 but should not process children\n        // see issue #26224, #13011, #35687\n        // However, if the ActivatedRoute is the root we should process children like above.\n        const processChildren = segmentGroup === tree.root;\n        return new Position(segmentGroup, processChildren, 0);\n    }\n    const modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    const index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    let g = group;\n    let ci = index;\n    let dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = g.parent;\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return `${command}`;\n}\nfunction getOutlets(commands) {\n    if (typeof commands[0] === 'object' && commands[0] !== null && commands[0].outlets) {\n        return commands[0].outlets;\n    }\n    return { [PRIMARY_OUTLET]: commands };\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    const m = prefixedWith(segmentGroup, startIndex, commands);\n    const slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        const g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        const outlets = getOutlets(commands);\n        const children = {};\n        forEach(outlets, (commands, outlet) => {\n            if (commands !== null) {\n                children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, (child, childOutlet) => {\n            if (outlets[childOutlet] === undefined) {\n                children[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children);\n    }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    let currentCommandIndex = 0;\n    let currentPathIndex = startIndex;\n    const noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        const path = segmentGroup.segments[currentPathIndex];\n        const curr = getPath(commands[currentCommandIndex]);\n        const next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    const paths = segmentGroup.segments.slice(0, startIndex);\n    let i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i] !== null &&\n            commands[i].outlets !== undefined) {\n            const children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            const p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        const curr = getPath(commands[i]);\n        const next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n    const children = {};\n    forEach(outlets, (commands, outlet) => {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\nfunction stringify(params) {\n    const res = {};\n    forEach(params, (v, k) => res[k] = `${v}`);\n    return res;\n}\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst activateRoutes = (rootContexts, routeReuseStrategy, forwardEvent) => map(t => {\n    new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent)\n        .activate(rootContexts);\n    return t;\n});\nclass ActivateRoutes {\n    constructor(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    activate(parentContexts) {\n        const futureRoot = this.futureState._root;\n        const currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    }\n    // De-activate the child route that are not re-used for the future state\n    deactivateChildRoutes(futureNode, currNode, contexts) {\n        const children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(futureChild => {\n            const childOutletName = futureChild.value.outlet;\n            this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, (v, childName) => {\n            this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    }\n    deactivateRoutes(futureNode, currNode, parentContext) {\n        const future = futureNode.value;\n        const curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                const context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    }\n    deactivateRouteAndItsChildren(route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    }\n    detachAndStoreRouteSubtree(route, parentContexts) {\n        const context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            const componentRef = context.outlet.detach();\n            const contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef, route, contexts });\n        }\n    }\n    deactivateRouteAndOutlet(route, parentContexts) {\n        const context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            const children = nodeChildrenAsMap(route);\n            const contexts = route.value.component ? context.children : parentContexts;\n            forEach(children, (v, k) => this.deactivateRouteAndItsChildren(v, contexts));\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    }\n    activateChildRoutes(futureNode, currNode, contexts) {\n        const children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(c => {\n            this.activateRoutes(c, children[c.value.outlet], contexts);\n            this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    }\n    activateRoutes(futureNode, currNode, parentContexts) {\n        const future = futureNode.value;\n        const curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                const context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                const context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    const stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    const config = parentLoadedConfig(future.snapshot);\n                    const cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.attachRef = null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    }\n}\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\nfunction parentLoadedConfig(snapshot) {\n    for (let s = snapshot.parent; s; s = s.parent) {\n        const route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LoadedRouterConfig {\n    constructor(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Simple function check, but generic so type inference will flow. Example:\n *\n * function product(a: number, b: number) {\n *   return a * b;\n * }\n *\n * if (isFunction<product>(fn)) {\n *   return fn(1, 2);\n * } else {\n *   throw \"Must provide the `product` function\";\n * }\n */\nfunction isFunction(v) {\n    return typeof v === 'function';\n}\nfunction isBoolean(v) {\n    return typeof v === 'boolean';\n}\nfunction isUrlTree(v) {\n    return v instanceof UrlTree;\n}\nfunction isCanLoad(guard) {\n    return guard && isFunction(guard.canLoad);\n}\nfunction isCanActivate(guard) {\n    return guard && isFunction(guard.canActivate);\n}\nfunction isCanActivateChild(guard) {\n    return guard && isFunction(guard.canActivateChild);\n}\nfunction isCanDeactivate(guard) {\n    return guard && isFunction(guard.canDeactivate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst INITIAL_VALUE = Symbol('INITIAL_VALUE');\nfunction prioritizedGuardValue() {\n    return switchMap(obs => {\n        return combineLatest(...obs.map(o => o.pipe(take(1), startWith(INITIAL_VALUE))))\n            .pipe(scan((acc, list) => {\n            let isPending = false;\n            return list.reduce((innerAcc, val, i) => {\n                if (innerAcc !== INITIAL_VALUE)\n                    return innerAcc;\n                // Toggle pending flag if any values haven't been set yet\n                if (val === INITIAL_VALUE)\n                    isPending = true;\n                // Any other return values are only valid if we haven't yet hit a pending\n                // call. This guarantees that in the case of a guard at the bottom of the\n                // tree that returns a redirect, we will wait for the higher priority\n                // guard at the top to finish before performing the redirect.\n                if (!isPending) {\n                    // Early return when we hit a `false` value as that should always\n                    // cancel navigation\n                    if (val === false)\n                        return val;\n                    if (i === list.length - 1 || isUrlTree(val)) {\n                        return val;\n                    }\n                }\n                return innerAcc;\n            }, acc);\n        }, INITIAL_VALUE), filter(item => item !== INITIAL_VALUE), map(item => isUrlTree(item) ? item : item === true), //\n        take(1));\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NoMatch {\n    constructor(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n}\nclass AbsoluteRedirect {\n    constructor(urlTree) {\n        this.urlTree = urlTree;\n    }\n}\nfunction noMatch(segmentGroup) {\n    return new Observable((obs) => obs.error(new NoMatch(segmentGroup)));\n}\nfunction absoluteRedirect(newTree) {\n    return new Observable((obs) => obs.error(new AbsoluteRedirect(newTree)));\n}\nfunction namedOutletsRedirect(redirectTo) {\n    return new Observable((obs) => obs.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`)));\n}\nfunction canLoadFails(route) {\n    return new Observable((obs) => obs.error(navigationCancelingError(`Cannot load children because the guard of the route \"path: '${route.path}'\" returned false`)));\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nclass ApplyRedirects {\n    constructor(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(NgModuleRef);\n    }\n    apply() {\n        const expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        const urlTrees$ = expanded$.pipe(map((rootSegmentGroup) => this.createUrlTree(rootSegmentGroup, this.urlTree.queryParams, this.urlTree.fragment)));\n        return urlTrees$.pipe(catchError((e) => {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw this.noMatchError(e);\n            }\n            throw e;\n        }));\n    }\n    match(tree) {\n        const expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        const mapped$ = expanded$.pipe(map((rootSegmentGroup) => this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment)));\n        return mapped$.pipe(catchError((e) => {\n            if (e instanceof NoMatch) {\n                throw this.noMatchError(e);\n            }\n            throw e;\n        }));\n    }\n    noMatchError(e) {\n        return new Error(`Cannot match any routes. URL Segment: '${e.segmentGroup}'`);\n    }\n    createUrlTree(rootCandidate, queryParams, fragment) {\n        const root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], { [PRIMARY_OUTLET]: rootCandidate }) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n    }\n    expandSegmentGroup(ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.expandChildren(ngModule, routes, segmentGroup)\n                .pipe(map((children) => new UrlSegmentGroup([], children)));\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    }\n    // Recursively expand segment groups for all the child outlets\n    expandChildren(ngModule, routes, segmentGroup) {\n        return waitForMap(segmentGroup.children, (childOutlet, child) => this.expandSegmentGroup(ngModule, routes, child, childOutlet));\n    }\n    expandSegment(ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        return of(...routes).pipe(concatMap((r) => {\n            const expanded$ = this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return expanded$.pipe(catchError((e) => {\n                if (e instanceof NoMatch) {\n                    // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                    // talk to Jason\n                    return of(null);\n                }\n                throw e;\n            }));\n        }), first((s) => !!s), catchError((e, _) => {\n            if (e instanceof EmptyError || e.name === 'EmptyError') {\n                if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        }));\n    }\n    noLeftoversInUrl(segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    }\n    expandSegmentAgainstRoute(ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    }\n    expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    }\n    expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet) {\n        const newTree = this.applyRedirectCommands([], route.redirectTo, {});\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap((newSegments) => {\n            const group = new UrlSegmentGroup(newSegments, {});\n            return this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        }));\n    }\n    expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {\n        const { matched, consumedSegments, lastChild, positionalParamSegments } = match(segmentGroup, route, segments);\n        if (!matched)\n            return noMatch(segmentGroup);\n        const newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap((newSegments) => {\n            return this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        }));\n    }\n    matchSegmentAgainstRoute(ngModule, rawSegmentGroup, route, segments) {\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return this.configLoader.load(ngModule.injector, route)\n                    .pipe(map((cfg) => {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                }));\n            }\n            return of(new UrlSegmentGroup(segments, {}));\n        }\n        const { matched, consumedSegments, lastChild } = match(rawSegmentGroup, route, segments);\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        const rawSlicedSegments = segments.slice(lastChild);\n        const childConfig$ = this.getChildConfig(ngModule, route, segments);\n        return childConfig$.pipe(mergeMap((routerConfig) => {\n            const childModule = routerConfig.module;\n            const childConfig = routerConfig.routes;\n            const { segmentGroup, slicedSegments } = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig);\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                const expanded$ = this.expandChildren(childModule, childConfig, segmentGroup);\n                return expanded$.pipe(map((children) => new UrlSegmentGroup(consumedSegments, children)));\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            const expanded$ = this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return expanded$.pipe(map((cs) => new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children)));\n        }));\n    }\n    getChildConfig(ngModule, route, segments) {\n        if (route.children) {\n            // The children belong to the same module\n            return of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return of(route._loadedConfig);\n            }\n            return this.runCanLoadGuards(ngModule.injector, route, segments)\n                .pipe(mergeMap((shouldLoadResult) => {\n                if (shouldLoadResult) {\n                    return this.configLoader.load(ngModule.injector, route)\n                        .pipe(map((cfg) => {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    }));\n                }\n                return canLoadFails(route);\n            }));\n        }\n        return of(new LoadedRouterConfig([], ngModule));\n    }\n    runCanLoadGuards(moduleInjector, route, segments) {\n        const canLoad = route.canLoad;\n        if (!canLoad || canLoad.length === 0)\n            return of(true);\n        const canLoadObservables = canLoad.map((injectionToken) => {\n            const guard = moduleInjector.get(injectionToken);\n            let guardVal;\n            if (isCanLoad(guard)) {\n                guardVal = guard.canLoad(route, segments);\n            }\n            else if (isFunction(guard)) {\n                guardVal = guard(route, segments);\n            }\n            else {\n                throw new Error('Invalid CanLoad guard');\n            }\n            return wrapIntoObservable(guardVal);\n        });\n        return of(canLoadObservables)\n            .pipe(prioritizedGuardValue(), tap((result) => {\n            if (!isUrlTree(result))\n                return;\n            const error = navigationCancelingError(`Redirecting to \"${this.urlSerializer.serialize(result)}\"`);\n            error.url = result;\n            throw error;\n        }), map(result => result === true));\n    }\n    lineralizeSegments(route, urlTree) {\n        let res = [];\n        let c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(route.redirectTo);\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    }\n    applyRedirectCommands(segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    }\n    applyRedirectCreatreUrlTree(redirectTo, urlTree, segments, posParams) {\n        const newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    }\n    createQueryParams(redirectToParams, actualParams) {\n        const res = {};\n        forEach(redirectToParams, (v, k) => {\n            const copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                const sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    }\n    createSegmentGroup(redirectTo, group, segments, posParams) {\n        const updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        let children = {};\n        forEach(group.children, (child, name) => {\n            children[name] = this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    }\n    createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {\n        return redirectToSegments.map(s => s.path.startsWith(':') ? this.findPosParam(redirectTo, s, posParams) :\n            this.findOrReturn(s, actualSegments));\n    }\n    findPosParam(redirectTo, redirectToUrlSegment, posParams) {\n        const pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(`Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);\n        return pos;\n    }\n    findOrReturn(redirectToUrlSegment, actualSegments) {\n        let idx = 0;\n        for (const s of actualSegments) {\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    }\n}\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    const matcher = route.matcher || defaultUrlMatcher;\n    const res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: [],\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: res.consumed,\n        lastChild: res.consumed.length,\n        positionalParamSegments: res.posParams,\n    };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        const s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments };\n    }\n    return { segmentGroup, slicedSegments };\n}\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        const c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    const res = {};\n    for (const r of routes) {\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign(Object.assign({}, children), res);\n}\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    const res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (const r of routes) {\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(r => isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(r => isEmptyPathRedirect(segmentGroup, segments, r));\n}\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction applyRedirects$1(moduleInjector, configLoader, urlSerializer, config) {\n    return function (source) {\n        return source.pipe(switchMap(t => applyRedirects(moduleInjector, configLoader, urlSerializer, t.extractedUrl, config)\n            .pipe(map(urlAfterRedirects => (Object.assign(Object.assign({}, t), { urlAfterRedirects }))))));\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CanActivate {\n    constructor(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n}\nclass CanDeactivate {\n    constructor(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n}\nfunction getAllRouteGuards(future, curr, parentContexts) {\n    const futureRoot = future._root;\n    const currRoot = curr ? curr._root : null;\n    return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n}\nfunction getCanActivateChild(p) {\n    const canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n    if (!canActivateChild || canActivateChild.length === 0)\n        return null;\n    return { node: p, guards: canActivateChild };\n}\nfunction getToken(token, snapshot, moduleInjector) {\n    const config = getClosestLoadedConfig(snapshot);\n    const injector = config ? config.module.injector : moduleInjector;\n    return injector.get(token);\n}\nfunction getClosestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (let s = snapshot.parent; s; s = s.parent) {\n        const route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\nfunction getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks = {\n    canDeactivateChecks: [],\n    canActivateChecks: []\n}) {\n    const prevChildren = nodeChildrenAsMap(currNode);\n    // Process the children of the future route\n    futureNode.children.forEach(c => {\n        getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n        delete prevChildren[c.value.outlet];\n    });\n    // Process any children left from the current route (not active for the future route)\n    forEach(prevChildren, (v, k) => deactivateRouteAndItsChildren(v, contexts.getContext(k), checks));\n    return checks;\n}\nfunction getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks = {\n    canDeactivateChecks: [],\n    canActivateChecks: []\n}) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    const context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n    // reusing the node\n    if (curr && future.routeConfig === curr.routeConfig) {\n        const shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n        if (shouldRun) {\n            checks.canActivateChecks.push(new CanActivate(futurePath));\n        }\n        else {\n            // we need to set the data\n            future.data = curr.data;\n            future._resolvedData = curr._resolvedData;\n        }\n        // If we have a component, we need to go through an outlet.\n        if (future.component) {\n            getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks);\n            // if we have a componentless route, we recurse but keep the same outlet map.\n        }\n        else {\n            getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n        }\n        if (shouldRun) {\n            const component = context && context.outlet && context.outlet.component || null;\n            checks.canDeactivateChecks.push(new CanDeactivate(component, curr));\n        }\n    }\n    else {\n        if (curr) {\n            deactivateRouteAndItsChildren(currNode, context, checks);\n        }\n        checks.canActivateChecks.push(new CanActivate(futurePath));\n        // If we have a component, we need to go through an outlet.\n        if (future.component) {\n            getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks);\n            // if we have a componentless route, we recurse but keep the same outlet map.\n        }\n        else {\n            getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n        }\n    }\n    return checks;\n}\nfunction shouldRunGuardsAndResolvers(curr, future, mode) {\n    if (typeof mode === 'function') {\n        return mode(curr, future);\n    }\n    switch (mode) {\n        case 'pathParamsChange':\n            return !equalPath(curr.url, future.url);\n        case 'pathParamsOrQueryParamsChange':\n            return !equalPath(curr.url, future.url) ||\n                !shallowEqual(curr.queryParams, future.queryParams);\n        case 'always':\n            return true;\n        case 'paramsOrQueryParamsChange':\n            return !equalParamsAndUrlSegments(curr, future) ||\n                !shallowEqual(curr.queryParams, future.queryParams);\n        case 'paramsChange':\n        default:\n            return !equalParamsAndUrlSegments(curr, future);\n    }\n}\nfunction deactivateRouteAndItsChildren(route, context, checks) {\n    const children = nodeChildrenAsMap(route);\n    const r = route.value;\n    forEach(children, (node, childName) => {\n        if (!r.component) {\n            deactivateRouteAndItsChildren(node, context, checks);\n        }\n        else if (context) {\n            deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n        }\n        else {\n            deactivateRouteAndItsChildren(node, null, checks);\n        }\n    });\n    if (!r.component) {\n        checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n    else if (context && context.outlet && context.outlet.isActivated) {\n        checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n    }\n    else {\n        checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction checkGuards(moduleInjector, forwardEvent) {\n    return function (source) {\n        return source.pipe(mergeMap(t => {\n            const { targetSnapshot, currentSnapshot, guards: { canActivateChecks, canDeactivateChecks } } = t;\n            if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n                return of(Object.assign(Object.assign({}, t), { guardsResult: true }));\n            }\n            return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, moduleInjector)\n                .pipe(mergeMap(canDeactivate => {\n                return canDeactivate && isBoolean(canDeactivate) ?\n                    runCanActivateChecks(targetSnapshot, canActivateChecks, moduleInjector, forwardEvent) :\n                    of(canDeactivate);\n            }), map(guardsResult => (Object.assign(Object.assign({}, t), { guardsResult }))));\n        }));\n    };\n}\nfunction runCanDeactivateChecks(checks, futureRSS, currRSS, moduleInjector) {\n    return from(checks).pipe(mergeMap(check => runCanDeactivate(check.component, check.route, currRSS, futureRSS, moduleInjector)), first(result => {\n        return result !== true;\n    }, true));\n}\nfunction runCanActivateChecks(futureSnapshot, checks, moduleInjector, forwardEvent) {\n    return from(checks).pipe(concatMap((check) => {\n        return from([\n            fireChildActivationStart(check.route.parent, forwardEvent),\n            fireActivationStart(check.route, forwardEvent),\n            runCanActivateChild(futureSnapshot, check.path, moduleInjector),\n            runCanActivate(futureSnapshot, check.route, moduleInjector)\n        ])\n            .pipe(concatAll(), first(result => {\n            return result !== true;\n        }, true));\n    }), first(result => {\n        return result !== true;\n    }, true));\n}\n/**\n * This should fire off `ActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireActivationStart(snapshot, forwardEvent) {\n    if (snapshot !== null && forwardEvent) {\n        forwardEvent(new ActivationStart(snapshot));\n    }\n    return of(true);\n}\n/**\n * This should fire off `ChildActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireChildActivationStart(snapshot, forwardEvent) {\n    if (snapshot !== null && forwardEvent) {\n        forwardEvent(new ChildActivationStart(snapshot));\n    }\n    return of(true);\n}\nfunction runCanActivate(futureRSS, futureARS, moduleInjector) {\n    const canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n    if (!canActivate || canActivate.length === 0)\n        return of(true);\n    const canActivateObservables = canActivate.map((c) => {\n        return defer(() => {\n            const guard = getToken(c, futureARS, moduleInjector);\n            let observable;\n            if (isCanActivate(guard)) {\n                observable = wrapIntoObservable(guard.canActivate(futureARS, futureRSS));\n            }\n            else if (isFunction(guard)) {\n                observable = wrapIntoObservable(guard(futureARS, futureRSS));\n            }\n            else {\n                throw new Error('Invalid CanActivate guard');\n            }\n            return observable.pipe(first());\n        });\n    });\n    return of(canActivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanActivateChild(futureRSS, path, moduleInjector) {\n    const futureARS = path[path.length - 1];\n    const canActivateChildGuards = path.slice(0, path.length - 1)\n        .reverse()\n        .map(p => getCanActivateChild(p))\n        .filter(_ => _ !== null);\n    const canActivateChildGuardsMapped = canActivateChildGuards.map((d) => {\n        return defer(() => {\n            const guardsMapped = d.guards.map((c) => {\n                const guard = getToken(c, d.node, moduleInjector);\n                let observable;\n                if (isCanActivateChild(guard)) {\n                    observable = wrapIntoObservable(guard.canActivateChild(futureARS, futureRSS));\n                }\n                else if (isFunction(guard)) {\n                    observable = wrapIntoObservable(guard(futureARS, futureRSS));\n                }\n                else {\n                    throw new Error('Invalid CanActivateChild guard');\n                }\n                return observable.pipe(first());\n            });\n            return of(guardsMapped).pipe(prioritizedGuardValue());\n        });\n    });\n    return of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n}\nfunction runCanDeactivate(component, currARS, currRSS, futureRSS, moduleInjector) {\n    const canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n    if (!canDeactivate || canDeactivate.length === 0)\n        return of(true);\n    const canDeactivateObservables = canDeactivate.map((c) => {\n        const guard = getToken(c, currARS, moduleInjector);\n        let observable;\n        if (isCanDeactivate(guard)) {\n            observable = wrapIntoObservable(guard.canDeactivate(component, currARS, currRSS, futureRSS));\n        }\n        else if (isFunction(guard)) {\n            observable = wrapIntoObservable(guard(component, currARS, currRSS, futureRSS));\n        }\n        else {\n            throw new Error('Invalid CanDeactivate guard');\n        }\n        return observable.pipe(first());\n    });\n    return of(canDeactivateObservables).pipe(prioritizedGuardValue());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NoMatch$1 {\n}\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy = 'emptyOnly', relativeLinkResolution = 'legacy') {\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution)\n        .recognize();\n}\nclass Recognizer {\n    constructor(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n        this.relativeLinkResolution = relativeLinkResolution;\n    }\n    recognize() {\n        try {\n            const rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;\n            const children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            const root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            const rootNode = new TreeNode(root, children);\n            const routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return of(routeState);\n        }\n        catch (e) {\n            return new Observable((obs) => obs.error(e));\n        }\n    }\n    inheritParamsAndData(routeNode) {\n        const route = routeNode.value;\n        const i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(n => this.inheritParamsAndData(n));\n    }\n    processSegmentGroup(config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    }\n    processChildren(config, segmentGroup) {\n        const children = mapChildrenIntoArray(segmentGroup, (child, childOutlet) => this.processSegmentGroup(config, child, childOutlet));\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    }\n    processSegment(config, segmentGroup, segments, outlet) {\n        for (const r of config) {\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    }\n    noLeftoversInUrl(segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    }\n    processSegmentAgainstRoute(route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        let snapshot;\n        let consumedSegments = [];\n        let rawSlicedSegments = [];\n        if (route.path === '**') {\n            const params = segments.length > 0 ? last(segments).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            const result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        const childConfig = getChildConfig(route);\n        const { segmentGroup, slicedSegments } = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution);\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            const children = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        const children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    }\n}\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort((a, b) => {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return route._loadedConfig.routes;\n    }\n    return [];\n}\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    const matcher = route.matcher || defaultUrlMatcher;\n    const res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    const posParams = {};\n    forEach(res.posParams, (v, k) => {\n        posParams[k] = v.path;\n    });\n    const parameters = res.consumed.length > 0 ? Object.assign(Object.assign({}, posParams), res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters };\n}\nfunction checkOutletNameUniqueness(nodes) {\n    const names = {};\n    nodes.forEach(n => {\n        const routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            const p = routeWithSameOutletName.url.map(s => s.toString()).join('/');\n            const c = n.value.url.map(s => s.toString()).join('/');\n            throw new Error(`Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\nfunction getSourceSegmentGroup(segmentGroup) {\n    let s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\nfunction getPathIndexShift(segmentGroup) {\n    let s = segmentGroup;\n    let res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        const s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments };\n    }\n    const s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {\n    const res = {};\n    for (const r of routes) {\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            const s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            if (relativeLinkResolution === 'legacy') {\n                s._segmentIndexShift = segmentGroup.segments.length;\n            }\n            else {\n                s._segmentIndexShift = consumedSegments.length;\n            }\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign(Object.assign({}, children), res);\n}\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    const res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (const r of routes) {\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            const s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET);\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r));\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\nfunction getData(route) {\n    return route.data || {};\n}\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction recognize$1(rootComponentType, config, serializer, paramsInheritanceStrategy, relativeLinkResolution) {\n    return function (source) {\n        return source.pipe(mergeMap(t => recognize(rootComponentType, config, t.urlAfterRedirects, serializer(t.urlAfterRedirects), paramsInheritanceStrategy, relativeLinkResolution)\n            .pipe(map(targetSnapshot => (Object.assign(Object.assign({}, t), { targetSnapshot }))))));\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction resolveData(paramsInheritanceStrategy, moduleInjector) {\n    return function (source) {\n        return source.pipe(mergeMap(t => {\n            const { targetSnapshot, guards: { canActivateChecks } } = t;\n            if (!canActivateChecks.length) {\n                return of(t);\n            }\n            let canActivateChecksResolved = 0;\n            return from(canActivateChecks)\n                .pipe(concatMap(check => runResolve(check.route, targetSnapshot, paramsInheritanceStrategy, moduleInjector)), tap(() => canActivateChecksResolved++), takeLast(1), mergeMap(_ => canActivateChecksResolved === canActivateChecks.length ? of(t) : EMPTY));\n        }));\n    };\n}\nfunction runResolve(futureARS, futureRSS, paramsInheritanceStrategy, moduleInjector) {\n    const resolve = futureARS._resolve;\n    return resolveNode(resolve, futureARS, futureRSS, moduleInjector)\n        .pipe(map((resolvedData) => {\n        futureARS._resolvedData = resolvedData;\n        futureARS.data = Object.assign(Object.assign({}, futureARS.data), inheritedParamsDataResolve(futureARS, paramsInheritanceStrategy).resolve);\n        return null;\n    }));\n}\nfunction resolveNode(resolve, futureARS, futureRSS, moduleInjector) {\n    const keys = Object.keys(resolve);\n    if (keys.length === 0) {\n        return of({});\n    }\n    const data = {};\n    return from(keys).pipe(mergeMap((key) => getResolver(resolve[key], futureARS, futureRSS, moduleInjector)\n        .pipe(tap((value) => {\n        data[key] = value;\n    }))), takeLast(1), mergeMap(() => {\n        // Ensure all resolvers returned values, otherwise don't emit any \"next\" and just complete\n        // the chain which will cancel navigation\n        if (Object.keys(data).length === keys.length) {\n            return of(data);\n        }\n        return EMPTY;\n    }));\n}\nfunction getResolver(injectionToken, futureARS, futureRSS, moduleInjector) {\n    const resolver = getToken(injectionToken, futureARS, moduleInjector);\n    return resolver.resolve ? wrapIntoObservable(resolver.resolve(futureARS, futureRSS)) :\n        wrapIntoObservable(resolver(futureARS, futureRSS));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Perform a side effect through a switchMap for every emission on the source Observable,\n * but return an Observable that is identical to the source. It's essentially the same as\n * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n * it will wait before continuing with the original value.\n */\nfunction switchTap(next) {\n    return function (source) {\n        return source.pipe(switchMap(v => {\n            const nextResult = next(v);\n            if (nextResult) {\n                return from(nextResult).pipe(map(() => v));\n            }\n            return from([v]);\n        }));\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @publicApi\n */\nclass RouteReuseStrategy {\n}\n/**\n * @description\n *\n * This base route reuse strategy only reuses routes when the matched router configs are\n * identical. This prevents components from being destroyed and recreated\n * when just the fragment or query parameters change\n * (that is, the existing component is _reused_).\n *\n * This strategy does not store any routes for later reuse.\n *\n * Angular uses this strategy by default.\n *\n *\n * It can be used as a base class for custom route reuse strategies, i.e. you can create your own\n * class that extends the `BaseRouteReuseStrategy` one.\n * @publicApi\n */\nclass BaseRouteReuseStrategy {\n    /**\n     * Whether the given route should detach for later reuse.\n     * Always returns false for `BaseRouteReuseStrategy`.\n     * */\n    shouldDetach(route) {\n        return false;\n    }\n    /**\n     * A no-op; the route is never stored since this strategy never detaches routes for later re-use.\n     */\n    store(route, detachedTree) { }\n    /** Returns `false`, meaning the route (and its subtree) is never reattached */\n    shouldAttach(route) {\n        return false;\n    }\n    /** Returns `null` because this strategy does not store routes for later re-use. */\n    retrieve(route) {\n        return null;\n    }\n    /**\n     * Determines if a route should be reused.\n     * This strategy returns `true` when the future route config and current route config are\n     * identical.\n     */\n    shouldReuseRoute(future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    }\n}\nclass DefaultRouteReuseStrategy extends BaseRouteReuseStrategy {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nclass ɵEmptyOutletComponent {\n}\nɵEmptyOutletComponent.ɵfac = function ɵEmptyOutletComponent_Factory(t) { return new (t || ɵEmptyOutletComponent)(); };\nɵEmptyOutletComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ɵEmptyOutletComponent, selectors: [[\"ng-component\"]], decls: 1, vars: 0, template: function ɵEmptyOutletComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"router-outlet\");\n    } }, directives: function () { return [RouterOutlet]; }, encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵEmptyOutletComponent, [{\n        type: Component,\n        args: [{ template: `<router-outlet></router-outlet>` }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction validateConfig(config, parentPath = '') {\n    // forEach doesn't iterate undefined values\n    for (let i = 0; i < config.length; i++) {\n        const route = config[i];\n        const fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(`\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);\n    }\n    if (Array.isArray(route)) {\n        throw new Error(`Invalid configuration of route '${fullPath}': Array cannot be specified`);\n    }\n    if (!route.component && !route.children && !route.loadChildren &&\n        (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(`Invalid configuration of route '${fullPath}': a componentless route without children or loadChildren cannot have a named outlet set`);\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and component cannot be used together`);\n    }\n    if (route.path && route.matcher) {\n        throw new Error(`Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}'. One of the following must be provided: component, redirectTo, children or loadChildren`);\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(`Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(`Invalid configuration of route '${fullPath}': path cannot start with a slash`);\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        const exp = `The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`;\n        throw new Error(`Invalid configuration of route '{path: \"${fullPath}\", redirectTo: \"${route.redirectTo}\"}': please provide 'pathMatch'. ${exp}`);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(`Invalid configuration of route '${fullPath}': pathMatch can only be set to 'prefix' or 'full'`);\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return `${parentPath}/`;\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return `${parentPath}/${currentRoute.path}`;\n    }\n}\n/**\n * Makes a copy of the config and adds any default required properties.\n */\nfunction standardizeConfig(r) {\n    const children = r.children && r.children.map(standardizeConfig);\n    const c = children ? Object.assign(Object.assign({}, r), { children }) : Object.assign({}, r);\n    if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n        c.component = ɵEmptyOutletComponent;\n    }\n    return c;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The [DI token](guide/glossary/#di-token) for a router configuration.\n * @see `ROUTES`\n * @publicApi\n */\nconst ROUTES = new InjectionToken('ROUTES');\nclass RouterConfigLoader {\n    constructor(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    load(parentInjector, route) {\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        const moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n        return moduleFactory$.pipe(map((factory) => {\n            if (this.onLoadEndListener) {\n                this.onLoadEndListener(route);\n            }\n            const module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n        }));\n    }\n    loadModuleFactory(loadChildren) {\n        if (typeof loadChildren === 'string') {\n            return from(this.loader.load(loadChildren));\n        }\n        else {\n            return wrapIntoObservable(loadChildren()).pipe(mergeMap((t) => {\n                if (t instanceof NgModuleFactory) {\n                    return of(t);\n                }\n                else {\n                    return from(this.compiler.compileModuleAsync(t));\n                }\n            }));\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a `RouterOutlet`\n *\n * @publicApi\n */\nclass OutletContext {\n    constructor() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n}\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n * @publicApi\n */\nclass ChildrenOutletContexts {\n    constructor() {\n        // contexts for child outlets, by name.\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    onChildOutletCreated(childName, outlet) {\n        const context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    }\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    onChildOutletDestroyed(childName) {\n        const context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    }\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    onOutletDeactivated() {\n        const contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    }\n    onOutletReAttached(contexts) {\n        this.contexts = contexts;\n    }\n    getOrCreateContext(childName) {\n        let context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    }\n    getContext(childName) {\n        return this.contexts.get(childName) || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @publicApi\n */\nclass UrlHandlingStrategy {\n}\n/**\n * @publicApi\n */\nclass DefaultUrlHandlingStrategy {\n    shouldProcessUrl(url) {\n        return true;\n    }\n    extract(url) {\n        return url;\n    }\n    merge(newUrlPart, wholeUrl) {\n        return newUrlPart;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\nfunction defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n    return urlSerializer.parse('/');\n}\n/**\n * @internal\n */\nfunction defaultRouterHook(snapshot, runExtras) {\n    return of(null);\n}\n/**\n * @description\n *\n * A service that provides navigation among views and URL manipulation capabilities.\n *\n * @see `Route`.\n * @see [Routing and Navigation Guide](guide/router).\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass Router {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    constructor(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.lastSuccessfulNavigation = null;\n        this.currentNavigation = null;\n        /**\n         * Tracks the previously seen location change from the location subscription so we can compare\n         * the two latest to see if they are duplicates. See setUpLocationChangeListener.\n         */\n        this.lastLocationChangeInfo = null;\n        this.navigationId = 0;\n        this.isNgZoneEnabled = false;\n        /**\n         * An event stream for routing events in this NgModule.\n         */\n        this.events = new Subject();\n        /**\n         * A handler for navigation errors in this NgModule.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * A handler for errors thrown by `Router.parseUrl(url)`\n         * when `url` contains an invalid character.\n         * The most common case is a `%` sign\n         * that's not encoded and is not part of a percent encoded sequence.\n         */\n        this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n        /**\n         * True if at least one navigation event has occurred,\n         * false otherwise.\n         */\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n        /**\n         * Hooks that enable you to pause navigation,\n         * either before or after the preactivation phase.\n         * Used by `RouterModule`.\n         *\n         * @internal\n         */\n        this.hooks = { beforePreactivation: defaultRouterHook, afterPreactivation: defaultRouterHook };\n        /**\n         * A strategy for extracting and merging URLs.\n         * Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        /**\n         * A strategy for re-using routes.\n         */\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * How to handle a navigation request to the current URL. One of:\n         * - `'ignore'` :  The router ignores the request.\n         * - `'reload'` : The router reloads the URL. Use to implement a \"refresh\" feature.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n         * How to merge parameters, data, and resolved data from parent to child\n         * routes. One of:\n         *\n         * - `'emptyOnly'` : Inherit parent parameters, data, and resolved data\n         * for path-less or component-less routes.\n         * - `'always'` : Inherit parent parameters, data, and resolved data\n         * for all child routes.\n         */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        /**\n         * Determines when the router updates the browser URL.\n         * By default (`\"deferred\"`), updates the browser URL after navigation has finished.\n         * Set to `'eager'` to update the browser URL at the beginning of navigation.\n         * You can choose to update early so that, if navigation fails,\n         * you can show an error message with the URL that failed.\n         */\n        this.urlUpdateStrategy = 'deferred';\n        /**\n         * Enables a bug fix that corrects relative link resolution in components with empty paths.\n         * @see `RouterModule`\n         */\n        this.relativeLinkResolution = 'legacy';\n        const onLoadStart = (r) => this.triggerEvent(new RouteConfigLoadStart(r));\n        const onLoadEnd = (r) => this.triggerEvent(new RouteConfigLoadEnd(r));\n        this.ngModule = injector.get(NgModuleRef);\n        this.console = injector.get(ɵConsole);\n        const ngZone = injector.get(NgZone);\n        this.isNgZoneEnabled = ngZone instanceof NgZone;\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.browserUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.transitions = new BehaviorSubject({\n            id: 0,\n            currentUrlTree: this.currentUrlTree,\n            currentRawUrl: this.currentUrlTree,\n            extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),\n            urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),\n            rawUrl: this.currentUrlTree,\n            extras: {},\n            resolve: null,\n            reject: null,\n            promise: Promise.resolve(true),\n            source: 'imperative',\n            restoredState: null,\n            currentSnapshot: this.routerState.snapshot,\n            targetSnapshot: null,\n            currentRouterState: this.routerState,\n            targetRouterState: null,\n            guards: { canActivateChecks: [], canDeactivateChecks: [] },\n            guardsResult: null,\n        });\n        this.navigations = this.setupNavigations(this.transitions);\n        this.processNavigations();\n    }\n    setupNavigations(transitions) {\n        const eventsSubject = this.events;\n        return transitions.pipe(filter(t => t.id !== 0), \n        // Extract URL\n        map(t => (Object.assign(Object.assign({}, t), { extractedUrl: this.urlHandlingStrategy.extract(t.rawUrl) }))), \n        // Using switchMap so we cancel executing navigations when a new one comes in\n        switchMap(t => {\n            let completed = false;\n            let errored = false;\n            return of(t).pipe(\n            // Store the Navigation object\n            tap(t => {\n                this.currentNavigation = {\n                    id: t.id,\n                    initialUrl: t.currentRawUrl,\n                    extractedUrl: t.extractedUrl,\n                    trigger: t.source,\n                    extras: t.extras,\n                    previousNavigation: this.lastSuccessfulNavigation ? Object.assign(Object.assign({}, this.lastSuccessfulNavigation), { previousNavigation: null }) :\n                        null\n                };\n            }), switchMap(t => {\n                const urlTransition = !this.navigated ||\n                    t.extractedUrl.toString() !== this.browserUrlTree.toString();\n                const processCurrentUrl = (this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n                    this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl);\n                if (processCurrentUrl) {\n                    return of(t).pipe(\n                    // Fire NavigationStart event\n                    switchMap(t => {\n                        const transition = this.transitions.getValue();\n                        eventsSubject.next(new NavigationStart(t.id, this.serializeUrl(t.extractedUrl), t.source, t.restoredState));\n                        if (transition !== this.transitions.getValue()) {\n                            return EMPTY;\n                        }\n                        return [t];\n                    }), \n                    // This delay is required to match old behavior that forced navigation\n                    // to always be async\n                    switchMap(t => Promise.resolve(t)), \n                    // ApplyRedirects\n                    applyRedirects$1(this.ngModule.injector, this.configLoader, this.urlSerializer, this.config), \n                    // Update the currentNavigation\n                    tap(t => {\n                        this.currentNavigation = Object.assign(Object.assign({}, this.currentNavigation), { finalUrl: t.urlAfterRedirects });\n                    }), \n                    // Recognize\n                    recognize$1(this.rootComponentType, this.config, (url) => this.serializeUrl(url), this.paramsInheritanceStrategy, this.relativeLinkResolution), \n                    // Update URL if in `eager` update mode\n                    tap(t => {\n                        if (this.urlUpdateStrategy === 'eager') {\n                            if (!t.extras.skipLocationChange) {\n                                this.setBrowserUrl(t.urlAfterRedirects, !!t.extras.replaceUrl, t.id, t.extras.state);\n                            }\n                            this.browserUrlTree = t.urlAfterRedirects;\n                        }\n                    }), \n                    // Fire RoutesRecognized\n                    tap(t => {\n                        const routesRecognized = new RoutesRecognized(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        eventsSubject.next(routesRecognized);\n                    }));\n                }\n                else {\n                    const processPreviousUrl = urlTransition && this.rawUrlTree &&\n                        this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree);\n                    /* When the current URL shouldn't be processed, but the previous one was,\n                     * we handle this \"error condition\" by navigating to the previously\n                     * successful URL, but leaving the URL intact.*/\n                    if (processPreviousUrl) {\n                        const { id, extractedUrl, source, restoredState, extras } = t;\n                        const navStart = new NavigationStart(id, this.serializeUrl(extractedUrl), source, restoredState);\n                        eventsSubject.next(navStart);\n                        const targetSnapshot = createEmptyState(extractedUrl, this.rootComponentType).snapshot;\n                        return of(Object.assign(Object.assign({}, t), { targetSnapshot, urlAfterRedirects: extractedUrl, extras: Object.assign(Object.assign({}, extras), { skipLocationChange: false, replaceUrl: false }) }));\n                    }\n                    else {\n                        /* When neither the current or previous URL can be processed, do nothing\n                         * other than update router's internal reference to the current \"settled\"\n                         * URL. This way the next navigation will be coming from the current URL\n                         * in the browser.\n                         */\n                        this.rawUrlTree = t.rawUrl;\n                        this.browserUrlTree = t.urlAfterRedirects;\n                        t.resolve(null);\n                        return EMPTY;\n                    }\n                }\n            }), \n            // Before Preactivation\n            switchTap(t => {\n                const { targetSnapshot, id: navigationId, extractedUrl: appliedUrlTree, rawUrl: rawUrlTree, extras: { skipLocationChange, replaceUrl } } = t;\n                return this.hooks.beforePreactivation(targetSnapshot, {\n                    navigationId,\n                    appliedUrlTree,\n                    rawUrlTree,\n                    skipLocationChange: !!skipLocationChange,\n                    replaceUrl: !!replaceUrl,\n                });\n            }), \n            // --- GUARDS ---\n            tap(t => {\n                const guardsStart = new GuardsCheckStart(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                this.triggerEvent(guardsStart);\n            }), map(t => (Object.assign(Object.assign({}, t), { guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, this.rootContexts) }))), checkGuards(this.ngModule.injector, (evt) => this.triggerEvent(evt)), tap(t => {\n                if (isUrlTree(t.guardsResult)) {\n                    const error = navigationCancelingError(`Redirecting to \"${this.serializeUrl(t.guardsResult)}\"`);\n                    error.url = t.guardsResult;\n                    throw error;\n                }\n            }), tap(t => {\n                const guardsEnd = new GuardsCheckEnd(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n                this.triggerEvent(guardsEnd);\n            }), filter(t => {\n                if (!t.guardsResult) {\n                    this.resetUrlToCurrentUrlTree();\n                    const navCancel = new NavigationCancel(t.id, this.serializeUrl(t.extractedUrl), '');\n                    eventsSubject.next(navCancel);\n                    t.resolve(false);\n                    return false;\n                }\n                return true;\n            }), \n            // --- RESOLVE ---\n            switchTap(t => {\n                if (t.guards.canActivateChecks.length) {\n                    return of(t).pipe(tap(t => {\n                        const resolveStart = new ResolveStart(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        this.triggerEvent(resolveStart);\n                    }), switchMap(t => {\n                        let dataResolved = false;\n                        return of(t).pipe(resolveData(this.paramsInheritanceStrategy, this.ngModule.injector), tap({\n                            next: () => dataResolved = true,\n                            complete: () => {\n                                if (!dataResolved) {\n                                    const navCancel = new NavigationCancel(t.id, this.serializeUrl(t.extractedUrl), `At least one route resolver didn't emit any value.`);\n                                    eventsSubject.next(navCancel);\n                                    t.resolve(false);\n                                }\n                            }\n                        }));\n                    }), tap(t => {\n                        const resolveEnd = new ResolveEnd(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        this.triggerEvent(resolveEnd);\n                    }));\n                }\n                return undefined;\n            }), \n            // --- AFTER PREACTIVATION ---\n            switchTap((t) => {\n                const { targetSnapshot, id: navigationId, extractedUrl: appliedUrlTree, rawUrl: rawUrlTree, extras: { skipLocationChange, replaceUrl } } = t;\n                return this.hooks.afterPreactivation(targetSnapshot, {\n                    navigationId,\n                    appliedUrlTree,\n                    rawUrlTree,\n                    skipLocationChange: !!skipLocationChange,\n                    replaceUrl: !!replaceUrl,\n                });\n            }), map((t) => {\n                const targetRouterState = createRouterState(this.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n                return (Object.assign(Object.assign({}, t), { targetRouterState }));\n            }), \n            /* Once here, we are about to activate syncronously. The assumption is this\n               will succeed, and user code may read from the Router service. Therefore\n               before activation, we need to update router properties storing the current\n               URL and the RouterState, as well as updated the browser URL. All this should\n               happen *before* activating. */\n            tap((t) => {\n                this.currentUrlTree = t.urlAfterRedirects;\n                this.rawUrlTree =\n                    this.urlHandlingStrategy.merge(this.currentUrlTree, t.rawUrl);\n                this.routerState = t.targetRouterState;\n                if (this.urlUpdateStrategy === 'deferred') {\n                    if (!t.extras.skipLocationChange) {\n                        this.setBrowserUrl(this.rawUrlTree, !!t.extras.replaceUrl, t.id, t.extras.state);\n                    }\n                    this.browserUrlTree = t.urlAfterRedirects;\n                }\n            }), activateRoutes(this.rootContexts, this.routeReuseStrategy, (evt) => this.triggerEvent(evt)), tap({\n                next() {\n                    completed = true;\n                },\n                complete() {\n                    completed = true;\n                }\n            }), finalize(() => {\n                /* When the navigation stream finishes either through error or success, we\n                 * set the `completed` or `errored` flag. However, there are some situations\n                 * where we could get here without either of those being set. For instance, a\n                 * redirect during NavigationStart. Therefore, this is a catch-all to make\n                 * sure the NavigationCancel\n                 * event is fired when a navigation gets cancelled but not caught by other\n                 * means. */\n                if (!completed && !errored) {\n                    // Must reset to current URL tree here to ensure history.state is set. On a\n                    // fresh page load, if a new navigation comes in before a successful\n                    // navigation completes, there will be nothing in\n                    // history.state.navigationId. This can cause sync problems with AngularJS\n                    // sync code which looks for a value here in order to determine whether or\n                    // not to handle a given popstate event or to leave it to the Angualr\n                    // router.\n                    this.resetUrlToCurrentUrlTree();\n                    const navCancel = new NavigationCancel(t.id, this.serializeUrl(t.extractedUrl), `Navigation ID ${t.id} is not equal to the current navigation id ${this.navigationId}`);\n                    eventsSubject.next(navCancel);\n                    t.resolve(false);\n                }\n                // currentNavigation should always be reset to null here. If navigation was\n                // successful, lastSuccessfulTransition will have already been set. Therefore\n                // we can safely set currentNavigation to null here.\n                this.currentNavigation = null;\n            }), catchError((e) => {\n                errored = true;\n                /* This error type is issued during Redirect, and is handled as a\n                 * cancellation rather than an error. */\n                if (isNavigationCancelingError(e)) {\n                    const redirecting = isUrlTree(e.url);\n                    if (!redirecting) {\n                        // Set property only if we're not redirecting. If we landed on a page and\n                        // redirect to `/` route, the new navigation is going to see the `/`\n                        // isn't a change from the default currentUrlTree and won't navigate.\n                        // This is only applicable with initial navigation, so setting\n                        // `navigated` only when not redirecting resolves this scenario.\n                        this.navigated = true;\n                        this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n                    }\n                    const navCancel = new NavigationCancel(t.id, this.serializeUrl(t.extractedUrl), e.message);\n                    eventsSubject.next(navCancel);\n                    // When redirecting, we need to delay resolving the navigation\n                    // promise and push it to the redirect navigation\n                    if (!redirecting) {\n                        t.resolve(false);\n                    }\n                    else {\n                        // setTimeout is required so this navigation finishes with\n                        // the return EMPTY below. If it isn't allowed to finish\n                        // processing, there can be multiple navigations to the same\n                        // URL.\n                        setTimeout(() => {\n                            const mergedTree = this.urlHandlingStrategy.merge(e.url, this.rawUrlTree);\n                            const extras = {\n                                skipLocationChange: t.extras.skipLocationChange,\n                                replaceUrl: this.urlUpdateStrategy === 'eager'\n                            };\n                            return this.scheduleNavigation(mergedTree, 'imperative', null, extras, { resolve: t.resolve, reject: t.reject, promise: t.promise });\n                        }, 0);\n                    }\n                    /* All other errors should reset to the router's internal URL reference to\n                     * the pre-error state. */\n                }\n                else {\n                    this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n                    const navError = new NavigationError(t.id, this.serializeUrl(t.extractedUrl), e);\n                    eventsSubject.next(navError);\n                    try {\n                        t.resolve(this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        t.reject(ee);\n                    }\n                }\n                return EMPTY;\n            }));\n            // TODO(jasonaden): remove cast once g3 is on updated TypeScript\n        }));\n    }\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    resetRootComponentType(rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    }\n    getTransition() {\n        const transition = this.transitions.value;\n        // This value needs to be set. Other values such as extractedUrl are set on initial navigation\n        // but the urlAfterRedirects may not get set if we aren't processing the new URL *and* not\n        // processing the previous URL.\n        transition.urlAfterRedirects = this.browserUrlTree;\n        return transition;\n    }\n    setTransition(t) {\n        this.transitions.next(Object.assign(Object.assign({}, this.getTransition()), t));\n    }\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    initialNavigation() {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    }\n    /**\n     * Sets up the location change listener. This listener detects navigations triggered from outside\n     * the Router (the browser back/forward buttons, for example) and schedules a corresponding Router\n     * navigation so that the correct events, guards, etc. are triggered.\n     */\n    setUpLocationChangeListener() {\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = this.location.subscribe(event => {\n                const currentChange = this.extractLocationChangeInfoFromEvent(event);\n                if (this.shouldScheduleNavigation(this.lastLocationChangeInfo, currentChange)) {\n                    // The `setTimeout` was added in #12160 and is likely to support Angular/AngularJS\n                    // hybrid apps.\n                    setTimeout(() => {\n                        const { source, state, urlTree } = currentChange;\n                        const extras = { replaceUrl: true };\n                        if (state) {\n                            const stateCopy = Object.assign({}, state);\n                            delete stateCopy.navigationId;\n                            if (Object.keys(stateCopy).length !== 0) {\n                                extras.state = stateCopy;\n                            }\n                        }\n                        this.scheduleNavigation(urlTree, source, state, extras);\n                    }, 0);\n                }\n                this.lastLocationChangeInfo = currentChange;\n            });\n        }\n    }\n    /** Extracts router-related information from a `PopStateEvent`. */\n    extractLocationChangeInfoFromEvent(change) {\n        var _a;\n        return {\n            source: change['type'] === 'popstate' ? 'popstate' : 'hashchange',\n            urlTree: this.parseUrl(change['url']),\n            // Navigations coming from Angular router have a navigationId state\n            // property. When this exists, restore the state.\n            state: ((_a = change.state) === null || _a === void 0 ? void 0 : _a.navigationId) ? change.state : null,\n            transitionId: this.getTransition().id\n        };\n    }\n    /**\n     * Determines whether two events triggered by the Location subscription are due to the same\n     * navigation. The location subscription can fire two events (popstate and hashchange) for a\n     * single navigation. The second one should be ignored, that is, we should not schedule another\n     * navigation in the Router.\n     */\n    shouldScheduleNavigation(previous, current) {\n        if (!previous)\n            return true;\n        const sameDestination = current.urlTree.toString() === previous.urlTree.toString();\n        const eventsOccurredAtSameTime = current.transitionId === previous.transitionId;\n        if (!eventsOccurredAtSameTime || !sameDestination) {\n            return true;\n        }\n        if ((current.source === 'hashchange' && previous.source === 'popstate') ||\n            (current.source === 'popstate' && previous.source === 'hashchange')) {\n            return false;\n        }\n        return true;\n    }\n    /** The current URL. */\n    get url() {\n        return this.serializeUrl(this.currentUrlTree);\n    }\n    /** The current Navigation object if one exists */\n    getCurrentNavigation() {\n        return this.currentNavigation;\n    }\n    /** @internal */\n    triggerEvent(event) {\n        this.events.next(event);\n    }\n    /**\n     * Resets the route configuration used for navigation and generating links.\n     *\n     * @param config The route array for the new configuration.\n     *\n     * @usageNotes\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    resetConfig(config) {\n        validateConfig(config);\n        this.config = config.map(standardizeConfig);\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.dispose();\n    }\n    /** Disposes of the router. */\n    dispose() {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = undefined;\n        }\n    }\n    /**\n     * Appends URL segments to the current URL tree to create a new URL tree.\n     *\n     * @param commands An array of URL fragments with which to construct the new URL tree.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL tree or the one provided  in the `relativeTo`\n     * property of the options object, if supplied.\n     * @param navigationExtras Options that control the navigation strategy. This function\n     * only uses properties in `NavigationExtras` that would change the provided URL.\n     * @returns The new URL tree.\n     *\n     * @usageNotes\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it,\n     * // you can do the following:\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    createUrlTree(commands, navigationExtras = {}) {\n        const { relativeTo, queryParams, fragment, preserveQueryParams, queryParamsHandling, preserveFragment } = navigationExtras;\n        if (isDevMode() && preserveQueryParams && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        const a = relativeTo || this.routerState.root;\n        const f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        let q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign(Object.assign({}, this.currentUrlTree.queryParams), queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, q, f);\n    }\n    /**\n     * Navigates to a view using an absolute route path.\n     *\n     * @param url An absolute path for a defined route. The function does not apply any delta to the\n     *     current URL.\n     * @param extras An object containing properties that modify the navigation strategy.\n     * The function ignores any properties in the `NavigationExtras` that would change the\n     * provided URL.\n     *\n     * @returns A Promise that resolves to 'true' when navigation succeeds,\n     * to 'false' when navigation fails, or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to an absolute path.\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/router)\n     *\n     */\n    navigateByUrl(url, extras = { skipLocationChange: false }) {\n        if (isDevMode() && this.isNgZoneEnabled && !NgZone.isInAngularZone()) {\n            this.console.warn(`Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?`);\n        }\n        const urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n        const mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n    }\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * @param commands An array of URL fragments with which to construct the target URL.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL or the one provided  in the `relativeTo` property\n     * of the options object, if supplied.\n     * @param extras An options object that determines how the URL should be constructed or\n     *     interpreted.\n     *\n     * @returns A Promise that resolves to `true` when navigation succeeds, to `false` when navigation\n     *     fails,\n     * or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to a dynamic route path relative to the current URL.\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL, overriding the default behavior\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/router)\n     *\n     */\n    navigate(commands, extras = { skipLocationChange: false }) {\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    }\n    /** Serializes a `UrlTree` into a string */\n    serializeUrl(url) {\n        return this.urlSerializer.serialize(url);\n    }\n    /** Parses a string into a `UrlTree` */\n    parseUrl(url) {\n        let urlTree;\n        try {\n            urlTree = this.urlSerializer.parse(url);\n        }\n        catch (e) {\n            urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n        }\n        return urlTree;\n    }\n    /** Returns whether the url is activated */\n    isActive(url, exact) {\n        if (isUrlTree(url)) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        const urlTree = this.parseUrl(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    }\n    removeEmptyProps(params) {\n        return Object.keys(params).reduce((result, key) => {\n            const value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    }\n    processNavigations() {\n        this.navigations.subscribe(t => {\n            this.navigated = true;\n            this.lastSuccessfulId = t.id;\n            this.events\n                .next(new NavigationEnd(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(this.currentUrlTree)));\n            this.lastSuccessfulNavigation = this.currentNavigation;\n            this.currentNavigation = null;\n            t.resolve(true);\n        }, e => {\n            this.console.warn(`Unhandled Navigation Error: `);\n        });\n    }\n    scheduleNavigation(rawUrl, source, restoredState, extras, priorPromise) {\n        // * Imperative navigations (router.navigate) might trigger additional navigations to the same\n        //   URL via a popstate event and the locationChangeListener. We should skip these duplicate\n        //   navs. Duplicates may also be triggered by attempts to sync AngularJS and Angular router\n        //   states.\n        // * Imperative navigations can be cancelled by router guards, meaning the URL won't change. If\n        //   the user follows that with a navigation using the back/forward button or manual URL change,\n        //   the destination may be the same as the previous imperative attempt. We should not skip\n        //   these navigations because it's a separate case from the one above -- it's not a duplicate\n        //   navigation.\n        const lastNavigation = this.getTransition();\n        // We don't want to skip duplicate successful navs if they're imperative because\n        // onSameUrlNavigation could be 'reload' (so the duplicate is intended).\n        const browserNavPrecededByRouterNav = source !== 'imperative' && (lastNavigation === null || lastNavigation === void 0 ? void 0 : lastNavigation.source) === 'imperative';\n        const lastNavigationSucceeded = this.lastSuccessfulId === lastNavigation.id;\n        // If the last navigation succeeded or is in flight, we can use the rawUrl as the comparison.\n        // However, if it failed, we should compare to the final result (urlAfterRedirects).\n        const lastNavigationUrl = (lastNavigationSucceeded || this.currentNavigation) ?\n            lastNavigation.rawUrl :\n            lastNavigation.urlAfterRedirects;\n        const duplicateNav = lastNavigationUrl.toString() === rawUrl.toString();\n        if (browserNavPrecededByRouterNav && duplicateNav) {\n            return Promise.resolve(true); // return value is not used\n        }\n        let resolve;\n        let reject;\n        let promise;\n        if (priorPromise) {\n            resolve = priorPromise.resolve;\n            reject = priorPromise.reject;\n            promise = priorPromise.promise;\n        }\n        else {\n            promise = new Promise((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n        }\n        const id = ++this.navigationId;\n        this.setTransition({\n            id,\n            source,\n            restoredState,\n            currentUrlTree: this.currentUrlTree,\n            currentRawUrl: this.rawUrlTree,\n            rawUrl,\n            extras,\n            resolve,\n            reject,\n            promise,\n            currentSnapshot: this.routerState.snapshot,\n            currentRouterState: this.routerState\n        });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch((e) => {\n            return Promise.reject(e);\n        });\n    }\n    setBrowserUrl(url, replaceUrl, id, state) {\n        const path = this.urlSerializer.serialize(url);\n        state = state || {};\n        if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n            // TODO(jasonaden): Remove first `navigationId` and rely on `ng` namespace.\n            this.location.replaceState(path, '', Object.assign(Object.assign({}, state), { navigationId: id }));\n        }\n        else {\n            this.location.go(path, '', Object.assign(Object.assign({}, state), { navigationId: id }));\n        }\n    }\n    resetStateAndUrl(storedState, storedUrl, rawUrl) {\n        this.routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    }\n    resetUrlToCurrentUrlTree() {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n    }\n}\nRouter.ɵfac = function Router_Factory(t) { return new (t || Router)(ɵngcc0.ɵɵinject(ɵngcc0.Type), ɵngcc0.ɵɵinject(UrlSerializer), ɵngcc0.ɵɵinject(ChildrenOutletContexts), ɵngcc0.ɵɵinject(ɵngcc1.Location), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgModuleFactoryLoader), ɵngcc0.ɵɵinject(ɵngcc0.Compiler), ɵngcc0.ɵɵinject(undefined)); };\nRouter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Router, factory: Router.ɵfac });\nRouter.ctorParameters = () => [\n    { type: Type },\n    { type: UrlSerializer },\n    { type: ChildrenOutletContexts },\n    { type: Location },\n    { type: Injector },\n    { type: NgModuleFactoryLoader },\n    { type: Compiler },\n    { type: undefined }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Router, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.Type }, { type: UrlSerializer }, { type: ChildrenOutletContexts }, { type: ɵngcc1.Location }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgModuleFactoryLoader }, { type: ɵngcc0.Compiler }, { type: undefined }]; }, null); })();\nfunction validateCommands(commands) {\n    for (let i = 0; i < commands.length; i++) {\n        const cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(`The requested path contains ${cmd} segment at index ${i}`);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * When applied to an element in a template, makes that element a link\n * that initiates navigation to a route. Navigation opens one or more routed components\n * in one or more `<router-outlet>` locations on the page.\n *\n * Given a route configuration `[{ path: 'user/:name', component: UserCmp }]`,\n * the following creates a static link to the route:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * You can use dynamic values to generate the link.\n * For a dynamic link, pass an array of path segments,\n * followed by the params for each segment.\n * For example, `['/team', teamId, 'user', userName, {details: true}]`\n * generates a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one term and combined with dynamic segements.\n * For example, `['/team/11/user', userName, {details: true}]`\n *\n * The input that you provide to the link is treated as a delta to the current URL.\n * For instance, suppose the current URL is `/user/(box//aux:team)`.\n * The link `<a [routerLink]=\"['/user/jim']\">Jim</a>` creates the URL\n * `/user/(jim//aux:team)`.\n * See {@link Router#createUrlTree createUrlTree} for more information.\n *\n * @usageNotes\n *\n * You can use absolute or relative paths in a link, set query parameters,\n * control how parameters are handled, and keep a history of navigation states.\n *\n * ### Relative link paths\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * * If the first segment begins with `/`, the router looks up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router\n *   looks in the children of the current activated route.\n * * If the first segment begins with `../`, the router goes up one level in the route tree.\n *\n * ### Setting and handling query params and fragments\n *\n * The following link adds a query parameter and a fragment to the generated URL:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * By default, the directive constructs the new URL using the given query parameters.\n * The example generates the link: `/user/bob?debug=true#education`.\n *\n * You can instruct the directive to handle query parameters differently\n * by specifying the `queryParamsHandling` option in the link.\n * Allowed values are:\n *\n *  - `'merge'`: Merge the given `queryParams` into the current query params.\n *  - `'preserve'`: Preserve the current query params.\n *\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * See {@link NavigationExtras.queryParamsHandling NavigationExtras#queryParamsHandling}.\n *\n * ### Preserving navigation history\n *\n * You can provide a `state` value to be persisted to the browser's\n * [`History.state` property](https://developer.mozilla.org/en-US/docs/Web/API/History#Properties).\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n *   link to user component\n * </a>\n * ```\n *\n * Use {@link Router.getCurrentNavigation() Router#getCurrentNavigation} to retrieve a saved\n * navigation-state value. For example, to capture the `tracingId` during the `NavigationStart`\n * event:\n *\n * ```\n * // Get NavigationStart events\n * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n *   const navigation = router.getCurrentNavigation();\n *   tracingService.trace({id: navigation.extras.state.tracingId});\n * });\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterLink {\n    constructor(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        /** @internal */\n        this.onChanges = new Subject();\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        // This is subscribed to by `RouterLinkActive` so that it knows to update when there are changes\n        // to the RouterLinks it's tracking.\n        this.onChanges.next(this);\n    }\n    /**\n     * Commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n     *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n     *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n     *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`\n     * @see {@link Router#createUrlTree Router#createUrlTree}\n     */\n    set routerLink(commands) {\n        if (commands != null) {\n            this.commands = Array.isArray(commands) ? commands : [commands];\n        }\n        else {\n            this.commands = [];\n        }\n    }\n    /**\n     * @deprecated As of Angular v4.0 use `queryParamsHandling` instead.\n     */\n    set preserveQueryParams(value) {\n        if (isDevMode() && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n        }\n        this.preserve = value;\n    }\n    /** @nodoc */\n    onClick() {\n        const extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n            state: this.state,\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    }\n    get urlTree() {\n        return this.router.createUrlTree(this.commands, {\n            relativeTo: this.route,\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            preserveQueryParams: attrBoolValue(this.preserve),\n            queryParamsHandling: this.queryParamsHandling,\n            preserveFragment: attrBoolValue(this.preserveFragment),\n        });\n    }\n}\nRouterLink.ɵfac = function RouterLink_Factory(t) { return new (t || RouterLink)(ɵngcc0.ɵɵdirectiveInject(Router), ɵngcc0.ɵɵdirectiveInject(ActivatedRoute), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nRouterLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterLink, selectors: [[\"\", \"routerLink\", \"\", 5, \"a\", 5, \"area\"]], hostBindings: function RouterLink_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function RouterLink_click_HostBindingHandler() { return ctx.onClick(); });\n    } }, inputs: { routerLink: \"routerLink\", preserveQueryParams: \"preserveQueryParams\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\", state: \"state\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nRouterLink.ctorParameters = () => [\n    { type: Router },\n    { type: ActivatedRoute },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nRouterLink.propDecorators = {\n    queryParams: [{ type: Input }],\n    fragment: [{ type: Input }],\n    queryParamsHandling: [{ type: Input }],\n    preserveFragment: [{ type: Input }],\n    skipLocationChange: [{ type: Input }],\n    replaceUrl: [{ type: Input }],\n    state: [{ type: Input }],\n    routerLink: [{ type: Input }],\n    preserveQueryParams: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterLink, [{\n        type: Directive,\n        args: [{ selector: ':not(a):not(area)[routerLink]' }]\n    }], function () { return [{ type: Router }, { type: ActivatedRoute }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { routerLink: [{\n            type: Input\n        }], preserveQueryParams: [{\n            type: Input\n        }], \n    /** @nodoc */\n    onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], queryParams: [{\n            type: Input\n        }], fragment: [{\n            type: Input\n        }], queryParamsHandling: [{\n            type: Input\n        }], preserveFragment: [{\n            type: Input\n        }], skipLocationChange: [{\n            type: Input\n        }], replaceUrl: [{\n            type: Input\n        }], state: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterLinkWithHref {\n    constructor(router, route, locationStrategy) {\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        /** @internal */\n        this.onChanges = new Subject();\n        this.subscription = router.events.subscribe((s) => {\n            if (s instanceof NavigationEnd) {\n                this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    /**\n     * Commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n     *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n     *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n     *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`\n     * @see {@link Router#createUrlTree Router#createUrlTree}\n     */\n    set routerLink(commands) {\n        if (commands != null) {\n            this.commands = Array.isArray(commands) ? commands : [commands];\n        }\n        else {\n            this.commands = [];\n        }\n    }\n    /**\n     * @deprecated As of Angular v4.0 use `queryParamsHandling` instead.\n     */\n    set preserveQueryParams(value) {\n        if (isDevMode() && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        this.preserve = value;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this.updateTargetUrlAndHref();\n        this.onChanges.next(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    /** @nodoc */\n    onClick(button, ctrlKey, shiftKey, altKey, metaKey) {\n        if (button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        const extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n            state: this.state\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    }\n    updateTargetUrlAndHref() {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    }\n    get urlTree() {\n        return this.router.createUrlTree(this.commands, {\n            relativeTo: this.route,\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            preserveQueryParams: attrBoolValue(this.preserve),\n            queryParamsHandling: this.queryParamsHandling,\n            preserveFragment: attrBoolValue(this.preserveFragment),\n        });\n    }\n}\nRouterLinkWithHref.ɵfac = function RouterLinkWithHref_Factory(t) { return new (t || RouterLinkWithHref)(ɵngcc0.ɵɵdirectiveInject(Router), ɵngcc0.ɵɵdirectiveInject(ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocationStrategy)); };\nRouterLinkWithHref.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterLinkWithHref, selectors: [[\"a\", \"routerLink\", \"\"], [\"area\", \"routerLink\", \"\"]], hostVars: 2, hostBindings: function RouterLinkWithHref_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function RouterLinkWithHref_click_HostBindingHandler($event) { return ctx.onClick($event.button, $event.ctrlKey, $event.shiftKey, $event.altKey, $event.metaKey); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"href\", ctx.href, ɵngcc0.ɵɵsanitizeUrl);\n        ɵngcc0.ɵɵattribute(\"target\", ctx.target);\n    } }, inputs: { routerLink: \"routerLink\", preserveQueryParams: \"preserveQueryParams\", target: \"target\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\", state: \"state\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nRouterLinkWithHref.ctorParameters = () => [\n    { type: Router },\n    { type: ActivatedRoute },\n    { type: LocationStrategy }\n];\nRouterLinkWithHref.propDecorators = {\n    target: [{ type: HostBinding, args: ['attr.target',] }, { type: Input }],\n    queryParams: [{ type: Input }],\n    fragment: [{ type: Input }],\n    queryParamsHandling: [{ type: Input }],\n    preserveFragment: [{ type: Input }],\n    skipLocationChange: [{ type: Input }],\n    replaceUrl: [{ type: Input }],\n    state: [{ type: Input }],\n    href: [{ type: HostBinding }],\n    routerLink: [{ type: Input }],\n    preserveQueryParams: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click',\n                ['$event.button', '$event.ctrlKey', '$event.shiftKey', '$event.altKey', '$event.metaKey'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterLinkWithHref, [{\n        type: Directive,\n        args: [{ selector: 'a[routerLink],area[routerLink]' }]\n    }], function () { return [{ type: Router }, { type: ActivatedRoute }, { type: ɵngcc1.LocationStrategy }]; }, { routerLink: [{\n            type: Input\n        }], preserveQueryParams: [{\n            type: Input\n        }], \n    /** @nodoc */\n    onClick: [{\n            type: HostListener,\n            args: ['click',\n                ['$event.button', '$event.ctrlKey', '$event.shiftKey', '$event.altKey', '$event.metaKey']]\n        }], href: [{\n            type: HostBinding\n        }], target: [{\n            type: HostBinding,\n            args: ['attr.target']\n        }, {\n            type: Input\n        }], queryParams: [{\n            type: Input\n        }], fragment: [{\n            type: Input\n        }], queryParamsHandling: [{\n            type: Input\n        }], preserveFragment: [{\n            type: Input\n        }], skipLocationChange: [{\n            type: Input\n        }], replaceUrl: [{\n            type: Input\n        }], state: [{\n            type: Input\n        }] }); })();\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * @description\n *\n * Tracks whether the linked route of an element is currently active, and allows you\n * to specify one or more CSS classes to add to the element when the linked route\n * is active.\n *\n * Use this directive to create a visual distinction for elements associated with an active route.\n * For example, the following code highlights the word \"Bob\" when the the router\n * activates the associated route:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * Whenever the URL is either '/user' or '/user/bob', the \"active-link\" class is\n * added to the anchor tag. If the URL changes, the class is removed.\n *\n * You can set more than one class using a space-separated string or an array.\n * For example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * To add the classes only when the URL matches the link exactly, add the option `exact: true`:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * To directly check the `isActive` status of the link, assign the `RouterLinkActive`\n * instance to a template variable.\n * For example, the following checks the status without assigning any CSS classes:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * You can apply the `RouterLinkActive` directive to an ancestor of linked elements.\n * For example, the following sets the active-link class on the `<div>`  parent tag\n * when the URL is either '/user/jim' or '/user/bob'.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterLinkActive {\n    constructor(router, element, renderer, cdr, link, linkWithHref) {\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.link = link;\n        this.linkWithHref = linkWithHref;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.routerEventsSubscription = router.events.subscribe((s) => {\n            if (s instanceof NavigationEnd) {\n                this.update();\n            }\n        });\n    }\n    /** @nodoc */\n    ngAfterContentInit() {\n        // `of(null)` is used to force subscribe body to execute once immediately (like `startWith`).\n        from([this.links.changes, this.linksWithHrefs.changes, of(null)])\n            .pipe(mergeAll())\n            .subscribe(_ => {\n            this.update();\n            this.subscribeToEachLinkOnChanges();\n        });\n    }\n    subscribeToEachLinkOnChanges() {\n        var _a;\n        (_a = this.linkInputChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        const allLinkChanges = [...this.links.toArray(), ...this.linksWithHrefs.toArray(), this.link, this.linkWithHref]\n            .filter((link) => !!link)\n            .map(link => link.onChanges);\n        this.linkInputChangesSubscription = from(allLinkChanges).pipe(mergeAll()).subscribe(link => {\n            if (this.isActive !== this.isLinkActive(this.router)(link)) {\n                this.update();\n            }\n        });\n    }\n    set routerLinkActive(data) {\n        const classes = Array.isArray(data) ? data : data.split(' ');\n        this.classes = classes.filter(c => !!c);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this.update();\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        var _a;\n        this.routerEventsSubscription.unsubscribe();\n        (_a = this.linkInputChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n    update() {\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(() => {\n            const hasActiveLinks = this.hasActiveLinks();\n            if (this.isActive !== hasActiveLinks) {\n                this.isActive = hasActiveLinks;\n                this.cdr.markForCheck();\n                this.classes.forEach((c) => {\n                    if (hasActiveLinks) {\n                        this.renderer.addClass(this.element.nativeElement, c);\n                    }\n                    else {\n                        this.renderer.removeClass(this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    }\n    isLinkActive(router) {\n        return (link) => router.isActive(link.urlTree, this.routerLinkActiveOptions.exact);\n    }\n    hasActiveLinks() {\n        const isActiveCheckFn = this.isLinkActive(this.router);\n        return this.link && isActiveCheckFn(this.link) ||\n            this.linkWithHref && isActiveCheckFn(this.linkWithHref) ||\n            this.links.some(isActiveCheckFn) || this.linksWithHrefs.some(isActiveCheckFn);\n    }\n}\nRouterLinkActive.ɵfac = function RouterLinkActive_Factory(t) { return new (t || RouterLinkActive)(ɵngcc0.ɵɵdirectiveInject(Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(RouterLink, 8), ɵngcc0.ɵɵdirectiveInject(RouterLinkWithHref, 8)); };\nRouterLinkActive.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterLinkActive, selectors: [[\"\", \"routerLinkActive\", \"\"]], contentQueries: function RouterLinkActive_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, RouterLink, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, RouterLinkWithHref, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.links = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.linksWithHrefs = _t);\n    } }, inputs: { routerLinkActiveOptions: \"routerLinkActiveOptions\", routerLinkActive: \"routerLinkActive\" }, exportAs: [\"routerLinkActive\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nRouterLinkActive.ctorParameters = () => [\n    { type: Router },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef },\n    { type: RouterLink, decorators: [{ type: Optional }] },\n    { type: RouterLinkWithHref, decorators: [{ type: Optional }] }\n];\nRouterLinkActive.propDecorators = {\n    links: [{ type: ContentChildren, args: [RouterLink, { descendants: true },] }],\n    linksWithHrefs: [{ type: ContentChildren, args: [RouterLinkWithHref, { descendants: true },] }],\n    routerLinkActiveOptions: [{ type: Input }],\n    routerLinkActive: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterLinkActive, [{\n        type: Directive,\n        args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive'\n            }]\n    }], function () { return [{ type: Router }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }, { type: RouterLink, decorators: [{\n                type: Optional\n            }] }, { type: RouterLinkWithHref, decorators: [{\n                type: Optional\n            }] }]; }, { routerLinkActiveOptions: [{\n            type: Input\n        }], routerLinkActive: [{\n            type: Input\n        }], links: [{\n            type: ContentChildren,\n            args: [RouterLink, { descendants: true }]\n        }], linksWithHrefs: [{\n            type: ContentChildren,\n            args: [RouterLinkWithHref, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * Each outlet can have a unique name, determined by the optional `name` attribute.\n * The name cannot be set or changed dynamically. If not set, default value is \"primary\".\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * Named outlets can be the targets of secondary routes.\n * The `Route` object for a secondary route has an `outlet` property to identify the target outlet:\n *\n * `{path: <base-path>, component: <component>, outlet: <target_outlet_name>}`\n *\n * Using named outlets and secondary routes, you can target multiple outlets in\n * the same `RouterLink` directive.\n *\n * The router keeps track of separate branches in a navigation tree for each named outlet and\n * generates a representation of that tree in the URL.\n * The URL for a secondary route uses the following syntax to specify both the primary and secondary\n * routes at the same time:\n *\n * `http://base-path/primary-route-path(outlet-name:route-path)`\n *\n * A router outlet emits an activate event when a new component is instantiated,\n * and a deactivate event when a component is destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n *\n * @see [Routing tutorial](guide/router-tutorial-toh#named-outlets \"Example of a named\n * outlet and secondary route configuration\").\n * @see `RouterLink`\n * @see `Route`\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterOutlet {\n    constructor(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new EventEmitter();\n        this.deactivateEvents = new EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.parentContexts.onChildOutletDestroyed(this.name);\n    }\n    /** @nodoc */\n    ngOnInit() {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            const context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    }\n    get isActivated() {\n        return !!this.activated;\n    }\n    get component() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        return this.activated.instance;\n    }\n    get activatedRoute() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        return this._activatedRoute;\n    }\n    get activatedRouteData() {\n        if (this._activatedRoute) {\n            return this._activatedRoute.snapshot.data;\n        }\n        return {};\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    detach() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        const cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    attach(ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    }\n    deactivate() {\n        if (this.activated) {\n            const c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    }\n    activateWith(activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        const snapshot = activatedRoute._futureSnapshot;\n        const component = snapshot.routeConfig.component;\n        resolver = resolver || this.resolver;\n        const factory = resolver.resolveComponentFactory(component);\n        const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        const injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    }\n}\nRouterOutlet.ɵfac = function RouterOutlet_Factory(t) { return new (t || RouterOutlet)(ɵngcc0.ɵɵdirectiveInject(ChildrenOutletContexts), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinjectAttribute('name'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nRouterOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterOutlet, selectors: [[\"router-outlet\"]], outputs: { activateEvents: \"activate\", deactivateEvents: \"deactivate\" }, exportAs: [\"outlet\"] });\nRouterOutlet.ctorParameters = () => [\n    { type: ChildrenOutletContexts },\n    { type: ViewContainerRef },\n    { type: ComponentFactoryResolver },\n    { type: String, decorators: [{ type: Attribute, args: ['name',] }] },\n    { type: ChangeDetectorRef }\n];\nRouterOutlet.propDecorators = {\n    activateEvents: [{ type: Output, args: ['activate',] }],\n    deactivateEvents: [{ type: Output, args: ['deactivate',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterOutlet, [{\n        type: Directive,\n        args: [{ selector: 'router-outlet', exportAs: 'outlet' }]\n    }], function () { return [{ type: ChildrenOutletContexts }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['name']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { activateEvents: [{\n            type: Output,\n            args: ['activate']\n        }], deactivateEvents: [{\n            type: Output,\n            args: ['deactivate']\n        }] }); })();\nclass OutletInjector {\n    constructor(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    get(token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @publicApi\n */\nclass PreloadingStrategy {\n}\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouterModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @publicApi\n */\nclass PreloadAllModules {\n    preload(route, fn) {\n        return fn().pipe(catchError(() => of(null)));\n    }\n}\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @publicApi\n */\nclass NoPreloading {\n    preload(route, fn) {\n        return of(null);\n    }\n}\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * @publicApi\n */\nclass RouterPreloader {\n    constructor(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        const onStartLoad = (r) => router.triggerEvent(new RouteConfigLoadStart(r));\n        const onEndLoad = (r) => router.triggerEvent(new RouteConfigLoadEnd(r));\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    setUpPreloading() {\n        this.subscription =\n            this.router.events\n                .pipe(filter((e) => e instanceof NavigationEnd), concatMap(() => this.preload()))\n                .subscribe(() => { });\n    }\n    preload() {\n        const ngModule = this.injector.get(NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    processRoutes(ngModule, routes) {\n        const res = [];\n        for (const route of routes) {\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                const childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return from(res).pipe(mergeAll(), map((_) => void 0));\n    }\n    preloadConfig(ngModule, route) {\n        return this.preloadingStrategy.preload(route, () => {\n            const loaded$ = this.loader.load(ngModule.injector, route);\n            return loaded$.pipe(mergeMap((config) => {\n                route._loadedConfig = config;\n                return this.processRoutes(config.module, config.routes);\n            }));\n        });\n    }\n}\nRouterPreloader.ɵfac = function RouterPreloader_Factory(t) { return new (t || RouterPreloader)(ɵngcc0.ɵɵinject(Router), ɵngcc0.ɵɵinject(ɵngcc0.NgModuleFactoryLoader), ɵngcc0.ɵɵinject(ɵngcc0.Compiler), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(PreloadingStrategy)); };\nRouterPreloader.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RouterPreloader, factory: RouterPreloader.ɵfac });\nRouterPreloader.ctorParameters = () => [\n    { type: Router },\n    { type: NgModuleFactoryLoader },\n    { type: Compiler },\n    { type: Injector },\n    { type: PreloadingStrategy }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterPreloader, [{\n        type: Injectable\n    }], function () { return [{ type: Router }, { type: ɵngcc0.NgModuleFactoryLoader }, { type: ɵngcc0.Compiler }, { type: ɵngcc0.Injector }, { type: PreloadingStrategy }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass RouterScroller {\n    constructor(router, \n    /** @docsNotRequired */ viewportScroller, options = {}) {\n        this.router = router;\n        this.viewportScroller = viewportScroller;\n        this.options = options;\n        this.lastId = 0;\n        this.lastSource = 'imperative';\n        this.restoredId = 0;\n        this.store = {};\n        // Default both options to 'disabled'\n        options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';\n        options.anchorScrolling = options.anchorScrolling || 'disabled';\n    }\n    init() {\n        // we want to disable the automatic scrolling because having two places\n        // responsible for scrolling results race conditions, especially given\n        // that browser don't implement this behavior consistently\n        if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.setHistoryScrollRestoration('manual');\n        }\n        this.routerEventsSubscription = this.createScrollEvents();\n        this.scrollEventsSubscription = this.consumeScrollEvents();\n    }\n    createScrollEvents() {\n        return this.router.events.subscribe(e => {\n            if (e instanceof NavigationStart) {\n                // store the scroll position of the current stable navigations.\n                this.store[this.lastId] = this.viewportScroller.getScrollPosition();\n                this.lastSource = e.navigationTrigger;\n                this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n            }\n            else if (e instanceof NavigationEnd) {\n                this.lastId = e.id;\n                this.scheduleScrollEvent(e, this.router.parseUrl(e.urlAfterRedirects).fragment);\n            }\n        });\n    }\n    consumeScrollEvents() {\n        return this.router.events.subscribe(e => {\n            if (!(e instanceof Scroll))\n                return;\n            // a popstate event. The pop state event will always ignore anchor scrolling.\n            if (e.position) {\n                if (this.options.scrollPositionRestoration === 'top') {\n                    this.viewportScroller.scrollToPosition([0, 0]);\n                }\n                else if (this.options.scrollPositionRestoration === 'enabled') {\n                    this.viewportScroller.scrollToPosition(e.position);\n                }\n                // imperative navigation \"forward\"\n            }\n            else {\n                if (e.anchor && this.options.anchorScrolling === 'enabled') {\n                    this.viewportScroller.scrollToAnchor(e.anchor);\n                }\n                else if (this.options.scrollPositionRestoration !== 'disabled') {\n                    this.viewportScroller.scrollToPosition([0, 0]);\n                }\n            }\n        });\n    }\n    scheduleScrollEvent(routerEvent, anchor) {\n        this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.routerEventsSubscription) {\n            this.routerEventsSubscription.unsubscribe();\n        }\n        if (this.scrollEventsSubscription) {\n            this.scrollEventsSubscription.unsubscribe();\n        }\n    }\n}\nRouterScroller.ɵfac = function RouterScroller_Factory(t) { return new (t || RouterScroller)(ɵngcc0.ɵɵinject(Router), ɵngcc0.ɵɵinject(ɵngcc1.ViewportScroller), ɵngcc0.ɵɵinject(undefined)); };\nRouterScroller.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RouterScroller, factory: RouterScroller.ɵfac });\nRouterScroller.ctorParameters = () => [\n    { type: Router },\n    { type: ViewportScroller },\n    { type: undefined }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterScroller, [{\n        type: Injectable\n    }], function () { return [{ type: Router }, { type: ɵngcc1.ViewportScroller }, { type: undefined }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directives defined in the `RouterModule`.\n */\nconst ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent];\n/**\n * A [DI token](guide/glossary/#di-token) for the router service.\n *\n * @publicApi\n */\nconst ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/**\n * @docsNotRequired\n */\nconst ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\nconst ɵ0 = { enableTracing: false };\nconst ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            UrlSerializer, ChildrenOutletContexts, Location, Injector, NgModuleFactoryLoader, Compiler,\n            ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()],\n            [RouteReuseStrategy, new Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: ɵ0 },\n];\nfunction routerNgProbeToken() {\n    return new NgProbeToken('Router', Router);\n}\n/**\n * @description\n *\n * Adds directives and providers for in-app navigation among views defined in an application.\n * Use the Angular `Router` service to declaratively specify application states and manage state\n * transitions.\n *\n * You can import this NgModule multiple times, once for each lazy-loaded bundle.\n * However, only one `Router` service can be active.\n * To ensure this, there are two ways to register routes when importing this module:\n *\n * * The `forRoot()` method creates an `NgModule` that contains all the directives, the given\n * routes, and the `Router` service itself.\n * * The `forChild()` method creates an `NgModule` that contains all the directives and the given\n * routes, but does not include the `Router` service.\n *\n * @see [Routing and Navigation guide](guide/router) for an\n * overview of how the `Router` service should be used.\n *\n * @publicApi\n */\nclass RouterModule {\n    // Note: We are injecting the Router so it gets created eagerly...\n    constructor(guard, router) { }\n    /**\n     * Creates and configures a module with all the router providers and directives.\n     * Optionally sets up an application listener to perform an initial navigation.\n     *\n     * When registering the NgModule at the root, import as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the application.\n     * @param config An `ExtraOptions` configuration object that controls how navigation is performed.\n     * @return The new `NgModule`.\n     *\n     */\n    static forRoot(routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new Optional(), new SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION]\n                },\n                {\n                    provide: RouterScroller,\n                    useFactory: createRouterScroller,\n                    deps: [Router, ViewportScroller, ROUTER_CONFIGURATION]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    }\n    /**\n     * Creates a module with all the router directives and a provider registering routes,\n     * without creating a new Router service.\n     * When registering for submodules and lazy-loaded submodules, create the NgModule as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the submodule.\n     * @return The new NgModule.\n     *\n     */\n    static forChild(routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    }\n}\nRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RouterModule });\nRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function RouterModule_Factory(t) { return new (t || RouterModule)(ɵngcc0.ɵɵinject(ROUTER_FORROOT_GUARD, 8), ɵngcc0.ɵɵinject(Router, 8)); } });\nRouterModule.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD,] }] },\n    { type: Router, decorators: [{ type: Optional }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RouterModule, { declarations: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent], exports: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterModule, [{\n        type: NgModule,\n        args: [{\n                declarations: ROUTER_DIRECTIVES,\n                exports: ROUTER_DIRECTIVES,\n                entryComponents: [ɵEmptyOutletComponent]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ROUTER_FORROOT_GUARD]\n            }] }, { type: Router, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nfunction createRouterScroller(router, viewportScroller, config) {\n    if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n    }\n    return new RouterScroller(router, viewportScroller, config);\n}\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options = {}) {\n    return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(`RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.`);\n    }\n    return 'guarded';\n}\n/**\n * Registers a [DI provider](guide/glossary#provider) for a set of routes.\n * @param routes The route configuration to provide.\n *\n * @usageNotes\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * @publicApi\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\nfunction setupRouter(urlSerializer, contexts, location, injector, loader, compiler, config, opts = {}, urlHandlingStrategy, routeReuseStrategy) {\n    const router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.malformedUriErrorHandler) {\n        router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n    }\n    if (opts.enableTracing) {\n        const dom = ɵgetDOM();\n        router.events.subscribe((e) => {\n            dom.logGroup(`Router Event: ${e.constructor.name}`);\n            dom.log(e.toString());\n            dom.log(e);\n            dom.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    if (opts.urlUpdateStrategy) {\n        router.urlUpdateStrategy = opts.urlUpdateStrategy;\n    }\n    if (opts.relativeLinkResolution) {\n        router.relativeLinkResolution = opts.relativeLinkResolution;\n    }\n    return router;\n}\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * Router initialization requires two steps:\n *\n * First, we start the navigation in a `APP_INITIALIZER` to block the bootstrap if\n * a resolver or a guard executes asynchronously.\n *\n * Next, we actually run activation in a `BOOTSTRAP_LISTENER`, using the\n * `afterPreactivation` hook provided by the router.\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nclass RouterInitializer {\n    constructor(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new Subject();\n    }\n    appInitializer() {\n        const p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(() => {\n            let resolve = null;\n            const res = new Promise(r => resolve = r);\n            const router = this.injector.get(Router);\n            const opts = this.injector.get(ROUTER_CONFIGURATION);\n            if (this.isLegacyDisabled(opts) || this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = () => {\n                    // only the initial navigation should be delayed\n                    if (!this.initNavigation) {\n                        this.initNavigation = true;\n                        resolve(true);\n                        return this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return of(null);\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(`Invalid initialNavigation options: '${opts.initialNavigation}'`);\n            }\n            return res;\n        });\n    }\n    bootstrapListener(bootstrappedComponentRef) {\n        const opts = this.injector.get(ROUTER_CONFIGURATION);\n        const preloader = this.injector.get(RouterPreloader);\n        const routerScroller = this.injector.get(RouterScroller);\n        const router = this.injector.get(Router);\n        const ref = this.injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        routerScroller.init();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(null);\n        this.resultOfPreactivationDone.complete();\n    }\n    isLegacyEnabled(opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    }\n    isLegacyDisabled(opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    }\n}\nRouterInitializer.ɵfac = function RouterInitializer_Factory(t) { return new (t || RouterInitializer)(ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nRouterInitializer.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RouterInitializer, factory: RouterInitializer.ɵfac });\nRouterInitializer.ctorParameters = () => [\n    { type: Injector }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterInitializer, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.Injector }]; }, null); })();\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A [DI token](guide/glossary/#di-token) for the router initializer that\n * is called after the app is bootstrapped.\n *\n * @publicApi\n */\nconst ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('10.1.4');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActivatedRoute, ActivatedRouteSnapshot, ActivationEnd, ActivationStart, BaseRouteReuseStrategy, ChildActivationEnd, ChildActivationStart, ChildrenOutletContexts, DefaultUrlSerializer, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, NoPreloading, OutletContext, PRIMARY_OUTLET, PreloadAllModules, PreloadingStrategy, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, ROUTES, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouteReuseStrategy, Router, RouterEvent, RouterLink, RouterLinkActive, RouterLinkWithHref, RouterModule, RouterOutlet, RouterPreloader, RouterState, RouterStateSnapshot, RoutesRecognized, Scroll, UrlHandlingStrategy, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, convertToParamMap, provideRoutes, ɵEmptyOutletComponent, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, ROUTER_FORROOT_GUARD as ɵangular_packages_router_router_a, routerNgProbeToken as ɵangular_packages_router_router_b, createRouterScroller as ɵangular_packages_router_router_c, provideLocationStrategy as ɵangular_packages_router_router_d, provideForRootGuard as ɵangular_packages_router_router_e, setupRouter as ɵangular_packages_router_router_f, rootRoute as ɵangular_packages_router_router_g, RouterInitializer as ɵangular_packages_router_router_h, getAppInitializer as ɵangular_packages_router_router_i, getBootstrapListener as ɵangular_packages_router_router_j, provideRouterInitializer as ɵangular_packages_router_router_k, ɵEmptyOutletComponent as ɵangular_packages_router_router_l, Tree as ɵangular_packages_router_router_m, TreeNode as ɵangular_packages_router_router_n, RouterScroller as ɵangular_packages_router_router_o, flatten as ɵflatten };\n\n//# sourceMappingURL=router.js.map"]},"metadata":{},"sourceType":"module"}